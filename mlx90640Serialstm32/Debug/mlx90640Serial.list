
mlx90640Serial.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000070b0  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000420  08007170  08007170  00017170  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08007590  08007590  00017590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08007598  08007598  00017598  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0800759c  0800759c  0001759c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000001dc  20000000  080075a0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000108  200001dc  0800777c  000201dc  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  200002e4  0800777c  000202e4  2**0
                  ALLOC
  9 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 10 .debug_info   00010006  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00002715  00000000  00000000  0003020a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000081fc  00000000  00000000  0003291f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000a78  00000000  00000000  0003ab20  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000c50  00000000  00000000  0003b598  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   000066ea  00000000  00000000  0003c1e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00003cef  00000000  00000000  000428d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      0000007c  00000000  00000000  000465c1  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00002c78  00000000  00000000  00046640  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	200001dc 	.word	0x200001dc
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08007154 	.word	0x08007154

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	200001e0 	.word	0x200001e0
 8000100:	08007154 	.word	0x08007154

08000104 <strlen>:
 8000104:	2300      	movs	r3, #0
 8000106:	5cc2      	ldrb	r2, [r0, r3]
 8000108:	3301      	adds	r3, #1
 800010a:	2a00      	cmp	r2, #0
 800010c:	d1fb      	bne.n	8000106 <strlen+0x2>
 800010e:	1e58      	subs	r0, r3, #1
 8000110:	4770      	bx	lr
	...

08000114 <__gnu_thumb1_case_uqi>:
 8000114:	b402      	push	{r1}
 8000116:	4671      	mov	r1, lr
 8000118:	0849      	lsrs	r1, r1, #1
 800011a:	0049      	lsls	r1, r1, #1
 800011c:	5c09      	ldrb	r1, [r1, r0]
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	448e      	add	lr, r1
 8000122:	bc02      	pop	{r1}
 8000124:	4770      	bx	lr
 8000126:	46c0      	nop			; (mov r8, r8)

08000128 <__gnu_thumb1_case_uhi>:
 8000128:	b403      	push	{r0, r1}
 800012a:	4671      	mov	r1, lr
 800012c:	0849      	lsrs	r1, r1, #1
 800012e:	0040      	lsls	r0, r0, #1
 8000130:	0049      	lsls	r1, r1, #1
 8000132:	5a09      	ldrh	r1, [r1, r0]
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	448e      	add	lr, r1
 8000138:	bc03      	pop	{r0, r1}
 800013a:	4770      	bx	lr

0800013c <__udivsi3>:
 800013c:	2200      	movs	r2, #0
 800013e:	0843      	lsrs	r3, r0, #1
 8000140:	428b      	cmp	r3, r1
 8000142:	d374      	bcc.n	800022e <__udivsi3+0xf2>
 8000144:	0903      	lsrs	r3, r0, #4
 8000146:	428b      	cmp	r3, r1
 8000148:	d35f      	bcc.n	800020a <__udivsi3+0xce>
 800014a:	0a03      	lsrs	r3, r0, #8
 800014c:	428b      	cmp	r3, r1
 800014e:	d344      	bcc.n	80001da <__udivsi3+0x9e>
 8000150:	0b03      	lsrs	r3, r0, #12
 8000152:	428b      	cmp	r3, r1
 8000154:	d328      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000156:	0c03      	lsrs	r3, r0, #16
 8000158:	428b      	cmp	r3, r1
 800015a:	d30d      	bcc.n	8000178 <__udivsi3+0x3c>
 800015c:	22ff      	movs	r2, #255	; 0xff
 800015e:	0209      	lsls	r1, r1, #8
 8000160:	ba12      	rev	r2, r2
 8000162:	0c03      	lsrs	r3, r0, #16
 8000164:	428b      	cmp	r3, r1
 8000166:	d302      	bcc.n	800016e <__udivsi3+0x32>
 8000168:	1212      	asrs	r2, r2, #8
 800016a:	0209      	lsls	r1, r1, #8
 800016c:	d065      	beq.n	800023a <__udivsi3+0xfe>
 800016e:	0b03      	lsrs	r3, r0, #12
 8000170:	428b      	cmp	r3, r1
 8000172:	d319      	bcc.n	80001a8 <__udivsi3+0x6c>
 8000174:	e000      	b.n	8000178 <__udivsi3+0x3c>
 8000176:	0a09      	lsrs	r1, r1, #8
 8000178:	0bc3      	lsrs	r3, r0, #15
 800017a:	428b      	cmp	r3, r1
 800017c:	d301      	bcc.n	8000182 <__udivsi3+0x46>
 800017e:	03cb      	lsls	r3, r1, #15
 8000180:	1ac0      	subs	r0, r0, r3
 8000182:	4152      	adcs	r2, r2
 8000184:	0b83      	lsrs	r3, r0, #14
 8000186:	428b      	cmp	r3, r1
 8000188:	d301      	bcc.n	800018e <__udivsi3+0x52>
 800018a:	038b      	lsls	r3, r1, #14
 800018c:	1ac0      	subs	r0, r0, r3
 800018e:	4152      	adcs	r2, r2
 8000190:	0b43      	lsrs	r3, r0, #13
 8000192:	428b      	cmp	r3, r1
 8000194:	d301      	bcc.n	800019a <__udivsi3+0x5e>
 8000196:	034b      	lsls	r3, r1, #13
 8000198:	1ac0      	subs	r0, r0, r3
 800019a:	4152      	adcs	r2, r2
 800019c:	0b03      	lsrs	r3, r0, #12
 800019e:	428b      	cmp	r3, r1
 80001a0:	d301      	bcc.n	80001a6 <__udivsi3+0x6a>
 80001a2:	030b      	lsls	r3, r1, #12
 80001a4:	1ac0      	subs	r0, r0, r3
 80001a6:	4152      	adcs	r2, r2
 80001a8:	0ac3      	lsrs	r3, r0, #11
 80001aa:	428b      	cmp	r3, r1
 80001ac:	d301      	bcc.n	80001b2 <__udivsi3+0x76>
 80001ae:	02cb      	lsls	r3, r1, #11
 80001b0:	1ac0      	subs	r0, r0, r3
 80001b2:	4152      	adcs	r2, r2
 80001b4:	0a83      	lsrs	r3, r0, #10
 80001b6:	428b      	cmp	r3, r1
 80001b8:	d301      	bcc.n	80001be <__udivsi3+0x82>
 80001ba:	028b      	lsls	r3, r1, #10
 80001bc:	1ac0      	subs	r0, r0, r3
 80001be:	4152      	adcs	r2, r2
 80001c0:	0a43      	lsrs	r3, r0, #9
 80001c2:	428b      	cmp	r3, r1
 80001c4:	d301      	bcc.n	80001ca <__udivsi3+0x8e>
 80001c6:	024b      	lsls	r3, r1, #9
 80001c8:	1ac0      	subs	r0, r0, r3
 80001ca:	4152      	adcs	r2, r2
 80001cc:	0a03      	lsrs	r3, r0, #8
 80001ce:	428b      	cmp	r3, r1
 80001d0:	d301      	bcc.n	80001d6 <__udivsi3+0x9a>
 80001d2:	020b      	lsls	r3, r1, #8
 80001d4:	1ac0      	subs	r0, r0, r3
 80001d6:	4152      	adcs	r2, r2
 80001d8:	d2cd      	bcs.n	8000176 <__udivsi3+0x3a>
 80001da:	09c3      	lsrs	r3, r0, #7
 80001dc:	428b      	cmp	r3, r1
 80001de:	d301      	bcc.n	80001e4 <__udivsi3+0xa8>
 80001e0:	01cb      	lsls	r3, r1, #7
 80001e2:	1ac0      	subs	r0, r0, r3
 80001e4:	4152      	adcs	r2, r2
 80001e6:	0983      	lsrs	r3, r0, #6
 80001e8:	428b      	cmp	r3, r1
 80001ea:	d301      	bcc.n	80001f0 <__udivsi3+0xb4>
 80001ec:	018b      	lsls	r3, r1, #6
 80001ee:	1ac0      	subs	r0, r0, r3
 80001f0:	4152      	adcs	r2, r2
 80001f2:	0943      	lsrs	r3, r0, #5
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d301      	bcc.n	80001fc <__udivsi3+0xc0>
 80001f8:	014b      	lsls	r3, r1, #5
 80001fa:	1ac0      	subs	r0, r0, r3
 80001fc:	4152      	adcs	r2, r2
 80001fe:	0903      	lsrs	r3, r0, #4
 8000200:	428b      	cmp	r3, r1
 8000202:	d301      	bcc.n	8000208 <__udivsi3+0xcc>
 8000204:	010b      	lsls	r3, r1, #4
 8000206:	1ac0      	subs	r0, r0, r3
 8000208:	4152      	adcs	r2, r2
 800020a:	08c3      	lsrs	r3, r0, #3
 800020c:	428b      	cmp	r3, r1
 800020e:	d301      	bcc.n	8000214 <__udivsi3+0xd8>
 8000210:	00cb      	lsls	r3, r1, #3
 8000212:	1ac0      	subs	r0, r0, r3
 8000214:	4152      	adcs	r2, r2
 8000216:	0883      	lsrs	r3, r0, #2
 8000218:	428b      	cmp	r3, r1
 800021a:	d301      	bcc.n	8000220 <__udivsi3+0xe4>
 800021c:	008b      	lsls	r3, r1, #2
 800021e:	1ac0      	subs	r0, r0, r3
 8000220:	4152      	adcs	r2, r2
 8000222:	0843      	lsrs	r3, r0, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d301      	bcc.n	800022c <__udivsi3+0xf0>
 8000228:	004b      	lsls	r3, r1, #1
 800022a:	1ac0      	subs	r0, r0, r3
 800022c:	4152      	adcs	r2, r2
 800022e:	1a41      	subs	r1, r0, r1
 8000230:	d200      	bcs.n	8000234 <__udivsi3+0xf8>
 8000232:	4601      	mov	r1, r0
 8000234:	4152      	adcs	r2, r2
 8000236:	4610      	mov	r0, r2
 8000238:	4770      	bx	lr
 800023a:	e7ff      	b.n	800023c <__udivsi3+0x100>
 800023c:	b501      	push	{r0, lr}
 800023e:	2000      	movs	r0, #0
 8000240:	f000 f8f0 	bl	8000424 <__aeabi_idiv0>
 8000244:	bd02      	pop	{r1, pc}
 8000246:	46c0      	nop			; (mov r8, r8)

08000248 <__aeabi_uidivmod>:
 8000248:	2900      	cmp	r1, #0
 800024a:	d0f7      	beq.n	800023c <__udivsi3+0x100>
 800024c:	e776      	b.n	800013c <__udivsi3>
 800024e:	4770      	bx	lr

08000250 <__divsi3>:
 8000250:	4603      	mov	r3, r0
 8000252:	430b      	orrs	r3, r1
 8000254:	d47f      	bmi.n	8000356 <__divsi3+0x106>
 8000256:	2200      	movs	r2, #0
 8000258:	0843      	lsrs	r3, r0, #1
 800025a:	428b      	cmp	r3, r1
 800025c:	d374      	bcc.n	8000348 <__divsi3+0xf8>
 800025e:	0903      	lsrs	r3, r0, #4
 8000260:	428b      	cmp	r3, r1
 8000262:	d35f      	bcc.n	8000324 <__divsi3+0xd4>
 8000264:	0a03      	lsrs	r3, r0, #8
 8000266:	428b      	cmp	r3, r1
 8000268:	d344      	bcc.n	80002f4 <__divsi3+0xa4>
 800026a:	0b03      	lsrs	r3, r0, #12
 800026c:	428b      	cmp	r3, r1
 800026e:	d328      	bcc.n	80002c2 <__divsi3+0x72>
 8000270:	0c03      	lsrs	r3, r0, #16
 8000272:	428b      	cmp	r3, r1
 8000274:	d30d      	bcc.n	8000292 <__divsi3+0x42>
 8000276:	22ff      	movs	r2, #255	; 0xff
 8000278:	0209      	lsls	r1, r1, #8
 800027a:	ba12      	rev	r2, r2
 800027c:	0c03      	lsrs	r3, r0, #16
 800027e:	428b      	cmp	r3, r1
 8000280:	d302      	bcc.n	8000288 <__divsi3+0x38>
 8000282:	1212      	asrs	r2, r2, #8
 8000284:	0209      	lsls	r1, r1, #8
 8000286:	d065      	beq.n	8000354 <__divsi3+0x104>
 8000288:	0b03      	lsrs	r3, r0, #12
 800028a:	428b      	cmp	r3, r1
 800028c:	d319      	bcc.n	80002c2 <__divsi3+0x72>
 800028e:	e000      	b.n	8000292 <__divsi3+0x42>
 8000290:	0a09      	lsrs	r1, r1, #8
 8000292:	0bc3      	lsrs	r3, r0, #15
 8000294:	428b      	cmp	r3, r1
 8000296:	d301      	bcc.n	800029c <__divsi3+0x4c>
 8000298:	03cb      	lsls	r3, r1, #15
 800029a:	1ac0      	subs	r0, r0, r3
 800029c:	4152      	adcs	r2, r2
 800029e:	0b83      	lsrs	r3, r0, #14
 80002a0:	428b      	cmp	r3, r1
 80002a2:	d301      	bcc.n	80002a8 <__divsi3+0x58>
 80002a4:	038b      	lsls	r3, r1, #14
 80002a6:	1ac0      	subs	r0, r0, r3
 80002a8:	4152      	adcs	r2, r2
 80002aa:	0b43      	lsrs	r3, r0, #13
 80002ac:	428b      	cmp	r3, r1
 80002ae:	d301      	bcc.n	80002b4 <__divsi3+0x64>
 80002b0:	034b      	lsls	r3, r1, #13
 80002b2:	1ac0      	subs	r0, r0, r3
 80002b4:	4152      	adcs	r2, r2
 80002b6:	0b03      	lsrs	r3, r0, #12
 80002b8:	428b      	cmp	r3, r1
 80002ba:	d301      	bcc.n	80002c0 <__divsi3+0x70>
 80002bc:	030b      	lsls	r3, r1, #12
 80002be:	1ac0      	subs	r0, r0, r3
 80002c0:	4152      	adcs	r2, r2
 80002c2:	0ac3      	lsrs	r3, r0, #11
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d301      	bcc.n	80002cc <__divsi3+0x7c>
 80002c8:	02cb      	lsls	r3, r1, #11
 80002ca:	1ac0      	subs	r0, r0, r3
 80002cc:	4152      	adcs	r2, r2
 80002ce:	0a83      	lsrs	r3, r0, #10
 80002d0:	428b      	cmp	r3, r1
 80002d2:	d301      	bcc.n	80002d8 <__divsi3+0x88>
 80002d4:	028b      	lsls	r3, r1, #10
 80002d6:	1ac0      	subs	r0, r0, r3
 80002d8:	4152      	adcs	r2, r2
 80002da:	0a43      	lsrs	r3, r0, #9
 80002dc:	428b      	cmp	r3, r1
 80002de:	d301      	bcc.n	80002e4 <__divsi3+0x94>
 80002e0:	024b      	lsls	r3, r1, #9
 80002e2:	1ac0      	subs	r0, r0, r3
 80002e4:	4152      	adcs	r2, r2
 80002e6:	0a03      	lsrs	r3, r0, #8
 80002e8:	428b      	cmp	r3, r1
 80002ea:	d301      	bcc.n	80002f0 <__divsi3+0xa0>
 80002ec:	020b      	lsls	r3, r1, #8
 80002ee:	1ac0      	subs	r0, r0, r3
 80002f0:	4152      	adcs	r2, r2
 80002f2:	d2cd      	bcs.n	8000290 <__divsi3+0x40>
 80002f4:	09c3      	lsrs	r3, r0, #7
 80002f6:	428b      	cmp	r3, r1
 80002f8:	d301      	bcc.n	80002fe <__divsi3+0xae>
 80002fa:	01cb      	lsls	r3, r1, #7
 80002fc:	1ac0      	subs	r0, r0, r3
 80002fe:	4152      	adcs	r2, r2
 8000300:	0983      	lsrs	r3, r0, #6
 8000302:	428b      	cmp	r3, r1
 8000304:	d301      	bcc.n	800030a <__divsi3+0xba>
 8000306:	018b      	lsls	r3, r1, #6
 8000308:	1ac0      	subs	r0, r0, r3
 800030a:	4152      	adcs	r2, r2
 800030c:	0943      	lsrs	r3, r0, #5
 800030e:	428b      	cmp	r3, r1
 8000310:	d301      	bcc.n	8000316 <__divsi3+0xc6>
 8000312:	014b      	lsls	r3, r1, #5
 8000314:	1ac0      	subs	r0, r0, r3
 8000316:	4152      	adcs	r2, r2
 8000318:	0903      	lsrs	r3, r0, #4
 800031a:	428b      	cmp	r3, r1
 800031c:	d301      	bcc.n	8000322 <__divsi3+0xd2>
 800031e:	010b      	lsls	r3, r1, #4
 8000320:	1ac0      	subs	r0, r0, r3
 8000322:	4152      	adcs	r2, r2
 8000324:	08c3      	lsrs	r3, r0, #3
 8000326:	428b      	cmp	r3, r1
 8000328:	d301      	bcc.n	800032e <__divsi3+0xde>
 800032a:	00cb      	lsls	r3, r1, #3
 800032c:	1ac0      	subs	r0, r0, r3
 800032e:	4152      	adcs	r2, r2
 8000330:	0883      	lsrs	r3, r0, #2
 8000332:	428b      	cmp	r3, r1
 8000334:	d301      	bcc.n	800033a <__divsi3+0xea>
 8000336:	008b      	lsls	r3, r1, #2
 8000338:	1ac0      	subs	r0, r0, r3
 800033a:	4152      	adcs	r2, r2
 800033c:	0843      	lsrs	r3, r0, #1
 800033e:	428b      	cmp	r3, r1
 8000340:	d301      	bcc.n	8000346 <__divsi3+0xf6>
 8000342:	004b      	lsls	r3, r1, #1
 8000344:	1ac0      	subs	r0, r0, r3
 8000346:	4152      	adcs	r2, r2
 8000348:	1a41      	subs	r1, r0, r1
 800034a:	d200      	bcs.n	800034e <__divsi3+0xfe>
 800034c:	4601      	mov	r1, r0
 800034e:	4152      	adcs	r2, r2
 8000350:	4610      	mov	r0, r2
 8000352:	4770      	bx	lr
 8000354:	e05d      	b.n	8000412 <__divsi3+0x1c2>
 8000356:	0fca      	lsrs	r2, r1, #31
 8000358:	d000      	beq.n	800035c <__divsi3+0x10c>
 800035a:	4249      	negs	r1, r1
 800035c:	1003      	asrs	r3, r0, #32
 800035e:	d300      	bcc.n	8000362 <__divsi3+0x112>
 8000360:	4240      	negs	r0, r0
 8000362:	4053      	eors	r3, r2
 8000364:	2200      	movs	r2, #0
 8000366:	469c      	mov	ip, r3
 8000368:	0903      	lsrs	r3, r0, #4
 800036a:	428b      	cmp	r3, r1
 800036c:	d32d      	bcc.n	80003ca <__divsi3+0x17a>
 800036e:	0a03      	lsrs	r3, r0, #8
 8000370:	428b      	cmp	r3, r1
 8000372:	d312      	bcc.n	800039a <__divsi3+0x14a>
 8000374:	22fc      	movs	r2, #252	; 0xfc
 8000376:	0189      	lsls	r1, r1, #6
 8000378:	ba12      	rev	r2, r2
 800037a:	0a03      	lsrs	r3, r0, #8
 800037c:	428b      	cmp	r3, r1
 800037e:	d30c      	bcc.n	800039a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	1192      	asrs	r2, r2, #6
 8000384:	428b      	cmp	r3, r1
 8000386:	d308      	bcc.n	800039a <__divsi3+0x14a>
 8000388:	0189      	lsls	r1, r1, #6
 800038a:	1192      	asrs	r2, r2, #6
 800038c:	428b      	cmp	r3, r1
 800038e:	d304      	bcc.n	800039a <__divsi3+0x14a>
 8000390:	0189      	lsls	r1, r1, #6
 8000392:	d03a      	beq.n	800040a <__divsi3+0x1ba>
 8000394:	1192      	asrs	r2, r2, #6
 8000396:	e000      	b.n	800039a <__divsi3+0x14a>
 8000398:	0989      	lsrs	r1, r1, #6
 800039a:	09c3      	lsrs	r3, r0, #7
 800039c:	428b      	cmp	r3, r1
 800039e:	d301      	bcc.n	80003a4 <__divsi3+0x154>
 80003a0:	01cb      	lsls	r3, r1, #7
 80003a2:	1ac0      	subs	r0, r0, r3
 80003a4:	4152      	adcs	r2, r2
 80003a6:	0983      	lsrs	r3, r0, #6
 80003a8:	428b      	cmp	r3, r1
 80003aa:	d301      	bcc.n	80003b0 <__divsi3+0x160>
 80003ac:	018b      	lsls	r3, r1, #6
 80003ae:	1ac0      	subs	r0, r0, r3
 80003b0:	4152      	adcs	r2, r2
 80003b2:	0943      	lsrs	r3, r0, #5
 80003b4:	428b      	cmp	r3, r1
 80003b6:	d301      	bcc.n	80003bc <__divsi3+0x16c>
 80003b8:	014b      	lsls	r3, r1, #5
 80003ba:	1ac0      	subs	r0, r0, r3
 80003bc:	4152      	adcs	r2, r2
 80003be:	0903      	lsrs	r3, r0, #4
 80003c0:	428b      	cmp	r3, r1
 80003c2:	d301      	bcc.n	80003c8 <__divsi3+0x178>
 80003c4:	010b      	lsls	r3, r1, #4
 80003c6:	1ac0      	subs	r0, r0, r3
 80003c8:	4152      	adcs	r2, r2
 80003ca:	08c3      	lsrs	r3, r0, #3
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d301      	bcc.n	80003d4 <__divsi3+0x184>
 80003d0:	00cb      	lsls	r3, r1, #3
 80003d2:	1ac0      	subs	r0, r0, r3
 80003d4:	4152      	adcs	r2, r2
 80003d6:	0883      	lsrs	r3, r0, #2
 80003d8:	428b      	cmp	r3, r1
 80003da:	d301      	bcc.n	80003e0 <__divsi3+0x190>
 80003dc:	008b      	lsls	r3, r1, #2
 80003de:	1ac0      	subs	r0, r0, r3
 80003e0:	4152      	adcs	r2, r2
 80003e2:	d2d9      	bcs.n	8000398 <__divsi3+0x148>
 80003e4:	0843      	lsrs	r3, r0, #1
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d301      	bcc.n	80003ee <__divsi3+0x19e>
 80003ea:	004b      	lsls	r3, r1, #1
 80003ec:	1ac0      	subs	r0, r0, r3
 80003ee:	4152      	adcs	r2, r2
 80003f0:	1a41      	subs	r1, r0, r1
 80003f2:	d200      	bcs.n	80003f6 <__divsi3+0x1a6>
 80003f4:	4601      	mov	r1, r0
 80003f6:	4663      	mov	r3, ip
 80003f8:	4152      	adcs	r2, r2
 80003fa:	105b      	asrs	r3, r3, #1
 80003fc:	4610      	mov	r0, r2
 80003fe:	d301      	bcc.n	8000404 <__divsi3+0x1b4>
 8000400:	4240      	negs	r0, r0
 8000402:	2b00      	cmp	r3, #0
 8000404:	d500      	bpl.n	8000408 <__divsi3+0x1b8>
 8000406:	4249      	negs	r1, r1
 8000408:	4770      	bx	lr
 800040a:	4663      	mov	r3, ip
 800040c:	105b      	asrs	r3, r3, #1
 800040e:	d300      	bcc.n	8000412 <__divsi3+0x1c2>
 8000410:	4240      	negs	r0, r0
 8000412:	b501      	push	{r0, lr}
 8000414:	2000      	movs	r0, #0
 8000416:	f000 f805 	bl	8000424 <__aeabi_idiv0>
 800041a:	bd02      	pop	{r1, pc}

0800041c <__aeabi_idivmod>:
 800041c:	2900      	cmp	r1, #0
 800041e:	d0f8      	beq.n	8000412 <__divsi3+0x1c2>
 8000420:	e716      	b.n	8000250 <__divsi3>
 8000422:	4770      	bx	lr

08000424 <__aeabi_idiv0>:
 8000424:	4770      	bx	lr
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdrcmple>:
 8000428:	4684      	mov	ip, r0
 800042a:	1c10      	adds	r0, r2, #0
 800042c:	4662      	mov	r2, ip
 800042e:	468c      	mov	ip, r1
 8000430:	1c19      	adds	r1, r3, #0
 8000432:	4663      	mov	r3, ip
 8000434:	e000      	b.n	8000438 <__aeabi_cdcmpeq>
 8000436:	46c0      	nop			; (mov r8, r8)

08000438 <__aeabi_cdcmpeq>:
 8000438:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043a:	f000 fff5 	bl	8001428 <__ledf2>
 800043e:	2800      	cmp	r0, #0
 8000440:	d401      	bmi.n	8000446 <__aeabi_cdcmpeq+0xe>
 8000442:	2100      	movs	r1, #0
 8000444:	42c8      	cmn	r0, r1
 8000446:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000448 <__aeabi_dcmpeq>:
 8000448:	b510      	push	{r4, lr}
 800044a:	f000 ff4f 	bl	80012ec <__eqdf2>
 800044e:	4240      	negs	r0, r0
 8000450:	3001      	adds	r0, #1
 8000452:	bd10      	pop	{r4, pc}

08000454 <__aeabi_dcmplt>:
 8000454:	b510      	push	{r4, lr}
 8000456:	f000 ffe7 	bl	8001428 <__ledf2>
 800045a:	2800      	cmp	r0, #0
 800045c:	db01      	blt.n	8000462 <__aeabi_dcmplt+0xe>
 800045e:	2000      	movs	r0, #0
 8000460:	bd10      	pop	{r4, pc}
 8000462:	2001      	movs	r0, #1
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			; (mov r8, r8)

08000468 <__aeabi_dcmple>:
 8000468:	b510      	push	{r4, lr}
 800046a:	f000 ffdd 	bl	8001428 <__ledf2>
 800046e:	2800      	cmp	r0, #0
 8000470:	dd01      	ble.n	8000476 <__aeabi_dcmple+0xe>
 8000472:	2000      	movs	r0, #0
 8000474:	bd10      	pop	{r4, pc}
 8000476:	2001      	movs	r0, #1
 8000478:	bd10      	pop	{r4, pc}
 800047a:	46c0      	nop			; (mov r8, r8)

0800047c <__aeabi_dcmpgt>:
 800047c:	b510      	push	{r4, lr}
 800047e:	f000 ff6f 	bl	8001360 <__gedf2>
 8000482:	2800      	cmp	r0, #0
 8000484:	dc01      	bgt.n	800048a <__aeabi_dcmpgt+0xe>
 8000486:	2000      	movs	r0, #0
 8000488:	bd10      	pop	{r4, pc}
 800048a:	2001      	movs	r0, #1
 800048c:	bd10      	pop	{r4, pc}
 800048e:	46c0      	nop			; (mov r8, r8)

08000490 <__aeabi_dcmpge>:
 8000490:	b510      	push	{r4, lr}
 8000492:	f000 ff65 	bl	8001360 <__gedf2>
 8000496:	2800      	cmp	r0, #0
 8000498:	da01      	bge.n	800049e <__aeabi_dcmpge+0xe>
 800049a:	2000      	movs	r0, #0
 800049c:	bd10      	pop	{r4, pc}
 800049e:	2001      	movs	r0, #1
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	46c0      	nop			; (mov r8, r8)

080004a4 <__aeabi_uldivmod>:
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	d111      	bne.n	80004cc <__aeabi_uldivmod+0x28>
 80004a8:	2a00      	cmp	r2, #0
 80004aa:	d10f      	bne.n	80004cc <__aeabi_uldivmod+0x28>
 80004ac:	2900      	cmp	r1, #0
 80004ae:	d100      	bne.n	80004b2 <__aeabi_uldivmod+0xe>
 80004b0:	2800      	cmp	r0, #0
 80004b2:	d002      	beq.n	80004ba <__aeabi_uldivmod+0x16>
 80004b4:	2100      	movs	r1, #0
 80004b6:	43c9      	mvns	r1, r1
 80004b8:	1c08      	adds	r0, r1, #0
 80004ba:	b407      	push	{r0, r1, r2}
 80004bc:	4802      	ldr	r0, [pc, #8]	; (80004c8 <__aeabi_uldivmod+0x24>)
 80004be:	a102      	add	r1, pc, #8	; (adr r1, 80004c8 <__aeabi_uldivmod+0x24>)
 80004c0:	1840      	adds	r0, r0, r1
 80004c2:	9002      	str	r0, [sp, #8]
 80004c4:	bd03      	pop	{r0, r1, pc}
 80004c6:	46c0      	nop			; (mov r8, r8)
 80004c8:	ffffff5d 	.word	0xffffff5d
 80004cc:	b403      	push	{r0, r1}
 80004ce:	4668      	mov	r0, sp
 80004d0:	b501      	push	{r0, lr}
 80004d2:	9802      	ldr	r0, [sp, #8]
 80004d4:	f000 f806 	bl	80004e4 <__udivmoddi4>
 80004d8:	9b01      	ldr	r3, [sp, #4]
 80004da:	469e      	mov	lr, r3
 80004dc:	b002      	add	sp, #8
 80004de:	bc0c      	pop	{r2, r3}
 80004e0:	4770      	bx	lr
 80004e2:	46c0      	nop			; (mov r8, r8)

080004e4 <__udivmoddi4>:
 80004e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004e6:	4657      	mov	r7, sl
 80004e8:	464e      	mov	r6, r9
 80004ea:	4645      	mov	r5, r8
 80004ec:	46de      	mov	lr, fp
 80004ee:	b5e0      	push	{r5, r6, r7, lr}
 80004f0:	0004      	movs	r4, r0
 80004f2:	b083      	sub	sp, #12
 80004f4:	000d      	movs	r5, r1
 80004f6:	4692      	mov	sl, r2
 80004f8:	4699      	mov	r9, r3
 80004fa:	428b      	cmp	r3, r1
 80004fc:	d82f      	bhi.n	800055e <__udivmoddi4+0x7a>
 80004fe:	d02c      	beq.n	800055a <__udivmoddi4+0x76>
 8000500:	4649      	mov	r1, r9
 8000502:	4650      	mov	r0, sl
 8000504:	f001 fe74 	bl	80021f0 <__clzdi2>
 8000508:	0029      	movs	r1, r5
 800050a:	0006      	movs	r6, r0
 800050c:	0020      	movs	r0, r4
 800050e:	f001 fe6f 	bl	80021f0 <__clzdi2>
 8000512:	1a33      	subs	r3, r6, r0
 8000514:	4698      	mov	r8, r3
 8000516:	3b20      	subs	r3, #32
 8000518:	469b      	mov	fp, r3
 800051a:	d500      	bpl.n	800051e <__udivmoddi4+0x3a>
 800051c:	e074      	b.n	8000608 <__udivmoddi4+0x124>
 800051e:	4653      	mov	r3, sl
 8000520:	465a      	mov	r2, fp
 8000522:	4093      	lsls	r3, r2
 8000524:	001f      	movs	r7, r3
 8000526:	4653      	mov	r3, sl
 8000528:	4642      	mov	r2, r8
 800052a:	4093      	lsls	r3, r2
 800052c:	001e      	movs	r6, r3
 800052e:	42af      	cmp	r7, r5
 8000530:	d829      	bhi.n	8000586 <__udivmoddi4+0xa2>
 8000532:	d026      	beq.n	8000582 <__udivmoddi4+0x9e>
 8000534:	465b      	mov	r3, fp
 8000536:	1ba4      	subs	r4, r4, r6
 8000538:	41bd      	sbcs	r5, r7
 800053a:	2b00      	cmp	r3, #0
 800053c:	da00      	bge.n	8000540 <__udivmoddi4+0x5c>
 800053e:	e079      	b.n	8000634 <__udivmoddi4+0x150>
 8000540:	2200      	movs	r2, #0
 8000542:	2300      	movs	r3, #0
 8000544:	9200      	str	r2, [sp, #0]
 8000546:	9301      	str	r3, [sp, #4]
 8000548:	2301      	movs	r3, #1
 800054a:	465a      	mov	r2, fp
 800054c:	4093      	lsls	r3, r2
 800054e:	9301      	str	r3, [sp, #4]
 8000550:	2301      	movs	r3, #1
 8000552:	4642      	mov	r2, r8
 8000554:	4093      	lsls	r3, r2
 8000556:	9300      	str	r3, [sp, #0]
 8000558:	e019      	b.n	800058e <__udivmoddi4+0xaa>
 800055a:	4282      	cmp	r2, r0
 800055c:	d9d0      	bls.n	8000500 <__udivmoddi4+0x1c>
 800055e:	2200      	movs	r2, #0
 8000560:	2300      	movs	r3, #0
 8000562:	9200      	str	r2, [sp, #0]
 8000564:	9301      	str	r3, [sp, #4]
 8000566:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8000568:	2b00      	cmp	r3, #0
 800056a:	d001      	beq.n	8000570 <__udivmoddi4+0x8c>
 800056c:	601c      	str	r4, [r3, #0]
 800056e:	605d      	str	r5, [r3, #4]
 8000570:	9800      	ldr	r0, [sp, #0]
 8000572:	9901      	ldr	r1, [sp, #4]
 8000574:	b003      	add	sp, #12
 8000576:	bc3c      	pop	{r2, r3, r4, r5}
 8000578:	4690      	mov	r8, r2
 800057a:	4699      	mov	r9, r3
 800057c:	46a2      	mov	sl, r4
 800057e:	46ab      	mov	fp, r5
 8000580:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000582:	42a3      	cmp	r3, r4
 8000584:	d9d6      	bls.n	8000534 <__udivmoddi4+0x50>
 8000586:	2200      	movs	r2, #0
 8000588:	2300      	movs	r3, #0
 800058a:	9200      	str	r2, [sp, #0]
 800058c:	9301      	str	r3, [sp, #4]
 800058e:	4643      	mov	r3, r8
 8000590:	2b00      	cmp	r3, #0
 8000592:	d0e8      	beq.n	8000566 <__udivmoddi4+0x82>
 8000594:	07fb      	lsls	r3, r7, #31
 8000596:	0872      	lsrs	r2, r6, #1
 8000598:	431a      	orrs	r2, r3
 800059a:	4646      	mov	r6, r8
 800059c:	087b      	lsrs	r3, r7, #1
 800059e:	e00e      	b.n	80005be <__udivmoddi4+0xda>
 80005a0:	42ab      	cmp	r3, r5
 80005a2:	d101      	bne.n	80005a8 <__udivmoddi4+0xc4>
 80005a4:	42a2      	cmp	r2, r4
 80005a6:	d80c      	bhi.n	80005c2 <__udivmoddi4+0xde>
 80005a8:	1aa4      	subs	r4, r4, r2
 80005aa:	419d      	sbcs	r5, r3
 80005ac:	2001      	movs	r0, #1
 80005ae:	1924      	adds	r4, r4, r4
 80005b0:	416d      	adcs	r5, r5
 80005b2:	2100      	movs	r1, #0
 80005b4:	3e01      	subs	r6, #1
 80005b6:	1824      	adds	r4, r4, r0
 80005b8:	414d      	adcs	r5, r1
 80005ba:	2e00      	cmp	r6, #0
 80005bc:	d006      	beq.n	80005cc <__udivmoddi4+0xe8>
 80005be:	42ab      	cmp	r3, r5
 80005c0:	d9ee      	bls.n	80005a0 <__udivmoddi4+0xbc>
 80005c2:	3e01      	subs	r6, #1
 80005c4:	1924      	adds	r4, r4, r4
 80005c6:	416d      	adcs	r5, r5
 80005c8:	2e00      	cmp	r6, #0
 80005ca:	d1f8      	bne.n	80005be <__udivmoddi4+0xda>
 80005cc:	465b      	mov	r3, fp
 80005ce:	9800      	ldr	r0, [sp, #0]
 80005d0:	9901      	ldr	r1, [sp, #4]
 80005d2:	1900      	adds	r0, r0, r4
 80005d4:	4169      	adcs	r1, r5
 80005d6:	2b00      	cmp	r3, #0
 80005d8:	db22      	blt.n	8000620 <__udivmoddi4+0x13c>
 80005da:	002b      	movs	r3, r5
 80005dc:	465a      	mov	r2, fp
 80005de:	40d3      	lsrs	r3, r2
 80005e0:	002a      	movs	r2, r5
 80005e2:	4644      	mov	r4, r8
 80005e4:	40e2      	lsrs	r2, r4
 80005e6:	001c      	movs	r4, r3
 80005e8:	465b      	mov	r3, fp
 80005ea:	0015      	movs	r5, r2
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	db2c      	blt.n	800064a <__udivmoddi4+0x166>
 80005f0:	0026      	movs	r6, r4
 80005f2:	409e      	lsls	r6, r3
 80005f4:	0033      	movs	r3, r6
 80005f6:	0026      	movs	r6, r4
 80005f8:	4647      	mov	r7, r8
 80005fa:	40be      	lsls	r6, r7
 80005fc:	0032      	movs	r2, r6
 80005fe:	1a80      	subs	r0, r0, r2
 8000600:	4199      	sbcs	r1, r3
 8000602:	9000      	str	r0, [sp, #0]
 8000604:	9101      	str	r1, [sp, #4]
 8000606:	e7ae      	b.n	8000566 <__udivmoddi4+0x82>
 8000608:	4642      	mov	r2, r8
 800060a:	2320      	movs	r3, #32
 800060c:	1a9b      	subs	r3, r3, r2
 800060e:	4652      	mov	r2, sl
 8000610:	40da      	lsrs	r2, r3
 8000612:	4641      	mov	r1, r8
 8000614:	0013      	movs	r3, r2
 8000616:	464a      	mov	r2, r9
 8000618:	408a      	lsls	r2, r1
 800061a:	0017      	movs	r7, r2
 800061c:	431f      	orrs	r7, r3
 800061e:	e782      	b.n	8000526 <__udivmoddi4+0x42>
 8000620:	4642      	mov	r2, r8
 8000622:	2320      	movs	r3, #32
 8000624:	1a9b      	subs	r3, r3, r2
 8000626:	002a      	movs	r2, r5
 8000628:	4646      	mov	r6, r8
 800062a:	409a      	lsls	r2, r3
 800062c:	0023      	movs	r3, r4
 800062e:	40f3      	lsrs	r3, r6
 8000630:	4313      	orrs	r3, r2
 8000632:	e7d5      	b.n	80005e0 <__udivmoddi4+0xfc>
 8000634:	4642      	mov	r2, r8
 8000636:	2320      	movs	r3, #32
 8000638:	2100      	movs	r1, #0
 800063a:	1a9b      	subs	r3, r3, r2
 800063c:	2200      	movs	r2, #0
 800063e:	9100      	str	r1, [sp, #0]
 8000640:	9201      	str	r2, [sp, #4]
 8000642:	2201      	movs	r2, #1
 8000644:	40da      	lsrs	r2, r3
 8000646:	9201      	str	r2, [sp, #4]
 8000648:	e782      	b.n	8000550 <__udivmoddi4+0x6c>
 800064a:	4642      	mov	r2, r8
 800064c:	2320      	movs	r3, #32
 800064e:	0026      	movs	r6, r4
 8000650:	1a9b      	subs	r3, r3, r2
 8000652:	40de      	lsrs	r6, r3
 8000654:	002f      	movs	r7, r5
 8000656:	46b4      	mov	ip, r6
 8000658:	4097      	lsls	r7, r2
 800065a:	4666      	mov	r6, ip
 800065c:	003b      	movs	r3, r7
 800065e:	4333      	orrs	r3, r6
 8000660:	e7c9      	b.n	80005f6 <__udivmoddi4+0x112>
 8000662:	46c0      	nop			; (mov r8, r8)

08000664 <__aeabi_dadd>:
 8000664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000666:	4645      	mov	r5, r8
 8000668:	46de      	mov	lr, fp
 800066a:	4657      	mov	r7, sl
 800066c:	464e      	mov	r6, r9
 800066e:	030c      	lsls	r4, r1, #12
 8000670:	b5e0      	push	{r5, r6, r7, lr}
 8000672:	004e      	lsls	r6, r1, #1
 8000674:	0fc9      	lsrs	r1, r1, #31
 8000676:	4688      	mov	r8, r1
 8000678:	000d      	movs	r5, r1
 800067a:	0a61      	lsrs	r1, r4, #9
 800067c:	0f44      	lsrs	r4, r0, #29
 800067e:	430c      	orrs	r4, r1
 8000680:	00c7      	lsls	r7, r0, #3
 8000682:	0319      	lsls	r1, r3, #12
 8000684:	0058      	lsls	r0, r3, #1
 8000686:	0fdb      	lsrs	r3, r3, #31
 8000688:	469b      	mov	fp, r3
 800068a:	0a4b      	lsrs	r3, r1, #9
 800068c:	0f51      	lsrs	r1, r2, #29
 800068e:	430b      	orrs	r3, r1
 8000690:	0d76      	lsrs	r6, r6, #21
 8000692:	0d40      	lsrs	r0, r0, #21
 8000694:	0019      	movs	r1, r3
 8000696:	00d2      	lsls	r2, r2, #3
 8000698:	45d8      	cmp	r8, fp
 800069a:	d100      	bne.n	800069e <__aeabi_dadd+0x3a>
 800069c:	e0ae      	b.n	80007fc <__aeabi_dadd+0x198>
 800069e:	1a35      	subs	r5, r6, r0
 80006a0:	2d00      	cmp	r5, #0
 80006a2:	dc00      	bgt.n	80006a6 <__aeabi_dadd+0x42>
 80006a4:	e0f6      	b.n	8000894 <__aeabi_dadd+0x230>
 80006a6:	2800      	cmp	r0, #0
 80006a8:	d10f      	bne.n	80006ca <__aeabi_dadd+0x66>
 80006aa:	4313      	orrs	r3, r2
 80006ac:	d100      	bne.n	80006b0 <__aeabi_dadd+0x4c>
 80006ae:	e0db      	b.n	8000868 <__aeabi_dadd+0x204>
 80006b0:	1e6b      	subs	r3, r5, #1
 80006b2:	2b00      	cmp	r3, #0
 80006b4:	d000      	beq.n	80006b8 <__aeabi_dadd+0x54>
 80006b6:	e137      	b.n	8000928 <__aeabi_dadd+0x2c4>
 80006b8:	1aba      	subs	r2, r7, r2
 80006ba:	4297      	cmp	r7, r2
 80006bc:	41bf      	sbcs	r7, r7
 80006be:	1a64      	subs	r4, r4, r1
 80006c0:	427f      	negs	r7, r7
 80006c2:	1be4      	subs	r4, r4, r7
 80006c4:	2601      	movs	r6, #1
 80006c6:	0017      	movs	r7, r2
 80006c8:	e024      	b.n	8000714 <__aeabi_dadd+0xb0>
 80006ca:	4bc6      	ldr	r3, [pc, #792]	; (80009e4 <__aeabi_dadd+0x380>)
 80006cc:	429e      	cmp	r6, r3
 80006ce:	d04d      	beq.n	800076c <__aeabi_dadd+0x108>
 80006d0:	2380      	movs	r3, #128	; 0x80
 80006d2:	041b      	lsls	r3, r3, #16
 80006d4:	4319      	orrs	r1, r3
 80006d6:	2d38      	cmp	r5, #56	; 0x38
 80006d8:	dd00      	ble.n	80006dc <__aeabi_dadd+0x78>
 80006da:	e107      	b.n	80008ec <__aeabi_dadd+0x288>
 80006dc:	2d1f      	cmp	r5, #31
 80006de:	dd00      	ble.n	80006e2 <__aeabi_dadd+0x7e>
 80006e0:	e138      	b.n	8000954 <__aeabi_dadd+0x2f0>
 80006e2:	2020      	movs	r0, #32
 80006e4:	1b43      	subs	r3, r0, r5
 80006e6:	469a      	mov	sl, r3
 80006e8:	000b      	movs	r3, r1
 80006ea:	4650      	mov	r0, sl
 80006ec:	4083      	lsls	r3, r0
 80006ee:	4699      	mov	r9, r3
 80006f0:	0013      	movs	r3, r2
 80006f2:	4648      	mov	r0, r9
 80006f4:	40eb      	lsrs	r3, r5
 80006f6:	4318      	orrs	r0, r3
 80006f8:	0003      	movs	r3, r0
 80006fa:	4650      	mov	r0, sl
 80006fc:	4082      	lsls	r2, r0
 80006fe:	1e50      	subs	r0, r2, #1
 8000700:	4182      	sbcs	r2, r0
 8000702:	40e9      	lsrs	r1, r5
 8000704:	431a      	orrs	r2, r3
 8000706:	1aba      	subs	r2, r7, r2
 8000708:	1a61      	subs	r1, r4, r1
 800070a:	4297      	cmp	r7, r2
 800070c:	41a4      	sbcs	r4, r4
 800070e:	0017      	movs	r7, r2
 8000710:	4264      	negs	r4, r4
 8000712:	1b0c      	subs	r4, r1, r4
 8000714:	0223      	lsls	r3, r4, #8
 8000716:	d562      	bpl.n	80007de <__aeabi_dadd+0x17a>
 8000718:	0264      	lsls	r4, r4, #9
 800071a:	0a65      	lsrs	r5, r4, #9
 800071c:	2d00      	cmp	r5, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_dadd+0xbe>
 8000720:	e0df      	b.n	80008e2 <__aeabi_dadd+0x27e>
 8000722:	0028      	movs	r0, r5
 8000724:	f001 fd46 	bl	80021b4 <__clzsi2>
 8000728:	0003      	movs	r3, r0
 800072a:	3b08      	subs	r3, #8
 800072c:	2b1f      	cmp	r3, #31
 800072e:	dd00      	ble.n	8000732 <__aeabi_dadd+0xce>
 8000730:	e0d2      	b.n	80008d8 <__aeabi_dadd+0x274>
 8000732:	2220      	movs	r2, #32
 8000734:	003c      	movs	r4, r7
 8000736:	1ad2      	subs	r2, r2, r3
 8000738:	409d      	lsls	r5, r3
 800073a:	40d4      	lsrs	r4, r2
 800073c:	409f      	lsls	r7, r3
 800073e:	4325      	orrs	r5, r4
 8000740:	429e      	cmp	r6, r3
 8000742:	dd00      	ble.n	8000746 <__aeabi_dadd+0xe2>
 8000744:	e0c4      	b.n	80008d0 <__aeabi_dadd+0x26c>
 8000746:	1b9e      	subs	r6, r3, r6
 8000748:	1c73      	adds	r3, r6, #1
 800074a:	2b1f      	cmp	r3, #31
 800074c:	dd00      	ble.n	8000750 <__aeabi_dadd+0xec>
 800074e:	e0f1      	b.n	8000934 <__aeabi_dadd+0x2d0>
 8000750:	2220      	movs	r2, #32
 8000752:	0038      	movs	r0, r7
 8000754:	0029      	movs	r1, r5
 8000756:	1ad2      	subs	r2, r2, r3
 8000758:	40d8      	lsrs	r0, r3
 800075a:	4091      	lsls	r1, r2
 800075c:	4097      	lsls	r7, r2
 800075e:	002c      	movs	r4, r5
 8000760:	4301      	orrs	r1, r0
 8000762:	1e78      	subs	r0, r7, #1
 8000764:	4187      	sbcs	r7, r0
 8000766:	40dc      	lsrs	r4, r3
 8000768:	2600      	movs	r6, #0
 800076a:	430f      	orrs	r7, r1
 800076c:	077b      	lsls	r3, r7, #29
 800076e:	d009      	beq.n	8000784 <__aeabi_dadd+0x120>
 8000770:	230f      	movs	r3, #15
 8000772:	403b      	ands	r3, r7
 8000774:	2b04      	cmp	r3, #4
 8000776:	d005      	beq.n	8000784 <__aeabi_dadd+0x120>
 8000778:	1d3b      	adds	r3, r7, #4
 800077a:	42bb      	cmp	r3, r7
 800077c:	41bf      	sbcs	r7, r7
 800077e:	427f      	negs	r7, r7
 8000780:	19e4      	adds	r4, r4, r7
 8000782:	001f      	movs	r7, r3
 8000784:	0223      	lsls	r3, r4, #8
 8000786:	d52c      	bpl.n	80007e2 <__aeabi_dadd+0x17e>
 8000788:	4b96      	ldr	r3, [pc, #600]	; (80009e4 <__aeabi_dadd+0x380>)
 800078a:	3601      	adds	r6, #1
 800078c:	429e      	cmp	r6, r3
 800078e:	d100      	bne.n	8000792 <__aeabi_dadd+0x12e>
 8000790:	e09a      	b.n	80008c8 <__aeabi_dadd+0x264>
 8000792:	4645      	mov	r5, r8
 8000794:	4b94      	ldr	r3, [pc, #592]	; (80009e8 <__aeabi_dadd+0x384>)
 8000796:	08ff      	lsrs	r7, r7, #3
 8000798:	401c      	ands	r4, r3
 800079a:	0760      	lsls	r0, r4, #29
 800079c:	0576      	lsls	r6, r6, #21
 800079e:	0264      	lsls	r4, r4, #9
 80007a0:	4307      	orrs	r7, r0
 80007a2:	0b24      	lsrs	r4, r4, #12
 80007a4:	0d76      	lsrs	r6, r6, #21
 80007a6:	2100      	movs	r1, #0
 80007a8:	0324      	lsls	r4, r4, #12
 80007aa:	0b23      	lsrs	r3, r4, #12
 80007ac:	0d0c      	lsrs	r4, r1, #20
 80007ae:	4a8f      	ldr	r2, [pc, #572]	; (80009ec <__aeabi_dadd+0x388>)
 80007b0:	0524      	lsls	r4, r4, #20
 80007b2:	431c      	orrs	r4, r3
 80007b4:	4014      	ands	r4, r2
 80007b6:	0533      	lsls	r3, r6, #20
 80007b8:	4323      	orrs	r3, r4
 80007ba:	005b      	lsls	r3, r3, #1
 80007bc:	07ed      	lsls	r5, r5, #31
 80007be:	085b      	lsrs	r3, r3, #1
 80007c0:	432b      	orrs	r3, r5
 80007c2:	0038      	movs	r0, r7
 80007c4:	0019      	movs	r1, r3
 80007c6:	bc3c      	pop	{r2, r3, r4, r5}
 80007c8:	4690      	mov	r8, r2
 80007ca:	4699      	mov	r9, r3
 80007cc:	46a2      	mov	sl, r4
 80007ce:	46ab      	mov	fp, r5
 80007d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007d2:	4664      	mov	r4, ip
 80007d4:	4304      	orrs	r4, r0
 80007d6:	d100      	bne.n	80007da <__aeabi_dadd+0x176>
 80007d8:	e211      	b.n	8000bfe <__aeabi_dadd+0x59a>
 80007da:	0004      	movs	r4, r0
 80007dc:	4667      	mov	r7, ip
 80007de:	077b      	lsls	r3, r7, #29
 80007e0:	d1c6      	bne.n	8000770 <__aeabi_dadd+0x10c>
 80007e2:	4645      	mov	r5, r8
 80007e4:	0760      	lsls	r0, r4, #29
 80007e6:	08ff      	lsrs	r7, r7, #3
 80007e8:	4307      	orrs	r7, r0
 80007ea:	08e4      	lsrs	r4, r4, #3
 80007ec:	4b7d      	ldr	r3, [pc, #500]	; (80009e4 <__aeabi_dadd+0x380>)
 80007ee:	429e      	cmp	r6, r3
 80007f0:	d030      	beq.n	8000854 <__aeabi_dadd+0x1f0>
 80007f2:	0324      	lsls	r4, r4, #12
 80007f4:	0576      	lsls	r6, r6, #21
 80007f6:	0b24      	lsrs	r4, r4, #12
 80007f8:	0d76      	lsrs	r6, r6, #21
 80007fa:	e7d4      	b.n	80007a6 <__aeabi_dadd+0x142>
 80007fc:	1a33      	subs	r3, r6, r0
 80007fe:	469a      	mov	sl, r3
 8000800:	2b00      	cmp	r3, #0
 8000802:	dd78      	ble.n	80008f6 <__aeabi_dadd+0x292>
 8000804:	2800      	cmp	r0, #0
 8000806:	d031      	beq.n	800086c <__aeabi_dadd+0x208>
 8000808:	4876      	ldr	r0, [pc, #472]	; (80009e4 <__aeabi_dadd+0x380>)
 800080a:	4286      	cmp	r6, r0
 800080c:	d0ae      	beq.n	800076c <__aeabi_dadd+0x108>
 800080e:	2080      	movs	r0, #128	; 0x80
 8000810:	0400      	lsls	r0, r0, #16
 8000812:	4301      	orrs	r1, r0
 8000814:	4653      	mov	r3, sl
 8000816:	2b38      	cmp	r3, #56	; 0x38
 8000818:	dc00      	bgt.n	800081c <__aeabi_dadd+0x1b8>
 800081a:	e0e9      	b.n	80009f0 <__aeabi_dadd+0x38c>
 800081c:	430a      	orrs	r2, r1
 800081e:	1e51      	subs	r1, r2, #1
 8000820:	418a      	sbcs	r2, r1
 8000822:	2100      	movs	r1, #0
 8000824:	19d2      	adds	r2, r2, r7
 8000826:	42ba      	cmp	r2, r7
 8000828:	41bf      	sbcs	r7, r7
 800082a:	1909      	adds	r1, r1, r4
 800082c:	427c      	negs	r4, r7
 800082e:	0017      	movs	r7, r2
 8000830:	190c      	adds	r4, r1, r4
 8000832:	0223      	lsls	r3, r4, #8
 8000834:	d5d3      	bpl.n	80007de <__aeabi_dadd+0x17a>
 8000836:	4b6b      	ldr	r3, [pc, #428]	; (80009e4 <__aeabi_dadd+0x380>)
 8000838:	3601      	adds	r6, #1
 800083a:	429e      	cmp	r6, r3
 800083c:	d100      	bne.n	8000840 <__aeabi_dadd+0x1dc>
 800083e:	e13a      	b.n	8000ab6 <__aeabi_dadd+0x452>
 8000840:	2001      	movs	r0, #1
 8000842:	4b69      	ldr	r3, [pc, #420]	; (80009e8 <__aeabi_dadd+0x384>)
 8000844:	401c      	ands	r4, r3
 8000846:	087b      	lsrs	r3, r7, #1
 8000848:	4007      	ands	r7, r0
 800084a:	431f      	orrs	r7, r3
 800084c:	07e0      	lsls	r0, r4, #31
 800084e:	4307      	orrs	r7, r0
 8000850:	0864      	lsrs	r4, r4, #1
 8000852:	e78b      	b.n	800076c <__aeabi_dadd+0x108>
 8000854:	0023      	movs	r3, r4
 8000856:	433b      	orrs	r3, r7
 8000858:	d100      	bne.n	800085c <__aeabi_dadd+0x1f8>
 800085a:	e1cb      	b.n	8000bf4 <__aeabi_dadd+0x590>
 800085c:	2280      	movs	r2, #128	; 0x80
 800085e:	0312      	lsls	r2, r2, #12
 8000860:	4314      	orrs	r4, r2
 8000862:	0324      	lsls	r4, r4, #12
 8000864:	0b24      	lsrs	r4, r4, #12
 8000866:	e79e      	b.n	80007a6 <__aeabi_dadd+0x142>
 8000868:	002e      	movs	r6, r5
 800086a:	e77f      	b.n	800076c <__aeabi_dadd+0x108>
 800086c:	0008      	movs	r0, r1
 800086e:	4310      	orrs	r0, r2
 8000870:	d100      	bne.n	8000874 <__aeabi_dadd+0x210>
 8000872:	e0b4      	b.n	80009de <__aeabi_dadd+0x37a>
 8000874:	1e58      	subs	r0, r3, #1
 8000876:	2800      	cmp	r0, #0
 8000878:	d000      	beq.n	800087c <__aeabi_dadd+0x218>
 800087a:	e0de      	b.n	8000a3a <__aeabi_dadd+0x3d6>
 800087c:	18ba      	adds	r2, r7, r2
 800087e:	42ba      	cmp	r2, r7
 8000880:	419b      	sbcs	r3, r3
 8000882:	1864      	adds	r4, r4, r1
 8000884:	425b      	negs	r3, r3
 8000886:	18e4      	adds	r4, r4, r3
 8000888:	0017      	movs	r7, r2
 800088a:	2601      	movs	r6, #1
 800088c:	0223      	lsls	r3, r4, #8
 800088e:	d5a6      	bpl.n	80007de <__aeabi_dadd+0x17a>
 8000890:	2602      	movs	r6, #2
 8000892:	e7d5      	b.n	8000840 <__aeabi_dadd+0x1dc>
 8000894:	2d00      	cmp	r5, #0
 8000896:	d16e      	bne.n	8000976 <__aeabi_dadd+0x312>
 8000898:	1c70      	adds	r0, r6, #1
 800089a:	0540      	lsls	r0, r0, #21
 800089c:	0d40      	lsrs	r0, r0, #21
 800089e:	2801      	cmp	r0, #1
 80008a0:	dc00      	bgt.n	80008a4 <__aeabi_dadd+0x240>
 80008a2:	e0f9      	b.n	8000a98 <__aeabi_dadd+0x434>
 80008a4:	1ab8      	subs	r0, r7, r2
 80008a6:	4684      	mov	ip, r0
 80008a8:	4287      	cmp	r7, r0
 80008aa:	4180      	sbcs	r0, r0
 80008ac:	1ae5      	subs	r5, r4, r3
 80008ae:	4240      	negs	r0, r0
 80008b0:	1a2d      	subs	r5, r5, r0
 80008b2:	0228      	lsls	r0, r5, #8
 80008b4:	d400      	bmi.n	80008b8 <__aeabi_dadd+0x254>
 80008b6:	e089      	b.n	80009cc <__aeabi_dadd+0x368>
 80008b8:	1bd7      	subs	r7, r2, r7
 80008ba:	42ba      	cmp	r2, r7
 80008bc:	4192      	sbcs	r2, r2
 80008be:	1b1c      	subs	r4, r3, r4
 80008c0:	4252      	negs	r2, r2
 80008c2:	1aa5      	subs	r5, r4, r2
 80008c4:	46d8      	mov	r8, fp
 80008c6:	e729      	b.n	800071c <__aeabi_dadd+0xb8>
 80008c8:	4645      	mov	r5, r8
 80008ca:	2400      	movs	r4, #0
 80008cc:	2700      	movs	r7, #0
 80008ce:	e76a      	b.n	80007a6 <__aeabi_dadd+0x142>
 80008d0:	4c45      	ldr	r4, [pc, #276]	; (80009e8 <__aeabi_dadd+0x384>)
 80008d2:	1af6      	subs	r6, r6, r3
 80008d4:	402c      	ands	r4, r5
 80008d6:	e749      	b.n	800076c <__aeabi_dadd+0x108>
 80008d8:	003d      	movs	r5, r7
 80008da:	3828      	subs	r0, #40	; 0x28
 80008dc:	4085      	lsls	r5, r0
 80008de:	2700      	movs	r7, #0
 80008e0:	e72e      	b.n	8000740 <__aeabi_dadd+0xdc>
 80008e2:	0038      	movs	r0, r7
 80008e4:	f001 fc66 	bl	80021b4 <__clzsi2>
 80008e8:	3020      	adds	r0, #32
 80008ea:	e71d      	b.n	8000728 <__aeabi_dadd+0xc4>
 80008ec:	430a      	orrs	r2, r1
 80008ee:	1e51      	subs	r1, r2, #1
 80008f0:	418a      	sbcs	r2, r1
 80008f2:	2100      	movs	r1, #0
 80008f4:	e707      	b.n	8000706 <__aeabi_dadd+0xa2>
 80008f6:	2b00      	cmp	r3, #0
 80008f8:	d000      	beq.n	80008fc <__aeabi_dadd+0x298>
 80008fa:	e0f3      	b.n	8000ae4 <__aeabi_dadd+0x480>
 80008fc:	1c70      	adds	r0, r6, #1
 80008fe:	0543      	lsls	r3, r0, #21
 8000900:	0d5b      	lsrs	r3, r3, #21
 8000902:	2b01      	cmp	r3, #1
 8000904:	dc00      	bgt.n	8000908 <__aeabi_dadd+0x2a4>
 8000906:	e0ad      	b.n	8000a64 <__aeabi_dadd+0x400>
 8000908:	4b36      	ldr	r3, [pc, #216]	; (80009e4 <__aeabi_dadd+0x380>)
 800090a:	4298      	cmp	r0, r3
 800090c:	d100      	bne.n	8000910 <__aeabi_dadd+0x2ac>
 800090e:	e0d1      	b.n	8000ab4 <__aeabi_dadd+0x450>
 8000910:	18ba      	adds	r2, r7, r2
 8000912:	42ba      	cmp	r2, r7
 8000914:	41bf      	sbcs	r7, r7
 8000916:	1864      	adds	r4, r4, r1
 8000918:	427f      	negs	r7, r7
 800091a:	19e4      	adds	r4, r4, r7
 800091c:	07e7      	lsls	r7, r4, #31
 800091e:	0852      	lsrs	r2, r2, #1
 8000920:	4317      	orrs	r7, r2
 8000922:	0864      	lsrs	r4, r4, #1
 8000924:	0006      	movs	r6, r0
 8000926:	e721      	b.n	800076c <__aeabi_dadd+0x108>
 8000928:	482e      	ldr	r0, [pc, #184]	; (80009e4 <__aeabi_dadd+0x380>)
 800092a:	4285      	cmp	r5, r0
 800092c:	d100      	bne.n	8000930 <__aeabi_dadd+0x2cc>
 800092e:	e093      	b.n	8000a58 <__aeabi_dadd+0x3f4>
 8000930:	001d      	movs	r5, r3
 8000932:	e6d0      	b.n	80006d6 <__aeabi_dadd+0x72>
 8000934:	0029      	movs	r1, r5
 8000936:	3e1f      	subs	r6, #31
 8000938:	40f1      	lsrs	r1, r6
 800093a:	2b20      	cmp	r3, #32
 800093c:	d100      	bne.n	8000940 <__aeabi_dadd+0x2dc>
 800093e:	e08d      	b.n	8000a5c <__aeabi_dadd+0x3f8>
 8000940:	2240      	movs	r2, #64	; 0x40
 8000942:	1ad3      	subs	r3, r2, r3
 8000944:	409d      	lsls	r5, r3
 8000946:	432f      	orrs	r7, r5
 8000948:	1e7d      	subs	r5, r7, #1
 800094a:	41af      	sbcs	r7, r5
 800094c:	2400      	movs	r4, #0
 800094e:	430f      	orrs	r7, r1
 8000950:	2600      	movs	r6, #0
 8000952:	e744      	b.n	80007de <__aeabi_dadd+0x17a>
 8000954:	002b      	movs	r3, r5
 8000956:	0008      	movs	r0, r1
 8000958:	3b20      	subs	r3, #32
 800095a:	40d8      	lsrs	r0, r3
 800095c:	0003      	movs	r3, r0
 800095e:	2d20      	cmp	r5, #32
 8000960:	d100      	bne.n	8000964 <__aeabi_dadd+0x300>
 8000962:	e07d      	b.n	8000a60 <__aeabi_dadd+0x3fc>
 8000964:	2040      	movs	r0, #64	; 0x40
 8000966:	1b45      	subs	r5, r0, r5
 8000968:	40a9      	lsls	r1, r5
 800096a:	430a      	orrs	r2, r1
 800096c:	1e51      	subs	r1, r2, #1
 800096e:	418a      	sbcs	r2, r1
 8000970:	2100      	movs	r1, #0
 8000972:	431a      	orrs	r2, r3
 8000974:	e6c7      	b.n	8000706 <__aeabi_dadd+0xa2>
 8000976:	2e00      	cmp	r6, #0
 8000978:	d050      	beq.n	8000a1c <__aeabi_dadd+0x3b8>
 800097a:	4e1a      	ldr	r6, [pc, #104]	; (80009e4 <__aeabi_dadd+0x380>)
 800097c:	42b0      	cmp	r0, r6
 800097e:	d057      	beq.n	8000a30 <__aeabi_dadd+0x3cc>
 8000980:	2680      	movs	r6, #128	; 0x80
 8000982:	426b      	negs	r3, r5
 8000984:	4699      	mov	r9, r3
 8000986:	0436      	lsls	r6, r6, #16
 8000988:	4334      	orrs	r4, r6
 800098a:	464b      	mov	r3, r9
 800098c:	2b38      	cmp	r3, #56	; 0x38
 800098e:	dd00      	ble.n	8000992 <__aeabi_dadd+0x32e>
 8000990:	e0d6      	b.n	8000b40 <__aeabi_dadd+0x4dc>
 8000992:	2b1f      	cmp	r3, #31
 8000994:	dd00      	ble.n	8000998 <__aeabi_dadd+0x334>
 8000996:	e135      	b.n	8000c04 <__aeabi_dadd+0x5a0>
 8000998:	2620      	movs	r6, #32
 800099a:	1af5      	subs	r5, r6, r3
 800099c:	0026      	movs	r6, r4
 800099e:	40ae      	lsls	r6, r5
 80009a0:	46b2      	mov	sl, r6
 80009a2:	003e      	movs	r6, r7
 80009a4:	40de      	lsrs	r6, r3
 80009a6:	46ac      	mov	ip, r5
 80009a8:	0035      	movs	r5, r6
 80009aa:	4656      	mov	r6, sl
 80009ac:	432e      	orrs	r6, r5
 80009ae:	4665      	mov	r5, ip
 80009b0:	40af      	lsls	r7, r5
 80009b2:	1e7d      	subs	r5, r7, #1
 80009b4:	41af      	sbcs	r7, r5
 80009b6:	40dc      	lsrs	r4, r3
 80009b8:	4337      	orrs	r7, r6
 80009ba:	1bd7      	subs	r7, r2, r7
 80009bc:	42ba      	cmp	r2, r7
 80009be:	4192      	sbcs	r2, r2
 80009c0:	1b0c      	subs	r4, r1, r4
 80009c2:	4252      	negs	r2, r2
 80009c4:	1aa4      	subs	r4, r4, r2
 80009c6:	0006      	movs	r6, r0
 80009c8:	46d8      	mov	r8, fp
 80009ca:	e6a3      	b.n	8000714 <__aeabi_dadd+0xb0>
 80009cc:	4664      	mov	r4, ip
 80009ce:	4667      	mov	r7, ip
 80009d0:	432c      	orrs	r4, r5
 80009d2:	d000      	beq.n	80009d6 <__aeabi_dadd+0x372>
 80009d4:	e6a2      	b.n	800071c <__aeabi_dadd+0xb8>
 80009d6:	2500      	movs	r5, #0
 80009d8:	2600      	movs	r6, #0
 80009da:	2700      	movs	r7, #0
 80009dc:	e706      	b.n	80007ec <__aeabi_dadd+0x188>
 80009de:	001e      	movs	r6, r3
 80009e0:	e6c4      	b.n	800076c <__aeabi_dadd+0x108>
 80009e2:	46c0      	nop			; (mov r8, r8)
 80009e4:	000007ff 	.word	0x000007ff
 80009e8:	ff7fffff 	.word	0xff7fffff
 80009ec:	800fffff 	.word	0x800fffff
 80009f0:	2b1f      	cmp	r3, #31
 80009f2:	dc63      	bgt.n	8000abc <__aeabi_dadd+0x458>
 80009f4:	2020      	movs	r0, #32
 80009f6:	1ac3      	subs	r3, r0, r3
 80009f8:	0008      	movs	r0, r1
 80009fa:	4098      	lsls	r0, r3
 80009fc:	469c      	mov	ip, r3
 80009fe:	4683      	mov	fp, r0
 8000a00:	4653      	mov	r3, sl
 8000a02:	0010      	movs	r0, r2
 8000a04:	40d8      	lsrs	r0, r3
 8000a06:	0003      	movs	r3, r0
 8000a08:	4658      	mov	r0, fp
 8000a0a:	4318      	orrs	r0, r3
 8000a0c:	4663      	mov	r3, ip
 8000a0e:	409a      	lsls	r2, r3
 8000a10:	1e53      	subs	r3, r2, #1
 8000a12:	419a      	sbcs	r2, r3
 8000a14:	4653      	mov	r3, sl
 8000a16:	4302      	orrs	r2, r0
 8000a18:	40d9      	lsrs	r1, r3
 8000a1a:	e703      	b.n	8000824 <__aeabi_dadd+0x1c0>
 8000a1c:	0026      	movs	r6, r4
 8000a1e:	433e      	orrs	r6, r7
 8000a20:	d006      	beq.n	8000a30 <__aeabi_dadd+0x3cc>
 8000a22:	43eb      	mvns	r3, r5
 8000a24:	4699      	mov	r9, r3
 8000a26:	2b00      	cmp	r3, #0
 8000a28:	d0c7      	beq.n	80009ba <__aeabi_dadd+0x356>
 8000a2a:	4e94      	ldr	r6, [pc, #592]	; (8000c7c <__aeabi_dadd+0x618>)
 8000a2c:	42b0      	cmp	r0, r6
 8000a2e:	d1ac      	bne.n	800098a <__aeabi_dadd+0x326>
 8000a30:	000c      	movs	r4, r1
 8000a32:	0017      	movs	r7, r2
 8000a34:	0006      	movs	r6, r0
 8000a36:	46d8      	mov	r8, fp
 8000a38:	e698      	b.n	800076c <__aeabi_dadd+0x108>
 8000a3a:	4b90      	ldr	r3, [pc, #576]	; (8000c7c <__aeabi_dadd+0x618>)
 8000a3c:	459a      	cmp	sl, r3
 8000a3e:	d00b      	beq.n	8000a58 <__aeabi_dadd+0x3f4>
 8000a40:	4682      	mov	sl, r0
 8000a42:	e6e7      	b.n	8000814 <__aeabi_dadd+0x1b0>
 8000a44:	2800      	cmp	r0, #0
 8000a46:	d000      	beq.n	8000a4a <__aeabi_dadd+0x3e6>
 8000a48:	e09e      	b.n	8000b88 <__aeabi_dadd+0x524>
 8000a4a:	0018      	movs	r0, r3
 8000a4c:	4310      	orrs	r0, r2
 8000a4e:	d100      	bne.n	8000a52 <__aeabi_dadd+0x3ee>
 8000a50:	e0e9      	b.n	8000c26 <__aeabi_dadd+0x5c2>
 8000a52:	001c      	movs	r4, r3
 8000a54:	0017      	movs	r7, r2
 8000a56:	46d8      	mov	r8, fp
 8000a58:	4e88      	ldr	r6, [pc, #544]	; (8000c7c <__aeabi_dadd+0x618>)
 8000a5a:	e687      	b.n	800076c <__aeabi_dadd+0x108>
 8000a5c:	2500      	movs	r5, #0
 8000a5e:	e772      	b.n	8000946 <__aeabi_dadd+0x2e2>
 8000a60:	2100      	movs	r1, #0
 8000a62:	e782      	b.n	800096a <__aeabi_dadd+0x306>
 8000a64:	0023      	movs	r3, r4
 8000a66:	433b      	orrs	r3, r7
 8000a68:	2e00      	cmp	r6, #0
 8000a6a:	d000      	beq.n	8000a6e <__aeabi_dadd+0x40a>
 8000a6c:	e0ab      	b.n	8000bc6 <__aeabi_dadd+0x562>
 8000a6e:	2b00      	cmp	r3, #0
 8000a70:	d100      	bne.n	8000a74 <__aeabi_dadd+0x410>
 8000a72:	e0e7      	b.n	8000c44 <__aeabi_dadd+0x5e0>
 8000a74:	000b      	movs	r3, r1
 8000a76:	4313      	orrs	r3, r2
 8000a78:	d100      	bne.n	8000a7c <__aeabi_dadd+0x418>
 8000a7a:	e677      	b.n	800076c <__aeabi_dadd+0x108>
 8000a7c:	18ba      	adds	r2, r7, r2
 8000a7e:	42ba      	cmp	r2, r7
 8000a80:	41bf      	sbcs	r7, r7
 8000a82:	1864      	adds	r4, r4, r1
 8000a84:	427f      	negs	r7, r7
 8000a86:	19e4      	adds	r4, r4, r7
 8000a88:	0223      	lsls	r3, r4, #8
 8000a8a:	d400      	bmi.n	8000a8e <__aeabi_dadd+0x42a>
 8000a8c:	e0f2      	b.n	8000c74 <__aeabi_dadd+0x610>
 8000a8e:	4b7c      	ldr	r3, [pc, #496]	; (8000c80 <__aeabi_dadd+0x61c>)
 8000a90:	0017      	movs	r7, r2
 8000a92:	401c      	ands	r4, r3
 8000a94:	0006      	movs	r6, r0
 8000a96:	e669      	b.n	800076c <__aeabi_dadd+0x108>
 8000a98:	0020      	movs	r0, r4
 8000a9a:	4338      	orrs	r0, r7
 8000a9c:	2e00      	cmp	r6, #0
 8000a9e:	d1d1      	bne.n	8000a44 <__aeabi_dadd+0x3e0>
 8000aa0:	2800      	cmp	r0, #0
 8000aa2:	d15b      	bne.n	8000b5c <__aeabi_dadd+0x4f8>
 8000aa4:	001c      	movs	r4, r3
 8000aa6:	4314      	orrs	r4, r2
 8000aa8:	d100      	bne.n	8000aac <__aeabi_dadd+0x448>
 8000aaa:	e0a8      	b.n	8000bfe <__aeabi_dadd+0x59a>
 8000aac:	001c      	movs	r4, r3
 8000aae:	0017      	movs	r7, r2
 8000ab0:	46d8      	mov	r8, fp
 8000ab2:	e65b      	b.n	800076c <__aeabi_dadd+0x108>
 8000ab4:	0006      	movs	r6, r0
 8000ab6:	2400      	movs	r4, #0
 8000ab8:	2700      	movs	r7, #0
 8000aba:	e697      	b.n	80007ec <__aeabi_dadd+0x188>
 8000abc:	4650      	mov	r0, sl
 8000abe:	000b      	movs	r3, r1
 8000ac0:	3820      	subs	r0, #32
 8000ac2:	40c3      	lsrs	r3, r0
 8000ac4:	4699      	mov	r9, r3
 8000ac6:	4653      	mov	r3, sl
 8000ac8:	2b20      	cmp	r3, #32
 8000aca:	d100      	bne.n	8000ace <__aeabi_dadd+0x46a>
 8000acc:	e095      	b.n	8000bfa <__aeabi_dadd+0x596>
 8000ace:	2340      	movs	r3, #64	; 0x40
 8000ad0:	4650      	mov	r0, sl
 8000ad2:	1a1b      	subs	r3, r3, r0
 8000ad4:	4099      	lsls	r1, r3
 8000ad6:	430a      	orrs	r2, r1
 8000ad8:	1e51      	subs	r1, r2, #1
 8000ada:	418a      	sbcs	r2, r1
 8000adc:	464b      	mov	r3, r9
 8000ade:	2100      	movs	r1, #0
 8000ae0:	431a      	orrs	r2, r3
 8000ae2:	e69f      	b.n	8000824 <__aeabi_dadd+0x1c0>
 8000ae4:	2e00      	cmp	r6, #0
 8000ae6:	d130      	bne.n	8000b4a <__aeabi_dadd+0x4e6>
 8000ae8:	0026      	movs	r6, r4
 8000aea:	433e      	orrs	r6, r7
 8000aec:	d067      	beq.n	8000bbe <__aeabi_dadd+0x55a>
 8000aee:	43db      	mvns	r3, r3
 8000af0:	469a      	mov	sl, r3
 8000af2:	2b00      	cmp	r3, #0
 8000af4:	d01c      	beq.n	8000b30 <__aeabi_dadd+0x4cc>
 8000af6:	4e61      	ldr	r6, [pc, #388]	; (8000c7c <__aeabi_dadd+0x618>)
 8000af8:	42b0      	cmp	r0, r6
 8000afa:	d060      	beq.n	8000bbe <__aeabi_dadd+0x55a>
 8000afc:	4653      	mov	r3, sl
 8000afe:	2b38      	cmp	r3, #56	; 0x38
 8000b00:	dd00      	ble.n	8000b04 <__aeabi_dadd+0x4a0>
 8000b02:	e096      	b.n	8000c32 <__aeabi_dadd+0x5ce>
 8000b04:	2b1f      	cmp	r3, #31
 8000b06:	dd00      	ble.n	8000b0a <__aeabi_dadd+0x4a6>
 8000b08:	e09f      	b.n	8000c4a <__aeabi_dadd+0x5e6>
 8000b0a:	2620      	movs	r6, #32
 8000b0c:	1af3      	subs	r3, r6, r3
 8000b0e:	0026      	movs	r6, r4
 8000b10:	409e      	lsls	r6, r3
 8000b12:	469c      	mov	ip, r3
 8000b14:	46b3      	mov	fp, r6
 8000b16:	4653      	mov	r3, sl
 8000b18:	003e      	movs	r6, r7
 8000b1a:	40de      	lsrs	r6, r3
 8000b1c:	0033      	movs	r3, r6
 8000b1e:	465e      	mov	r6, fp
 8000b20:	431e      	orrs	r6, r3
 8000b22:	4663      	mov	r3, ip
 8000b24:	409f      	lsls	r7, r3
 8000b26:	1e7b      	subs	r3, r7, #1
 8000b28:	419f      	sbcs	r7, r3
 8000b2a:	4653      	mov	r3, sl
 8000b2c:	40dc      	lsrs	r4, r3
 8000b2e:	4337      	orrs	r7, r6
 8000b30:	18bf      	adds	r7, r7, r2
 8000b32:	4297      	cmp	r7, r2
 8000b34:	4192      	sbcs	r2, r2
 8000b36:	1864      	adds	r4, r4, r1
 8000b38:	4252      	negs	r2, r2
 8000b3a:	18a4      	adds	r4, r4, r2
 8000b3c:	0006      	movs	r6, r0
 8000b3e:	e678      	b.n	8000832 <__aeabi_dadd+0x1ce>
 8000b40:	4327      	orrs	r7, r4
 8000b42:	1e7c      	subs	r4, r7, #1
 8000b44:	41a7      	sbcs	r7, r4
 8000b46:	2400      	movs	r4, #0
 8000b48:	e737      	b.n	80009ba <__aeabi_dadd+0x356>
 8000b4a:	4e4c      	ldr	r6, [pc, #304]	; (8000c7c <__aeabi_dadd+0x618>)
 8000b4c:	42b0      	cmp	r0, r6
 8000b4e:	d036      	beq.n	8000bbe <__aeabi_dadd+0x55a>
 8000b50:	2680      	movs	r6, #128	; 0x80
 8000b52:	425b      	negs	r3, r3
 8000b54:	0436      	lsls	r6, r6, #16
 8000b56:	469a      	mov	sl, r3
 8000b58:	4334      	orrs	r4, r6
 8000b5a:	e7cf      	b.n	8000afc <__aeabi_dadd+0x498>
 8000b5c:	0018      	movs	r0, r3
 8000b5e:	4310      	orrs	r0, r2
 8000b60:	d100      	bne.n	8000b64 <__aeabi_dadd+0x500>
 8000b62:	e603      	b.n	800076c <__aeabi_dadd+0x108>
 8000b64:	1ab8      	subs	r0, r7, r2
 8000b66:	4684      	mov	ip, r0
 8000b68:	4567      	cmp	r7, ip
 8000b6a:	41ad      	sbcs	r5, r5
 8000b6c:	1ae0      	subs	r0, r4, r3
 8000b6e:	426d      	negs	r5, r5
 8000b70:	1b40      	subs	r0, r0, r5
 8000b72:	0205      	lsls	r5, r0, #8
 8000b74:	d400      	bmi.n	8000b78 <__aeabi_dadd+0x514>
 8000b76:	e62c      	b.n	80007d2 <__aeabi_dadd+0x16e>
 8000b78:	1bd7      	subs	r7, r2, r7
 8000b7a:	42ba      	cmp	r2, r7
 8000b7c:	4192      	sbcs	r2, r2
 8000b7e:	1b1c      	subs	r4, r3, r4
 8000b80:	4252      	negs	r2, r2
 8000b82:	1aa4      	subs	r4, r4, r2
 8000b84:	46d8      	mov	r8, fp
 8000b86:	e5f1      	b.n	800076c <__aeabi_dadd+0x108>
 8000b88:	0018      	movs	r0, r3
 8000b8a:	4310      	orrs	r0, r2
 8000b8c:	d100      	bne.n	8000b90 <__aeabi_dadd+0x52c>
 8000b8e:	e763      	b.n	8000a58 <__aeabi_dadd+0x3f4>
 8000b90:	08f8      	lsrs	r0, r7, #3
 8000b92:	0767      	lsls	r7, r4, #29
 8000b94:	4307      	orrs	r7, r0
 8000b96:	2080      	movs	r0, #128	; 0x80
 8000b98:	08e4      	lsrs	r4, r4, #3
 8000b9a:	0300      	lsls	r0, r0, #12
 8000b9c:	4204      	tst	r4, r0
 8000b9e:	d008      	beq.n	8000bb2 <__aeabi_dadd+0x54e>
 8000ba0:	08dd      	lsrs	r5, r3, #3
 8000ba2:	4205      	tst	r5, r0
 8000ba4:	d105      	bne.n	8000bb2 <__aeabi_dadd+0x54e>
 8000ba6:	08d2      	lsrs	r2, r2, #3
 8000ba8:	0759      	lsls	r1, r3, #29
 8000baa:	4311      	orrs	r1, r2
 8000bac:	000f      	movs	r7, r1
 8000bae:	002c      	movs	r4, r5
 8000bb0:	46d8      	mov	r8, fp
 8000bb2:	0f7b      	lsrs	r3, r7, #29
 8000bb4:	00e4      	lsls	r4, r4, #3
 8000bb6:	431c      	orrs	r4, r3
 8000bb8:	00ff      	lsls	r7, r7, #3
 8000bba:	4e30      	ldr	r6, [pc, #192]	; (8000c7c <__aeabi_dadd+0x618>)
 8000bbc:	e5d6      	b.n	800076c <__aeabi_dadd+0x108>
 8000bbe:	000c      	movs	r4, r1
 8000bc0:	0017      	movs	r7, r2
 8000bc2:	0006      	movs	r6, r0
 8000bc4:	e5d2      	b.n	800076c <__aeabi_dadd+0x108>
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d038      	beq.n	8000c3c <__aeabi_dadd+0x5d8>
 8000bca:	000b      	movs	r3, r1
 8000bcc:	4313      	orrs	r3, r2
 8000bce:	d100      	bne.n	8000bd2 <__aeabi_dadd+0x56e>
 8000bd0:	e742      	b.n	8000a58 <__aeabi_dadd+0x3f4>
 8000bd2:	08f8      	lsrs	r0, r7, #3
 8000bd4:	0767      	lsls	r7, r4, #29
 8000bd6:	4307      	orrs	r7, r0
 8000bd8:	2080      	movs	r0, #128	; 0x80
 8000bda:	08e4      	lsrs	r4, r4, #3
 8000bdc:	0300      	lsls	r0, r0, #12
 8000bde:	4204      	tst	r4, r0
 8000be0:	d0e7      	beq.n	8000bb2 <__aeabi_dadd+0x54e>
 8000be2:	08cb      	lsrs	r3, r1, #3
 8000be4:	4203      	tst	r3, r0
 8000be6:	d1e4      	bne.n	8000bb2 <__aeabi_dadd+0x54e>
 8000be8:	08d2      	lsrs	r2, r2, #3
 8000bea:	0749      	lsls	r1, r1, #29
 8000bec:	4311      	orrs	r1, r2
 8000bee:	000f      	movs	r7, r1
 8000bf0:	001c      	movs	r4, r3
 8000bf2:	e7de      	b.n	8000bb2 <__aeabi_dadd+0x54e>
 8000bf4:	2700      	movs	r7, #0
 8000bf6:	2400      	movs	r4, #0
 8000bf8:	e5d5      	b.n	80007a6 <__aeabi_dadd+0x142>
 8000bfa:	2100      	movs	r1, #0
 8000bfc:	e76b      	b.n	8000ad6 <__aeabi_dadd+0x472>
 8000bfe:	2500      	movs	r5, #0
 8000c00:	2700      	movs	r7, #0
 8000c02:	e5f3      	b.n	80007ec <__aeabi_dadd+0x188>
 8000c04:	464e      	mov	r6, r9
 8000c06:	0025      	movs	r5, r4
 8000c08:	3e20      	subs	r6, #32
 8000c0a:	40f5      	lsrs	r5, r6
 8000c0c:	464b      	mov	r3, r9
 8000c0e:	002e      	movs	r6, r5
 8000c10:	2b20      	cmp	r3, #32
 8000c12:	d02d      	beq.n	8000c70 <__aeabi_dadd+0x60c>
 8000c14:	2540      	movs	r5, #64	; 0x40
 8000c16:	1aed      	subs	r5, r5, r3
 8000c18:	40ac      	lsls	r4, r5
 8000c1a:	4327      	orrs	r7, r4
 8000c1c:	1e7c      	subs	r4, r7, #1
 8000c1e:	41a7      	sbcs	r7, r4
 8000c20:	2400      	movs	r4, #0
 8000c22:	4337      	orrs	r7, r6
 8000c24:	e6c9      	b.n	80009ba <__aeabi_dadd+0x356>
 8000c26:	2480      	movs	r4, #128	; 0x80
 8000c28:	2500      	movs	r5, #0
 8000c2a:	0324      	lsls	r4, r4, #12
 8000c2c:	4e13      	ldr	r6, [pc, #76]	; (8000c7c <__aeabi_dadd+0x618>)
 8000c2e:	2700      	movs	r7, #0
 8000c30:	e5dc      	b.n	80007ec <__aeabi_dadd+0x188>
 8000c32:	4327      	orrs	r7, r4
 8000c34:	1e7c      	subs	r4, r7, #1
 8000c36:	41a7      	sbcs	r7, r4
 8000c38:	2400      	movs	r4, #0
 8000c3a:	e779      	b.n	8000b30 <__aeabi_dadd+0x4cc>
 8000c3c:	000c      	movs	r4, r1
 8000c3e:	0017      	movs	r7, r2
 8000c40:	4e0e      	ldr	r6, [pc, #56]	; (8000c7c <__aeabi_dadd+0x618>)
 8000c42:	e593      	b.n	800076c <__aeabi_dadd+0x108>
 8000c44:	000c      	movs	r4, r1
 8000c46:	0017      	movs	r7, r2
 8000c48:	e590      	b.n	800076c <__aeabi_dadd+0x108>
 8000c4a:	4656      	mov	r6, sl
 8000c4c:	0023      	movs	r3, r4
 8000c4e:	3e20      	subs	r6, #32
 8000c50:	40f3      	lsrs	r3, r6
 8000c52:	4699      	mov	r9, r3
 8000c54:	4653      	mov	r3, sl
 8000c56:	2b20      	cmp	r3, #32
 8000c58:	d00e      	beq.n	8000c78 <__aeabi_dadd+0x614>
 8000c5a:	2340      	movs	r3, #64	; 0x40
 8000c5c:	4656      	mov	r6, sl
 8000c5e:	1b9b      	subs	r3, r3, r6
 8000c60:	409c      	lsls	r4, r3
 8000c62:	4327      	orrs	r7, r4
 8000c64:	1e7c      	subs	r4, r7, #1
 8000c66:	41a7      	sbcs	r7, r4
 8000c68:	464b      	mov	r3, r9
 8000c6a:	2400      	movs	r4, #0
 8000c6c:	431f      	orrs	r7, r3
 8000c6e:	e75f      	b.n	8000b30 <__aeabi_dadd+0x4cc>
 8000c70:	2400      	movs	r4, #0
 8000c72:	e7d2      	b.n	8000c1a <__aeabi_dadd+0x5b6>
 8000c74:	0017      	movs	r7, r2
 8000c76:	e5b2      	b.n	80007de <__aeabi_dadd+0x17a>
 8000c78:	2400      	movs	r4, #0
 8000c7a:	e7f2      	b.n	8000c62 <__aeabi_dadd+0x5fe>
 8000c7c:	000007ff 	.word	0x000007ff
 8000c80:	ff7fffff 	.word	0xff7fffff

08000c84 <__aeabi_ddiv>:
 8000c84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c86:	4657      	mov	r7, sl
 8000c88:	4645      	mov	r5, r8
 8000c8a:	46de      	mov	lr, fp
 8000c8c:	464e      	mov	r6, r9
 8000c8e:	b5e0      	push	{r5, r6, r7, lr}
 8000c90:	004c      	lsls	r4, r1, #1
 8000c92:	030e      	lsls	r6, r1, #12
 8000c94:	b087      	sub	sp, #28
 8000c96:	4683      	mov	fp, r0
 8000c98:	4692      	mov	sl, r2
 8000c9a:	001d      	movs	r5, r3
 8000c9c:	4680      	mov	r8, r0
 8000c9e:	0b36      	lsrs	r6, r6, #12
 8000ca0:	0d64      	lsrs	r4, r4, #21
 8000ca2:	0fcf      	lsrs	r7, r1, #31
 8000ca4:	2c00      	cmp	r4, #0
 8000ca6:	d04f      	beq.n	8000d48 <__aeabi_ddiv+0xc4>
 8000ca8:	4b6f      	ldr	r3, [pc, #444]	; (8000e68 <__aeabi_ddiv+0x1e4>)
 8000caa:	429c      	cmp	r4, r3
 8000cac:	d035      	beq.n	8000d1a <__aeabi_ddiv+0x96>
 8000cae:	2380      	movs	r3, #128	; 0x80
 8000cb0:	0f42      	lsrs	r2, r0, #29
 8000cb2:	041b      	lsls	r3, r3, #16
 8000cb4:	00f6      	lsls	r6, r6, #3
 8000cb6:	4313      	orrs	r3, r2
 8000cb8:	4333      	orrs	r3, r6
 8000cba:	4699      	mov	r9, r3
 8000cbc:	00c3      	lsls	r3, r0, #3
 8000cbe:	4698      	mov	r8, r3
 8000cc0:	4b6a      	ldr	r3, [pc, #424]	; (8000e6c <__aeabi_ddiv+0x1e8>)
 8000cc2:	2600      	movs	r6, #0
 8000cc4:	469c      	mov	ip, r3
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	4464      	add	r4, ip
 8000cca:	9303      	str	r3, [sp, #12]
 8000ccc:	032b      	lsls	r3, r5, #12
 8000cce:	0b1b      	lsrs	r3, r3, #12
 8000cd0:	469b      	mov	fp, r3
 8000cd2:	006b      	lsls	r3, r5, #1
 8000cd4:	0fed      	lsrs	r5, r5, #31
 8000cd6:	4650      	mov	r0, sl
 8000cd8:	0d5b      	lsrs	r3, r3, #21
 8000cda:	9501      	str	r5, [sp, #4]
 8000cdc:	d05e      	beq.n	8000d9c <__aeabi_ddiv+0x118>
 8000cde:	4a62      	ldr	r2, [pc, #392]	; (8000e68 <__aeabi_ddiv+0x1e4>)
 8000ce0:	4293      	cmp	r3, r2
 8000ce2:	d053      	beq.n	8000d8c <__aeabi_ddiv+0x108>
 8000ce4:	465a      	mov	r2, fp
 8000ce6:	00d1      	lsls	r1, r2, #3
 8000ce8:	2280      	movs	r2, #128	; 0x80
 8000cea:	0f40      	lsrs	r0, r0, #29
 8000cec:	0412      	lsls	r2, r2, #16
 8000cee:	4302      	orrs	r2, r0
 8000cf0:	430a      	orrs	r2, r1
 8000cf2:	4693      	mov	fp, r2
 8000cf4:	4652      	mov	r2, sl
 8000cf6:	00d1      	lsls	r1, r2, #3
 8000cf8:	4a5c      	ldr	r2, [pc, #368]	; (8000e6c <__aeabi_ddiv+0x1e8>)
 8000cfa:	4694      	mov	ip, r2
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4463      	add	r3, ip
 8000d00:	0038      	movs	r0, r7
 8000d02:	4068      	eors	r0, r5
 8000d04:	4684      	mov	ip, r0
 8000d06:	9002      	str	r0, [sp, #8]
 8000d08:	1ae4      	subs	r4, r4, r3
 8000d0a:	4316      	orrs	r6, r2
 8000d0c:	2e0f      	cmp	r6, #15
 8000d0e:	d900      	bls.n	8000d12 <__aeabi_ddiv+0x8e>
 8000d10:	e0b4      	b.n	8000e7c <__aeabi_ddiv+0x1f8>
 8000d12:	4b57      	ldr	r3, [pc, #348]	; (8000e70 <__aeabi_ddiv+0x1ec>)
 8000d14:	00b6      	lsls	r6, r6, #2
 8000d16:	599b      	ldr	r3, [r3, r6]
 8000d18:	469f      	mov	pc, r3
 8000d1a:	0003      	movs	r3, r0
 8000d1c:	4333      	orrs	r3, r6
 8000d1e:	4699      	mov	r9, r3
 8000d20:	d16c      	bne.n	8000dfc <__aeabi_ddiv+0x178>
 8000d22:	2300      	movs	r3, #0
 8000d24:	4698      	mov	r8, r3
 8000d26:	3302      	adds	r3, #2
 8000d28:	2608      	movs	r6, #8
 8000d2a:	9303      	str	r3, [sp, #12]
 8000d2c:	e7ce      	b.n	8000ccc <__aeabi_ddiv+0x48>
 8000d2e:	46cb      	mov	fp, r9
 8000d30:	4641      	mov	r1, r8
 8000d32:	9a03      	ldr	r2, [sp, #12]
 8000d34:	9701      	str	r7, [sp, #4]
 8000d36:	2a02      	cmp	r2, #2
 8000d38:	d165      	bne.n	8000e06 <__aeabi_ddiv+0x182>
 8000d3a:	9b01      	ldr	r3, [sp, #4]
 8000d3c:	4c4a      	ldr	r4, [pc, #296]	; (8000e68 <__aeabi_ddiv+0x1e4>)
 8000d3e:	469c      	mov	ip, r3
 8000d40:	2300      	movs	r3, #0
 8000d42:	2200      	movs	r2, #0
 8000d44:	4698      	mov	r8, r3
 8000d46:	e06b      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8000d48:	0003      	movs	r3, r0
 8000d4a:	4333      	orrs	r3, r6
 8000d4c:	4699      	mov	r9, r3
 8000d4e:	d04e      	beq.n	8000dee <__aeabi_ddiv+0x16a>
 8000d50:	2e00      	cmp	r6, #0
 8000d52:	d100      	bne.n	8000d56 <__aeabi_ddiv+0xd2>
 8000d54:	e1bc      	b.n	80010d0 <__aeabi_ddiv+0x44c>
 8000d56:	0030      	movs	r0, r6
 8000d58:	f001 fa2c 	bl	80021b4 <__clzsi2>
 8000d5c:	0003      	movs	r3, r0
 8000d5e:	3b0b      	subs	r3, #11
 8000d60:	2b1c      	cmp	r3, #28
 8000d62:	dd00      	ble.n	8000d66 <__aeabi_ddiv+0xe2>
 8000d64:	e1ac      	b.n	80010c0 <__aeabi_ddiv+0x43c>
 8000d66:	221d      	movs	r2, #29
 8000d68:	1ad3      	subs	r3, r2, r3
 8000d6a:	465a      	mov	r2, fp
 8000d6c:	0001      	movs	r1, r0
 8000d6e:	40da      	lsrs	r2, r3
 8000d70:	3908      	subs	r1, #8
 8000d72:	408e      	lsls	r6, r1
 8000d74:	0013      	movs	r3, r2
 8000d76:	4333      	orrs	r3, r6
 8000d78:	4699      	mov	r9, r3
 8000d7a:	465b      	mov	r3, fp
 8000d7c:	408b      	lsls	r3, r1
 8000d7e:	4698      	mov	r8, r3
 8000d80:	2300      	movs	r3, #0
 8000d82:	4c3c      	ldr	r4, [pc, #240]	; (8000e74 <__aeabi_ddiv+0x1f0>)
 8000d84:	2600      	movs	r6, #0
 8000d86:	1a24      	subs	r4, r4, r0
 8000d88:	9303      	str	r3, [sp, #12]
 8000d8a:	e79f      	b.n	8000ccc <__aeabi_ddiv+0x48>
 8000d8c:	4651      	mov	r1, sl
 8000d8e:	465a      	mov	r2, fp
 8000d90:	4311      	orrs	r1, r2
 8000d92:	d129      	bne.n	8000de8 <__aeabi_ddiv+0x164>
 8000d94:	2200      	movs	r2, #0
 8000d96:	4693      	mov	fp, r2
 8000d98:	3202      	adds	r2, #2
 8000d9a:	e7b1      	b.n	8000d00 <__aeabi_ddiv+0x7c>
 8000d9c:	4659      	mov	r1, fp
 8000d9e:	4301      	orrs	r1, r0
 8000da0:	d01e      	beq.n	8000de0 <__aeabi_ddiv+0x15c>
 8000da2:	465b      	mov	r3, fp
 8000da4:	2b00      	cmp	r3, #0
 8000da6:	d100      	bne.n	8000daa <__aeabi_ddiv+0x126>
 8000da8:	e19e      	b.n	80010e8 <__aeabi_ddiv+0x464>
 8000daa:	4658      	mov	r0, fp
 8000dac:	f001 fa02 	bl	80021b4 <__clzsi2>
 8000db0:	0003      	movs	r3, r0
 8000db2:	3b0b      	subs	r3, #11
 8000db4:	2b1c      	cmp	r3, #28
 8000db6:	dd00      	ble.n	8000dba <__aeabi_ddiv+0x136>
 8000db8:	e18f      	b.n	80010da <__aeabi_ddiv+0x456>
 8000dba:	0002      	movs	r2, r0
 8000dbc:	4659      	mov	r1, fp
 8000dbe:	3a08      	subs	r2, #8
 8000dc0:	4091      	lsls	r1, r2
 8000dc2:	468b      	mov	fp, r1
 8000dc4:	211d      	movs	r1, #29
 8000dc6:	1acb      	subs	r3, r1, r3
 8000dc8:	4651      	mov	r1, sl
 8000dca:	40d9      	lsrs	r1, r3
 8000dcc:	000b      	movs	r3, r1
 8000dce:	4659      	mov	r1, fp
 8000dd0:	430b      	orrs	r3, r1
 8000dd2:	4651      	mov	r1, sl
 8000dd4:	469b      	mov	fp, r3
 8000dd6:	4091      	lsls	r1, r2
 8000dd8:	4b26      	ldr	r3, [pc, #152]	; (8000e74 <__aeabi_ddiv+0x1f0>)
 8000dda:	2200      	movs	r2, #0
 8000ddc:	1a1b      	subs	r3, r3, r0
 8000dde:	e78f      	b.n	8000d00 <__aeabi_ddiv+0x7c>
 8000de0:	2300      	movs	r3, #0
 8000de2:	2201      	movs	r2, #1
 8000de4:	469b      	mov	fp, r3
 8000de6:	e78b      	b.n	8000d00 <__aeabi_ddiv+0x7c>
 8000de8:	4651      	mov	r1, sl
 8000dea:	2203      	movs	r2, #3
 8000dec:	e788      	b.n	8000d00 <__aeabi_ddiv+0x7c>
 8000dee:	2300      	movs	r3, #0
 8000df0:	4698      	mov	r8, r3
 8000df2:	3301      	adds	r3, #1
 8000df4:	2604      	movs	r6, #4
 8000df6:	2400      	movs	r4, #0
 8000df8:	9303      	str	r3, [sp, #12]
 8000dfa:	e767      	b.n	8000ccc <__aeabi_ddiv+0x48>
 8000dfc:	2303      	movs	r3, #3
 8000dfe:	46b1      	mov	r9, r6
 8000e00:	9303      	str	r3, [sp, #12]
 8000e02:	260c      	movs	r6, #12
 8000e04:	e762      	b.n	8000ccc <__aeabi_ddiv+0x48>
 8000e06:	2a03      	cmp	r2, #3
 8000e08:	d100      	bne.n	8000e0c <__aeabi_ddiv+0x188>
 8000e0a:	e25c      	b.n	80012c6 <__aeabi_ddiv+0x642>
 8000e0c:	9b01      	ldr	r3, [sp, #4]
 8000e0e:	2a01      	cmp	r2, #1
 8000e10:	d000      	beq.n	8000e14 <__aeabi_ddiv+0x190>
 8000e12:	e1e4      	b.n	80011de <__aeabi_ddiv+0x55a>
 8000e14:	4013      	ands	r3, r2
 8000e16:	469c      	mov	ip, r3
 8000e18:	2300      	movs	r3, #0
 8000e1a:	2400      	movs	r4, #0
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	4698      	mov	r8, r3
 8000e20:	2100      	movs	r1, #0
 8000e22:	0312      	lsls	r2, r2, #12
 8000e24:	0b13      	lsrs	r3, r2, #12
 8000e26:	0d0a      	lsrs	r2, r1, #20
 8000e28:	0512      	lsls	r2, r2, #20
 8000e2a:	431a      	orrs	r2, r3
 8000e2c:	0523      	lsls	r3, r4, #20
 8000e2e:	4c12      	ldr	r4, [pc, #72]	; (8000e78 <__aeabi_ddiv+0x1f4>)
 8000e30:	4640      	mov	r0, r8
 8000e32:	4022      	ands	r2, r4
 8000e34:	4313      	orrs	r3, r2
 8000e36:	4662      	mov	r2, ip
 8000e38:	005b      	lsls	r3, r3, #1
 8000e3a:	07d2      	lsls	r2, r2, #31
 8000e3c:	085b      	lsrs	r3, r3, #1
 8000e3e:	4313      	orrs	r3, r2
 8000e40:	0019      	movs	r1, r3
 8000e42:	b007      	add	sp, #28
 8000e44:	bc3c      	pop	{r2, r3, r4, r5}
 8000e46:	4690      	mov	r8, r2
 8000e48:	4699      	mov	r9, r3
 8000e4a:	46a2      	mov	sl, r4
 8000e4c:	46ab      	mov	fp, r5
 8000e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e50:	2300      	movs	r3, #0
 8000e52:	2280      	movs	r2, #128	; 0x80
 8000e54:	469c      	mov	ip, r3
 8000e56:	0312      	lsls	r2, r2, #12
 8000e58:	4698      	mov	r8, r3
 8000e5a:	4c03      	ldr	r4, [pc, #12]	; (8000e68 <__aeabi_ddiv+0x1e4>)
 8000e5c:	e7e0      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8000e5e:	2300      	movs	r3, #0
 8000e60:	4c01      	ldr	r4, [pc, #4]	; (8000e68 <__aeabi_ddiv+0x1e4>)
 8000e62:	2200      	movs	r2, #0
 8000e64:	4698      	mov	r8, r3
 8000e66:	e7db      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8000e68:	000007ff 	.word	0x000007ff
 8000e6c:	fffffc01 	.word	0xfffffc01
 8000e70:	08007170 	.word	0x08007170
 8000e74:	fffffc0d 	.word	0xfffffc0d
 8000e78:	800fffff 	.word	0x800fffff
 8000e7c:	45d9      	cmp	r9, fp
 8000e7e:	d900      	bls.n	8000e82 <__aeabi_ddiv+0x1fe>
 8000e80:	e139      	b.n	80010f6 <__aeabi_ddiv+0x472>
 8000e82:	d100      	bne.n	8000e86 <__aeabi_ddiv+0x202>
 8000e84:	e134      	b.n	80010f0 <__aeabi_ddiv+0x46c>
 8000e86:	2300      	movs	r3, #0
 8000e88:	4646      	mov	r6, r8
 8000e8a:	464d      	mov	r5, r9
 8000e8c:	469a      	mov	sl, r3
 8000e8e:	3c01      	subs	r4, #1
 8000e90:	465b      	mov	r3, fp
 8000e92:	0e0a      	lsrs	r2, r1, #24
 8000e94:	021b      	lsls	r3, r3, #8
 8000e96:	431a      	orrs	r2, r3
 8000e98:	020b      	lsls	r3, r1, #8
 8000e9a:	0c17      	lsrs	r7, r2, #16
 8000e9c:	9303      	str	r3, [sp, #12]
 8000e9e:	0413      	lsls	r3, r2, #16
 8000ea0:	0c1b      	lsrs	r3, r3, #16
 8000ea2:	0039      	movs	r1, r7
 8000ea4:	0028      	movs	r0, r5
 8000ea6:	4690      	mov	r8, r2
 8000ea8:	9301      	str	r3, [sp, #4]
 8000eaa:	f7ff f947 	bl	800013c <__udivsi3>
 8000eae:	0002      	movs	r2, r0
 8000eb0:	9b01      	ldr	r3, [sp, #4]
 8000eb2:	4683      	mov	fp, r0
 8000eb4:	435a      	muls	r2, r3
 8000eb6:	0028      	movs	r0, r5
 8000eb8:	0039      	movs	r1, r7
 8000eba:	4691      	mov	r9, r2
 8000ebc:	f7ff f9c4 	bl	8000248 <__aeabi_uidivmod>
 8000ec0:	0c35      	lsrs	r5, r6, #16
 8000ec2:	0409      	lsls	r1, r1, #16
 8000ec4:	430d      	orrs	r5, r1
 8000ec6:	45a9      	cmp	r9, r5
 8000ec8:	d90d      	bls.n	8000ee6 <__aeabi_ddiv+0x262>
 8000eca:	465b      	mov	r3, fp
 8000ecc:	4445      	add	r5, r8
 8000ece:	3b01      	subs	r3, #1
 8000ed0:	45a8      	cmp	r8, r5
 8000ed2:	d900      	bls.n	8000ed6 <__aeabi_ddiv+0x252>
 8000ed4:	e13a      	b.n	800114c <__aeabi_ddiv+0x4c8>
 8000ed6:	45a9      	cmp	r9, r5
 8000ed8:	d800      	bhi.n	8000edc <__aeabi_ddiv+0x258>
 8000eda:	e137      	b.n	800114c <__aeabi_ddiv+0x4c8>
 8000edc:	2302      	movs	r3, #2
 8000ede:	425b      	negs	r3, r3
 8000ee0:	469c      	mov	ip, r3
 8000ee2:	4445      	add	r5, r8
 8000ee4:	44e3      	add	fp, ip
 8000ee6:	464b      	mov	r3, r9
 8000ee8:	1aeb      	subs	r3, r5, r3
 8000eea:	0039      	movs	r1, r7
 8000eec:	0018      	movs	r0, r3
 8000eee:	9304      	str	r3, [sp, #16]
 8000ef0:	f7ff f924 	bl	800013c <__udivsi3>
 8000ef4:	9b01      	ldr	r3, [sp, #4]
 8000ef6:	0005      	movs	r5, r0
 8000ef8:	4343      	muls	r3, r0
 8000efa:	0039      	movs	r1, r7
 8000efc:	9804      	ldr	r0, [sp, #16]
 8000efe:	4699      	mov	r9, r3
 8000f00:	f7ff f9a2 	bl	8000248 <__aeabi_uidivmod>
 8000f04:	0433      	lsls	r3, r6, #16
 8000f06:	0409      	lsls	r1, r1, #16
 8000f08:	0c1b      	lsrs	r3, r3, #16
 8000f0a:	430b      	orrs	r3, r1
 8000f0c:	4599      	cmp	r9, r3
 8000f0e:	d909      	bls.n	8000f24 <__aeabi_ddiv+0x2a0>
 8000f10:	4443      	add	r3, r8
 8000f12:	1e6a      	subs	r2, r5, #1
 8000f14:	4598      	cmp	r8, r3
 8000f16:	d900      	bls.n	8000f1a <__aeabi_ddiv+0x296>
 8000f18:	e11a      	b.n	8001150 <__aeabi_ddiv+0x4cc>
 8000f1a:	4599      	cmp	r9, r3
 8000f1c:	d800      	bhi.n	8000f20 <__aeabi_ddiv+0x29c>
 8000f1e:	e117      	b.n	8001150 <__aeabi_ddiv+0x4cc>
 8000f20:	3d02      	subs	r5, #2
 8000f22:	4443      	add	r3, r8
 8000f24:	464a      	mov	r2, r9
 8000f26:	1a9b      	subs	r3, r3, r2
 8000f28:	465a      	mov	r2, fp
 8000f2a:	0412      	lsls	r2, r2, #16
 8000f2c:	432a      	orrs	r2, r5
 8000f2e:	9903      	ldr	r1, [sp, #12]
 8000f30:	4693      	mov	fp, r2
 8000f32:	0c10      	lsrs	r0, r2, #16
 8000f34:	0c0a      	lsrs	r2, r1, #16
 8000f36:	4691      	mov	r9, r2
 8000f38:	0409      	lsls	r1, r1, #16
 8000f3a:	465a      	mov	r2, fp
 8000f3c:	0c09      	lsrs	r1, r1, #16
 8000f3e:	464e      	mov	r6, r9
 8000f40:	000d      	movs	r5, r1
 8000f42:	0412      	lsls	r2, r2, #16
 8000f44:	0c12      	lsrs	r2, r2, #16
 8000f46:	4345      	muls	r5, r0
 8000f48:	9105      	str	r1, [sp, #20]
 8000f4a:	4351      	muls	r1, r2
 8000f4c:	4372      	muls	r2, r6
 8000f4e:	4370      	muls	r0, r6
 8000f50:	1952      	adds	r2, r2, r5
 8000f52:	0c0e      	lsrs	r6, r1, #16
 8000f54:	18b2      	adds	r2, r6, r2
 8000f56:	4295      	cmp	r5, r2
 8000f58:	d903      	bls.n	8000f62 <__aeabi_ddiv+0x2de>
 8000f5a:	2580      	movs	r5, #128	; 0x80
 8000f5c:	026d      	lsls	r5, r5, #9
 8000f5e:	46ac      	mov	ip, r5
 8000f60:	4460      	add	r0, ip
 8000f62:	0c15      	lsrs	r5, r2, #16
 8000f64:	0409      	lsls	r1, r1, #16
 8000f66:	0412      	lsls	r2, r2, #16
 8000f68:	0c09      	lsrs	r1, r1, #16
 8000f6a:	1828      	adds	r0, r5, r0
 8000f6c:	1852      	adds	r2, r2, r1
 8000f6e:	4283      	cmp	r3, r0
 8000f70:	d200      	bcs.n	8000f74 <__aeabi_ddiv+0x2f0>
 8000f72:	e0ce      	b.n	8001112 <__aeabi_ddiv+0x48e>
 8000f74:	d100      	bne.n	8000f78 <__aeabi_ddiv+0x2f4>
 8000f76:	e0c8      	b.n	800110a <__aeabi_ddiv+0x486>
 8000f78:	1a1d      	subs	r5, r3, r0
 8000f7a:	4653      	mov	r3, sl
 8000f7c:	1a9e      	subs	r6, r3, r2
 8000f7e:	45b2      	cmp	sl, r6
 8000f80:	4192      	sbcs	r2, r2
 8000f82:	4252      	negs	r2, r2
 8000f84:	1aab      	subs	r3, r5, r2
 8000f86:	469a      	mov	sl, r3
 8000f88:	4598      	cmp	r8, r3
 8000f8a:	d100      	bne.n	8000f8e <__aeabi_ddiv+0x30a>
 8000f8c:	e117      	b.n	80011be <__aeabi_ddiv+0x53a>
 8000f8e:	0039      	movs	r1, r7
 8000f90:	0018      	movs	r0, r3
 8000f92:	f7ff f8d3 	bl	800013c <__udivsi3>
 8000f96:	9b01      	ldr	r3, [sp, #4]
 8000f98:	0005      	movs	r5, r0
 8000f9a:	4343      	muls	r3, r0
 8000f9c:	0039      	movs	r1, r7
 8000f9e:	4650      	mov	r0, sl
 8000fa0:	9304      	str	r3, [sp, #16]
 8000fa2:	f7ff f951 	bl	8000248 <__aeabi_uidivmod>
 8000fa6:	9804      	ldr	r0, [sp, #16]
 8000fa8:	040b      	lsls	r3, r1, #16
 8000faa:	0c31      	lsrs	r1, r6, #16
 8000fac:	4319      	orrs	r1, r3
 8000fae:	4288      	cmp	r0, r1
 8000fb0:	d909      	bls.n	8000fc6 <__aeabi_ddiv+0x342>
 8000fb2:	4441      	add	r1, r8
 8000fb4:	1e6b      	subs	r3, r5, #1
 8000fb6:	4588      	cmp	r8, r1
 8000fb8:	d900      	bls.n	8000fbc <__aeabi_ddiv+0x338>
 8000fba:	e107      	b.n	80011cc <__aeabi_ddiv+0x548>
 8000fbc:	4288      	cmp	r0, r1
 8000fbe:	d800      	bhi.n	8000fc2 <__aeabi_ddiv+0x33e>
 8000fc0:	e104      	b.n	80011cc <__aeabi_ddiv+0x548>
 8000fc2:	3d02      	subs	r5, #2
 8000fc4:	4441      	add	r1, r8
 8000fc6:	9b04      	ldr	r3, [sp, #16]
 8000fc8:	1acb      	subs	r3, r1, r3
 8000fca:	0018      	movs	r0, r3
 8000fcc:	0039      	movs	r1, r7
 8000fce:	9304      	str	r3, [sp, #16]
 8000fd0:	f7ff f8b4 	bl	800013c <__udivsi3>
 8000fd4:	9b01      	ldr	r3, [sp, #4]
 8000fd6:	4682      	mov	sl, r0
 8000fd8:	4343      	muls	r3, r0
 8000fda:	0039      	movs	r1, r7
 8000fdc:	9804      	ldr	r0, [sp, #16]
 8000fde:	9301      	str	r3, [sp, #4]
 8000fe0:	f7ff f932 	bl	8000248 <__aeabi_uidivmod>
 8000fe4:	9801      	ldr	r0, [sp, #4]
 8000fe6:	040b      	lsls	r3, r1, #16
 8000fe8:	0431      	lsls	r1, r6, #16
 8000fea:	0c09      	lsrs	r1, r1, #16
 8000fec:	4319      	orrs	r1, r3
 8000fee:	4288      	cmp	r0, r1
 8000ff0:	d90d      	bls.n	800100e <__aeabi_ddiv+0x38a>
 8000ff2:	4653      	mov	r3, sl
 8000ff4:	4441      	add	r1, r8
 8000ff6:	3b01      	subs	r3, #1
 8000ff8:	4588      	cmp	r8, r1
 8000ffa:	d900      	bls.n	8000ffe <__aeabi_ddiv+0x37a>
 8000ffc:	e0e8      	b.n	80011d0 <__aeabi_ddiv+0x54c>
 8000ffe:	4288      	cmp	r0, r1
 8001000:	d800      	bhi.n	8001004 <__aeabi_ddiv+0x380>
 8001002:	e0e5      	b.n	80011d0 <__aeabi_ddiv+0x54c>
 8001004:	2302      	movs	r3, #2
 8001006:	425b      	negs	r3, r3
 8001008:	469c      	mov	ip, r3
 800100a:	4441      	add	r1, r8
 800100c:	44e2      	add	sl, ip
 800100e:	9b01      	ldr	r3, [sp, #4]
 8001010:	042d      	lsls	r5, r5, #16
 8001012:	1ace      	subs	r6, r1, r3
 8001014:	4651      	mov	r1, sl
 8001016:	4329      	orrs	r1, r5
 8001018:	9d05      	ldr	r5, [sp, #20]
 800101a:	464f      	mov	r7, r9
 800101c:	002a      	movs	r2, r5
 800101e:	040b      	lsls	r3, r1, #16
 8001020:	0c08      	lsrs	r0, r1, #16
 8001022:	0c1b      	lsrs	r3, r3, #16
 8001024:	435a      	muls	r2, r3
 8001026:	4345      	muls	r5, r0
 8001028:	437b      	muls	r3, r7
 800102a:	4378      	muls	r0, r7
 800102c:	195b      	adds	r3, r3, r5
 800102e:	0c17      	lsrs	r7, r2, #16
 8001030:	18fb      	adds	r3, r7, r3
 8001032:	429d      	cmp	r5, r3
 8001034:	d903      	bls.n	800103e <__aeabi_ddiv+0x3ba>
 8001036:	2580      	movs	r5, #128	; 0x80
 8001038:	026d      	lsls	r5, r5, #9
 800103a:	46ac      	mov	ip, r5
 800103c:	4460      	add	r0, ip
 800103e:	0c1d      	lsrs	r5, r3, #16
 8001040:	0412      	lsls	r2, r2, #16
 8001042:	041b      	lsls	r3, r3, #16
 8001044:	0c12      	lsrs	r2, r2, #16
 8001046:	1828      	adds	r0, r5, r0
 8001048:	189b      	adds	r3, r3, r2
 800104a:	4286      	cmp	r6, r0
 800104c:	d200      	bcs.n	8001050 <__aeabi_ddiv+0x3cc>
 800104e:	e093      	b.n	8001178 <__aeabi_ddiv+0x4f4>
 8001050:	d100      	bne.n	8001054 <__aeabi_ddiv+0x3d0>
 8001052:	e08e      	b.n	8001172 <__aeabi_ddiv+0x4ee>
 8001054:	2301      	movs	r3, #1
 8001056:	4319      	orrs	r1, r3
 8001058:	4ba0      	ldr	r3, [pc, #640]	; (80012dc <__aeabi_ddiv+0x658>)
 800105a:	18e3      	adds	r3, r4, r3
 800105c:	2b00      	cmp	r3, #0
 800105e:	dc00      	bgt.n	8001062 <__aeabi_ddiv+0x3de>
 8001060:	e099      	b.n	8001196 <__aeabi_ddiv+0x512>
 8001062:	074a      	lsls	r2, r1, #29
 8001064:	d000      	beq.n	8001068 <__aeabi_ddiv+0x3e4>
 8001066:	e09e      	b.n	80011a6 <__aeabi_ddiv+0x522>
 8001068:	465a      	mov	r2, fp
 800106a:	01d2      	lsls	r2, r2, #7
 800106c:	d506      	bpl.n	800107c <__aeabi_ddiv+0x3f8>
 800106e:	465a      	mov	r2, fp
 8001070:	4b9b      	ldr	r3, [pc, #620]	; (80012e0 <__aeabi_ddiv+0x65c>)
 8001072:	401a      	ands	r2, r3
 8001074:	2380      	movs	r3, #128	; 0x80
 8001076:	4693      	mov	fp, r2
 8001078:	00db      	lsls	r3, r3, #3
 800107a:	18e3      	adds	r3, r4, r3
 800107c:	4a99      	ldr	r2, [pc, #612]	; (80012e4 <__aeabi_ddiv+0x660>)
 800107e:	4293      	cmp	r3, r2
 8001080:	dd68      	ble.n	8001154 <__aeabi_ddiv+0x4d0>
 8001082:	2301      	movs	r3, #1
 8001084:	9a02      	ldr	r2, [sp, #8]
 8001086:	4c98      	ldr	r4, [pc, #608]	; (80012e8 <__aeabi_ddiv+0x664>)
 8001088:	401a      	ands	r2, r3
 800108a:	2300      	movs	r3, #0
 800108c:	4694      	mov	ip, r2
 800108e:	4698      	mov	r8, r3
 8001090:	2200      	movs	r2, #0
 8001092:	e6c5      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8001094:	2280      	movs	r2, #128	; 0x80
 8001096:	464b      	mov	r3, r9
 8001098:	0312      	lsls	r2, r2, #12
 800109a:	4213      	tst	r3, r2
 800109c:	d00a      	beq.n	80010b4 <__aeabi_ddiv+0x430>
 800109e:	465b      	mov	r3, fp
 80010a0:	4213      	tst	r3, r2
 80010a2:	d106      	bne.n	80010b2 <__aeabi_ddiv+0x42e>
 80010a4:	431a      	orrs	r2, r3
 80010a6:	0312      	lsls	r2, r2, #12
 80010a8:	0b12      	lsrs	r2, r2, #12
 80010aa:	46ac      	mov	ip, r5
 80010ac:	4688      	mov	r8, r1
 80010ae:	4c8e      	ldr	r4, [pc, #568]	; (80012e8 <__aeabi_ddiv+0x664>)
 80010b0:	e6b6      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 80010b2:	464b      	mov	r3, r9
 80010b4:	431a      	orrs	r2, r3
 80010b6:	0312      	lsls	r2, r2, #12
 80010b8:	0b12      	lsrs	r2, r2, #12
 80010ba:	46bc      	mov	ip, r7
 80010bc:	4c8a      	ldr	r4, [pc, #552]	; (80012e8 <__aeabi_ddiv+0x664>)
 80010be:	e6af      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 80010c0:	0003      	movs	r3, r0
 80010c2:	465a      	mov	r2, fp
 80010c4:	3b28      	subs	r3, #40	; 0x28
 80010c6:	409a      	lsls	r2, r3
 80010c8:	2300      	movs	r3, #0
 80010ca:	4691      	mov	r9, r2
 80010cc:	4698      	mov	r8, r3
 80010ce:	e657      	b.n	8000d80 <__aeabi_ddiv+0xfc>
 80010d0:	4658      	mov	r0, fp
 80010d2:	f001 f86f 	bl	80021b4 <__clzsi2>
 80010d6:	3020      	adds	r0, #32
 80010d8:	e640      	b.n	8000d5c <__aeabi_ddiv+0xd8>
 80010da:	0003      	movs	r3, r0
 80010dc:	4652      	mov	r2, sl
 80010de:	3b28      	subs	r3, #40	; 0x28
 80010e0:	409a      	lsls	r2, r3
 80010e2:	2100      	movs	r1, #0
 80010e4:	4693      	mov	fp, r2
 80010e6:	e677      	b.n	8000dd8 <__aeabi_ddiv+0x154>
 80010e8:	f001 f864 	bl	80021b4 <__clzsi2>
 80010ec:	3020      	adds	r0, #32
 80010ee:	e65f      	b.n	8000db0 <__aeabi_ddiv+0x12c>
 80010f0:	4588      	cmp	r8, r1
 80010f2:	d200      	bcs.n	80010f6 <__aeabi_ddiv+0x472>
 80010f4:	e6c7      	b.n	8000e86 <__aeabi_ddiv+0x202>
 80010f6:	464b      	mov	r3, r9
 80010f8:	07de      	lsls	r6, r3, #31
 80010fa:	085d      	lsrs	r5, r3, #1
 80010fc:	4643      	mov	r3, r8
 80010fe:	085b      	lsrs	r3, r3, #1
 8001100:	431e      	orrs	r6, r3
 8001102:	4643      	mov	r3, r8
 8001104:	07db      	lsls	r3, r3, #31
 8001106:	469a      	mov	sl, r3
 8001108:	e6c2      	b.n	8000e90 <__aeabi_ddiv+0x20c>
 800110a:	2500      	movs	r5, #0
 800110c:	4592      	cmp	sl, r2
 800110e:	d300      	bcc.n	8001112 <__aeabi_ddiv+0x48e>
 8001110:	e733      	b.n	8000f7a <__aeabi_ddiv+0x2f6>
 8001112:	9e03      	ldr	r6, [sp, #12]
 8001114:	4659      	mov	r1, fp
 8001116:	46b4      	mov	ip, r6
 8001118:	44e2      	add	sl, ip
 800111a:	45b2      	cmp	sl, r6
 800111c:	41ad      	sbcs	r5, r5
 800111e:	426d      	negs	r5, r5
 8001120:	4445      	add	r5, r8
 8001122:	18eb      	adds	r3, r5, r3
 8001124:	3901      	subs	r1, #1
 8001126:	4598      	cmp	r8, r3
 8001128:	d207      	bcs.n	800113a <__aeabi_ddiv+0x4b6>
 800112a:	4298      	cmp	r0, r3
 800112c:	d900      	bls.n	8001130 <__aeabi_ddiv+0x4ac>
 800112e:	e07f      	b.n	8001230 <__aeabi_ddiv+0x5ac>
 8001130:	d100      	bne.n	8001134 <__aeabi_ddiv+0x4b0>
 8001132:	e0bc      	b.n	80012ae <__aeabi_ddiv+0x62a>
 8001134:	1a1d      	subs	r5, r3, r0
 8001136:	468b      	mov	fp, r1
 8001138:	e71f      	b.n	8000f7a <__aeabi_ddiv+0x2f6>
 800113a:	4598      	cmp	r8, r3
 800113c:	d1fa      	bne.n	8001134 <__aeabi_ddiv+0x4b0>
 800113e:	9d03      	ldr	r5, [sp, #12]
 8001140:	4555      	cmp	r5, sl
 8001142:	d9f2      	bls.n	800112a <__aeabi_ddiv+0x4a6>
 8001144:	4643      	mov	r3, r8
 8001146:	468b      	mov	fp, r1
 8001148:	1a1d      	subs	r5, r3, r0
 800114a:	e716      	b.n	8000f7a <__aeabi_ddiv+0x2f6>
 800114c:	469b      	mov	fp, r3
 800114e:	e6ca      	b.n	8000ee6 <__aeabi_ddiv+0x262>
 8001150:	0015      	movs	r5, r2
 8001152:	e6e7      	b.n	8000f24 <__aeabi_ddiv+0x2a0>
 8001154:	465a      	mov	r2, fp
 8001156:	08c9      	lsrs	r1, r1, #3
 8001158:	0752      	lsls	r2, r2, #29
 800115a:	430a      	orrs	r2, r1
 800115c:	055b      	lsls	r3, r3, #21
 800115e:	4690      	mov	r8, r2
 8001160:	0d5c      	lsrs	r4, r3, #21
 8001162:	465a      	mov	r2, fp
 8001164:	2301      	movs	r3, #1
 8001166:	9902      	ldr	r1, [sp, #8]
 8001168:	0252      	lsls	r2, r2, #9
 800116a:	4019      	ands	r1, r3
 800116c:	0b12      	lsrs	r2, r2, #12
 800116e:	468c      	mov	ip, r1
 8001170:	e656      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8001172:	2b00      	cmp	r3, #0
 8001174:	d100      	bne.n	8001178 <__aeabi_ddiv+0x4f4>
 8001176:	e76f      	b.n	8001058 <__aeabi_ddiv+0x3d4>
 8001178:	4446      	add	r6, r8
 800117a:	1e4a      	subs	r2, r1, #1
 800117c:	45b0      	cmp	r8, r6
 800117e:	d929      	bls.n	80011d4 <__aeabi_ddiv+0x550>
 8001180:	0011      	movs	r1, r2
 8001182:	4286      	cmp	r6, r0
 8001184:	d000      	beq.n	8001188 <__aeabi_ddiv+0x504>
 8001186:	e765      	b.n	8001054 <__aeabi_ddiv+0x3d0>
 8001188:	9a03      	ldr	r2, [sp, #12]
 800118a:	4293      	cmp	r3, r2
 800118c:	d000      	beq.n	8001190 <__aeabi_ddiv+0x50c>
 800118e:	e761      	b.n	8001054 <__aeabi_ddiv+0x3d0>
 8001190:	e762      	b.n	8001058 <__aeabi_ddiv+0x3d4>
 8001192:	2101      	movs	r1, #1
 8001194:	4249      	negs	r1, r1
 8001196:	2001      	movs	r0, #1
 8001198:	1ac2      	subs	r2, r0, r3
 800119a:	2a38      	cmp	r2, #56	; 0x38
 800119c:	dd21      	ble.n	80011e2 <__aeabi_ddiv+0x55e>
 800119e:	9b02      	ldr	r3, [sp, #8]
 80011a0:	4003      	ands	r3, r0
 80011a2:	469c      	mov	ip, r3
 80011a4:	e638      	b.n	8000e18 <__aeabi_ddiv+0x194>
 80011a6:	220f      	movs	r2, #15
 80011a8:	400a      	ands	r2, r1
 80011aa:	2a04      	cmp	r2, #4
 80011ac:	d100      	bne.n	80011b0 <__aeabi_ddiv+0x52c>
 80011ae:	e75b      	b.n	8001068 <__aeabi_ddiv+0x3e4>
 80011b0:	000a      	movs	r2, r1
 80011b2:	1d11      	adds	r1, r2, #4
 80011b4:	4291      	cmp	r1, r2
 80011b6:	4192      	sbcs	r2, r2
 80011b8:	4252      	negs	r2, r2
 80011ba:	4493      	add	fp, r2
 80011bc:	e754      	b.n	8001068 <__aeabi_ddiv+0x3e4>
 80011be:	4b47      	ldr	r3, [pc, #284]	; (80012dc <__aeabi_ddiv+0x658>)
 80011c0:	18e3      	adds	r3, r4, r3
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	dde5      	ble.n	8001192 <__aeabi_ddiv+0x50e>
 80011c6:	2201      	movs	r2, #1
 80011c8:	4252      	negs	r2, r2
 80011ca:	e7f2      	b.n	80011b2 <__aeabi_ddiv+0x52e>
 80011cc:	001d      	movs	r5, r3
 80011ce:	e6fa      	b.n	8000fc6 <__aeabi_ddiv+0x342>
 80011d0:	469a      	mov	sl, r3
 80011d2:	e71c      	b.n	800100e <__aeabi_ddiv+0x38a>
 80011d4:	42b0      	cmp	r0, r6
 80011d6:	d839      	bhi.n	800124c <__aeabi_ddiv+0x5c8>
 80011d8:	d06e      	beq.n	80012b8 <__aeabi_ddiv+0x634>
 80011da:	0011      	movs	r1, r2
 80011dc:	e73a      	b.n	8001054 <__aeabi_ddiv+0x3d0>
 80011de:	9302      	str	r3, [sp, #8]
 80011e0:	e73a      	b.n	8001058 <__aeabi_ddiv+0x3d4>
 80011e2:	2a1f      	cmp	r2, #31
 80011e4:	dc3c      	bgt.n	8001260 <__aeabi_ddiv+0x5dc>
 80011e6:	2320      	movs	r3, #32
 80011e8:	1a9b      	subs	r3, r3, r2
 80011ea:	000c      	movs	r4, r1
 80011ec:	4658      	mov	r0, fp
 80011ee:	4099      	lsls	r1, r3
 80011f0:	4098      	lsls	r0, r3
 80011f2:	1e4b      	subs	r3, r1, #1
 80011f4:	4199      	sbcs	r1, r3
 80011f6:	465b      	mov	r3, fp
 80011f8:	40d4      	lsrs	r4, r2
 80011fa:	40d3      	lsrs	r3, r2
 80011fc:	4320      	orrs	r0, r4
 80011fe:	4308      	orrs	r0, r1
 8001200:	001a      	movs	r2, r3
 8001202:	0743      	lsls	r3, r0, #29
 8001204:	d009      	beq.n	800121a <__aeabi_ddiv+0x596>
 8001206:	230f      	movs	r3, #15
 8001208:	4003      	ands	r3, r0
 800120a:	2b04      	cmp	r3, #4
 800120c:	d005      	beq.n	800121a <__aeabi_ddiv+0x596>
 800120e:	0001      	movs	r1, r0
 8001210:	1d08      	adds	r0, r1, #4
 8001212:	4288      	cmp	r0, r1
 8001214:	419b      	sbcs	r3, r3
 8001216:	425b      	negs	r3, r3
 8001218:	18d2      	adds	r2, r2, r3
 800121a:	0213      	lsls	r3, r2, #8
 800121c:	d53a      	bpl.n	8001294 <__aeabi_ddiv+0x610>
 800121e:	2301      	movs	r3, #1
 8001220:	9a02      	ldr	r2, [sp, #8]
 8001222:	2401      	movs	r4, #1
 8001224:	401a      	ands	r2, r3
 8001226:	2300      	movs	r3, #0
 8001228:	4694      	mov	ip, r2
 800122a:	4698      	mov	r8, r3
 800122c:	2200      	movs	r2, #0
 800122e:	e5f7      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 8001230:	2102      	movs	r1, #2
 8001232:	4249      	negs	r1, r1
 8001234:	468c      	mov	ip, r1
 8001236:	9d03      	ldr	r5, [sp, #12]
 8001238:	44e3      	add	fp, ip
 800123a:	46ac      	mov	ip, r5
 800123c:	44e2      	add	sl, ip
 800123e:	45aa      	cmp	sl, r5
 8001240:	41ad      	sbcs	r5, r5
 8001242:	426d      	negs	r5, r5
 8001244:	4445      	add	r5, r8
 8001246:	18ed      	adds	r5, r5, r3
 8001248:	1a2d      	subs	r5, r5, r0
 800124a:	e696      	b.n	8000f7a <__aeabi_ddiv+0x2f6>
 800124c:	1e8a      	subs	r2, r1, #2
 800124e:	9903      	ldr	r1, [sp, #12]
 8001250:	004d      	lsls	r5, r1, #1
 8001252:	428d      	cmp	r5, r1
 8001254:	4189      	sbcs	r1, r1
 8001256:	4249      	negs	r1, r1
 8001258:	4441      	add	r1, r8
 800125a:	1876      	adds	r6, r6, r1
 800125c:	9503      	str	r5, [sp, #12]
 800125e:	e78f      	b.n	8001180 <__aeabi_ddiv+0x4fc>
 8001260:	201f      	movs	r0, #31
 8001262:	4240      	negs	r0, r0
 8001264:	1ac3      	subs	r3, r0, r3
 8001266:	4658      	mov	r0, fp
 8001268:	40d8      	lsrs	r0, r3
 800126a:	0003      	movs	r3, r0
 800126c:	2a20      	cmp	r2, #32
 800126e:	d028      	beq.n	80012c2 <__aeabi_ddiv+0x63e>
 8001270:	2040      	movs	r0, #64	; 0x40
 8001272:	465d      	mov	r5, fp
 8001274:	1a82      	subs	r2, r0, r2
 8001276:	4095      	lsls	r5, r2
 8001278:	4329      	orrs	r1, r5
 800127a:	1e4a      	subs	r2, r1, #1
 800127c:	4191      	sbcs	r1, r2
 800127e:	4319      	orrs	r1, r3
 8001280:	2307      	movs	r3, #7
 8001282:	2200      	movs	r2, #0
 8001284:	400b      	ands	r3, r1
 8001286:	d009      	beq.n	800129c <__aeabi_ddiv+0x618>
 8001288:	230f      	movs	r3, #15
 800128a:	2200      	movs	r2, #0
 800128c:	400b      	ands	r3, r1
 800128e:	0008      	movs	r0, r1
 8001290:	2b04      	cmp	r3, #4
 8001292:	d1bd      	bne.n	8001210 <__aeabi_ddiv+0x58c>
 8001294:	0001      	movs	r1, r0
 8001296:	0753      	lsls	r3, r2, #29
 8001298:	0252      	lsls	r2, r2, #9
 800129a:	0b12      	lsrs	r2, r2, #12
 800129c:	08c9      	lsrs	r1, r1, #3
 800129e:	4319      	orrs	r1, r3
 80012a0:	2301      	movs	r3, #1
 80012a2:	4688      	mov	r8, r1
 80012a4:	9902      	ldr	r1, [sp, #8]
 80012a6:	2400      	movs	r4, #0
 80012a8:	4019      	ands	r1, r3
 80012aa:	468c      	mov	ip, r1
 80012ac:	e5b8      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 80012ae:	4552      	cmp	r2, sl
 80012b0:	d8be      	bhi.n	8001230 <__aeabi_ddiv+0x5ac>
 80012b2:	468b      	mov	fp, r1
 80012b4:	2500      	movs	r5, #0
 80012b6:	e660      	b.n	8000f7a <__aeabi_ddiv+0x2f6>
 80012b8:	9d03      	ldr	r5, [sp, #12]
 80012ba:	429d      	cmp	r5, r3
 80012bc:	d3c6      	bcc.n	800124c <__aeabi_ddiv+0x5c8>
 80012be:	0011      	movs	r1, r2
 80012c0:	e762      	b.n	8001188 <__aeabi_ddiv+0x504>
 80012c2:	2500      	movs	r5, #0
 80012c4:	e7d8      	b.n	8001278 <__aeabi_ddiv+0x5f4>
 80012c6:	2280      	movs	r2, #128	; 0x80
 80012c8:	465b      	mov	r3, fp
 80012ca:	0312      	lsls	r2, r2, #12
 80012cc:	431a      	orrs	r2, r3
 80012ce:	9b01      	ldr	r3, [sp, #4]
 80012d0:	0312      	lsls	r2, r2, #12
 80012d2:	0b12      	lsrs	r2, r2, #12
 80012d4:	469c      	mov	ip, r3
 80012d6:	4688      	mov	r8, r1
 80012d8:	4c03      	ldr	r4, [pc, #12]	; (80012e8 <__aeabi_ddiv+0x664>)
 80012da:	e5a1      	b.n	8000e20 <__aeabi_ddiv+0x19c>
 80012dc:	000003ff 	.word	0x000003ff
 80012e0:	feffffff 	.word	0xfeffffff
 80012e4:	000007fe 	.word	0x000007fe
 80012e8:	000007ff 	.word	0x000007ff

080012ec <__eqdf2>:
 80012ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80012ee:	464f      	mov	r7, r9
 80012f0:	4646      	mov	r6, r8
 80012f2:	46d6      	mov	lr, sl
 80012f4:	005c      	lsls	r4, r3, #1
 80012f6:	b5c0      	push	{r6, r7, lr}
 80012f8:	031f      	lsls	r7, r3, #12
 80012fa:	0fdb      	lsrs	r3, r3, #31
 80012fc:	469a      	mov	sl, r3
 80012fe:	4b17      	ldr	r3, [pc, #92]	; (800135c <__eqdf2+0x70>)
 8001300:	030e      	lsls	r6, r1, #12
 8001302:	004d      	lsls	r5, r1, #1
 8001304:	4684      	mov	ip, r0
 8001306:	4680      	mov	r8, r0
 8001308:	0b36      	lsrs	r6, r6, #12
 800130a:	0d6d      	lsrs	r5, r5, #21
 800130c:	0fc9      	lsrs	r1, r1, #31
 800130e:	4691      	mov	r9, r2
 8001310:	0b3f      	lsrs	r7, r7, #12
 8001312:	0d64      	lsrs	r4, r4, #21
 8001314:	2001      	movs	r0, #1
 8001316:	429d      	cmp	r5, r3
 8001318:	d008      	beq.n	800132c <__eqdf2+0x40>
 800131a:	429c      	cmp	r4, r3
 800131c:	d001      	beq.n	8001322 <__eqdf2+0x36>
 800131e:	42a5      	cmp	r5, r4
 8001320:	d00b      	beq.n	800133a <__eqdf2+0x4e>
 8001322:	bc1c      	pop	{r2, r3, r4}
 8001324:	4690      	mov	r8, r2
 8001326:	4699      	mov	r9, r3
 8001328:	46a2      	mov	sl, r4
 800132a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800132c:	4663      	mov	r3, ip
 800132e:	4333      	orrs	r3, r6
 8001330:	d1f7      	bne.n	8001322 <__eqdf2+0x36>
 8001332:	42ac      	cmp	r4, r5
 8001334:	d1f5      	bne.n	8001322 <__eqdf2+0x36>
 8001336:	433a      	orrs	r2, r7
 8001338:	d1f3      	bne.n	8001322 <__eqdf2+0x36>
 800133a:	2001      	movs	r0, #1
 800133c:	42be      	cmp	r6, r7
 800133e:	d1f0      	bne.n	8001322 <__eqdf2+0x36>
 8001340:	45c8      	cmp	r8, r9
 8001342:	d1ee      	bne.n	8001322 <__eqdf2+0x36>
 8001344:	4551      	cmp	r1, sl
 8001346:	d007      	beq.n	8001358 <__eqdf2+0x6c>
 8001348:	2d00      	cmp	r5, #0
 800134a:	d1ea      	bne.n	8001322 <__eqdf2+0x36>
 800134c:	4663      	mov	r3, ip
 800134e:	431e      	orrs	r6, r3
 8001350:	0030      	movs	r0, r6
 8001352:	1e46      	subs	r6, r0, #1
 8001354:	41b0      	sbcs	r0, r6
 8001356:	e7e4      	b.n	8001322 <__eqdf2+0x36>
 8001358:	2000      	movs	r0, #0
 800135a:	e7e2      	b.n	8001322 <__eqdf2+0x36>
 800135c:	000007ff 	.word	0x000007ff

08001360 <__gedf2>:
 8001360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001362:	4645      	mov	r5, r8
 8001364:	46de      	mov	lr, fp
 8001366:	4657      	mov	r7, sl
 8001368:	464e      	mov	r6, r9
 800136a:	b5e0      	push	{r5, r6, r7, lr}
 800136c:	031f      	lsls	r7, r3, #12
 800136e:	0b3d      	lsrs	r5, r7, #12
 8001370:	4f2c      	ldr	r7, [pc, #176]	; (8001424 <__gedf2+0xc4>)
 8001372:	030e      	lsls	r6, r1, #12
 8001374:	004c      	lsls	r4, r1, #1
 8001376:	46ab      	mov	fp, r5
 8001378:	005d      	lsls	r5, r3, #1
 800137a:	4684      	mov	ip, r0
 800137c:	0b36      	lsrs	r6, r6, #12
 800137e:	0d64      	lsrs	r4, r4, #21
 8001380:	0fc9      	lsrs	r1, r1, #31
 8001382:	4690      	mov	r8, r2
 8001384:	0d6d      	lsrs	r5, r5, #21
 8001386:	0fdb      	lsrs	r3, r3, #31
 8001388:	42bc      	cmp	r4, r7
 800138a:	d02a      	beq.n	80013e2 <__gedf2+0x82>
 800138c:	4f25      	ldr	r7, [pc, #148]	; (8001424 <__gedf2+0xc4>)
 800138e:	42bd      	cmp	r5, r7
 8001390:	d02d      	beq.n	80013ee <__gedf2+0x8e>
 8001392:	2c00      	cmp	r4, #0
 8001394:	d10f      	bne.n	80013b6 <__gedf2+0x56>
 8001396:	4330      	orrs	r0, r6
 8001398:	0007      	movs	r7, r0
 800139a:	4681      	mov	r9, r0
 800139c:	4278      	negs	r0, r7
 800139e:	4178      	adcs	r0, r7
 80013a0:	b2c0      	uxtb	r0, r0
 80013a2:	2d00      	cmp	r5, #0
 80013a4:	d117      	bne.n	80013d6 <__gedf2+0x76>
 80013a6:	465f      	mov	r7, fp
 80013a8:	433a      	orrs	r2, r7
 80013aa:	d114      	bne.n	80013d6 <__gedf2+0x76>
 80013ac:	464b      	mov	r3, r9
 80013ae:	2000      	movs	r0, #0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d00a      	beq.n	80013ca <__gedf2+0x6a>
 80013b4:	e006      	b.n	80013c4 <__gedf2+0x64>
 80013b6:	2d00      	cmp	r5, #0
 80013b8:	d102      	bne.n	80013c0 <__gedf2+0x60>
 80013ba:	4658      	mov	r0, fp
 80013bc:	4302      	orrs	r2, r0
 80013be:	d001      	beq.n	80013c4 <__gedf2+0x64>
 80013c0:	4299      	cmp	r1, r3
 80013c2:	d018      	beq.n	80013f6 <__gedf2+0x96>
 80013c4:	4248      	negs	r0, r1
 80013c6:	2101      	movs	r1, #1
 80013c8:	4308      	orrs	r0, r1
 80013ca:	bc3c      	pop	{r2, r3, r4, r5}
 80013cc:	4690      	mov	r8, r2
 80013ce:	4699      	mov	r9, r3
 80013d0:	46a2      	mov	sl, r4
 80013d2:	46ab      	mov	fp, r5
 80013d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013d6:	2800      	cmp	r0, #0
 80013d8:	d0f2      	beq.n	80013c0 <__gedf2+0x60>
 80013da:	2001      	movs	r0, #1
 80013dc:	3b01      	subs	r3, #1
 80013de:	4318      	orrs	r0, r3
 80013e0:	e7f3      	b.n	80013ca <__gedf2+0x6a>
 80013e2:	0037      	movs	r7, r6
 80013e4:	4307      	orrs	r7, r0
 80013e6:	d0d1      	beq.n	800138c <__gedf2+0x2c>
 80013e8:	2002      	movs	r0, #2
 80013ea:	4240      	negs	r0, r0
 80013ec:	e7ed      	b.n	80013ca <__gedf2+0x6a>
 80013ee:	465f      	mov	r7, fp
 80013f0:	4317      	orrs	r7, r2
 80013f2:	d0ce      	beq.n	8001392 <__gedf2+0x32>
 80013f4:	e7f8      	b.n	80013e8 <__gedf2+0x88>
 80013f6:	42ac      	cmp	r4, r5
 80013f8:	dce4      	bgt.n	80013c4 <__gedf2+0x64>
 80013fa:	da03      	bge.n	8001404 <__gedf2+0xa4>
 80013fc:	1e48      	subs	r0, r1, #1
 80013fe:	2101      	movs	r1, #1
 8001400:	4308      	orrs	r0, r1
 8001402:	e7e2      	b.n	80013ca <__gedf2+0x6a>
 8001404:	455e      	cmp	r6, fp
 8001406:	d8dd      	bhi.n	80013c4 <__gedf2+0x64>
 8001408:	d006      	beq.n	8001418 <__gedf2+0xb8>
 800140a:	2000      	movs	r0, #0
 800140c:	455e      	cmp	r6, fp
 800140e:	d2dc      	bcs.n	80013ca <__gedf2+0x6a>
 8001410:	2301      	movs	r3, #1
 8001412:	1e48      	subs	r0, r1, #1
 8001414:	4318      	orrs	r0, r3
 8001416:	e7d8      	b.n	80013ca <__gedf2+0x6a>
 8001418:	45c4      	cmp	ip, r8
 800141a:	d8d3      	bhi.n	80013c4 <__gedf2+0x64>
 800141c:	2000      	movs	r0, #0
 800141e:	45c4      	cmp	ip, r8
 8001420:	d3f6      	bcc.n	8001410 <__gedf2+0xb0>
 8001422:	e7d2      	b.n	80013ca <__gedf2+0x6a>
 8001424:	000007ff 	.word	0x000007ff

08001428 <__ledf2>:
 8001428:	b5f0      	push	{r4, r5, r6, r7, lr}
 800142a:	464e      	mov	r6, r9
 800142c:	4645      	mov	r5, r8
 800142e:	46de      	mov	lr, fp
 8001430:	4657      	mov	r7, sl
 8001432:	005c      	lsls	r4, r3, #1
 8001434:	b5e0      	push	{r5, r6, r7, lr}
 8001436:	031f      	lsls	r7, r3, #12
 8001438:	0fdb      	lsrs	r3, r3, #31
 800143a:	4699      	mov	r9, r3
 800143c:	4b2a      	ldr	r3, [pc, #168]	; (80014e8 <__ledf2+0xc0>)
 800143e:	030e      	lsls	r6, r1, #12
 8001440:	004d      	lsls	r5, r1, #1
 8001442:	0fc9      	lsrs	r1, r1, #31
 8001444:	4684      	mov	ip, r0
 8001446:	0b36      	lsrs	r6, r6, #12
 8001448:	0d6d      	lsrs	r5, r5, #21
 800144a:	468b      	mov	fp, r1
 800144c:	4690      	mov	r8, r2
 800144e:	0b3f      	lsrs	r7, r7, #12
 8001450:	0d64      	lsrs	r4, r4, #21
 8001452:	429d      	cmp	r5, r3
 8001454:	d020      	beq.n	8001498 <__ledf2+0x70>
 8001456:	4b24      	ldr	r3, [pc, #144]	; (80014e8 <__ledf2+0xc0>)
 8001458:	429c      	cmp	r4, r3
 800145a:	d022      	beq.n	80014a2 <__ledf2+0x7a>
 800145c:	2d00      	cmp	r5, #0
 800145e:	d112      	bne.n	8001486 <__ledf2+0x5e>
 8001460:	4330      	orrs	r0, r6
 8001462:	4243      	negs	r3, r0
 8001464:	4143      	adcs	r3, r0
 8001466:	b2db      	uxtb	r3, r3
 8001468:	2c00      	cmp	r4, #0
 800146a:	d01f      	beq.n	80014ac <__ledf2+0x84>
 800146c:	2b00      	cmp	r3, #0
 800146e:	d00c      	beq.n	800148a <__ledf2+0x62>
 8001470:	464b      	mov	r3, r9
 8001472:	2001      	movs	r0, #1
 8001474:	3b01      	subs	r3, #1
 8001476:	4303      	orrs	r3, r0
 8001478:	0018      	movs	r0, r3
 800147a:	bc3c      	pop	{r2, r3, r4, r5}
 800147c:	4690      	mov	r8, r2
 800147e:	4699      	mov	r9, r3
 8001480:	46a2      	mov	sl, r4
 8001482:	46ab      	mov	fp, r5
 8001484:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001486:	2c00      	cmp	r4, #0
 8001488:	d016      	beq.n	80014b8 <__ledf2+0x90>
 800148a:	45cb      	cmp	fp, r9
 800148c:	d017      	beq.n	80014be <__ledf2+0x96>
 800148e:	465b      	mov	r3, fp
 8001490:	4259      	negs	r1, r3
 8001492:	2301      	movs	r3, #1
 8001494:	430b      	orrs	r3, r1
 8001496:	e7ef      	b.n	8001478 <__ledf2+0x50>
 8001498:	0031      	movs	r1, r6
 800149a:	2302      	movs	r3, #2
 800149c:	4301      	orrs	r1, r0
 800149e:	d1eb      	bne.n	8001478 <__ledf2+0x50>
 80014a0:	e7d9      	b.n	8001456 <__ledf2+0x2e>
 80014a2:	0039      	movs	r1, r7
 80014a4:	2302      	movs	r3, #2
 80014a6:	4311      	orrs	r1, r2
 80014a8:	d1e6      	bne.n	8001478 <__ledf2+0x50>
 80014aa:	e7d7      	b.n	800145c <__ledf2+0x34>
 80014ac:	433a      	orrs	r2, r7
 80014ae:	d1dd      	bne.n	800146c <__ledf2+0x44>
 80014b0:	2300      	movs	r3, #0
 80014b2:	2800      	cmp	r0, #0
 80014b4:	d0e0      	beq.n	8001478 <__ledf2+0x50>
 80014b6:	e7ea      	b.n	800148e <__ledf2+0x66>
 80014b8:	433a      	orrs	r2, r7
 80014ba:	d1e6      	bne.n	800148a <__ledf2+0x62>
 80014bc:	e7e7      	b.n	800148e <__ledf2+0x66>
 80014be:	42a5      	cmp	r5, r4
 80014c0:	dce5      	bgt.n	800148e <__ledf2+0x66>
 80014c2:	db05      	blt.n	80014d0 <__ledf2+0xa8>
 80014c4:	42be      	cmp	r6, r7
 80014c6:	d8e2      	bhi.n	800148e <__ledf2+0x66>
 80014c8:	d007      	beq.n	80014da <__ledf2+0xb2>
 80014ca:	2300      	movs	r3, #0
 80014cc:	42be      	cmp	r6, r7
 80014ce:	d2d3      	bcs.n	8001478 <__ledf2+0x50>
 80014d0:	4659      	mov	r1, fp
 80014d2:	2301      	movs	r3, #1
 80014d4:	3901      	subs	r1, #1
 80014d6:	430b      	orrs	r3, r1
 80014d8:	e7ce      	b.n	8001478 <__ledf2+0x50>
 80014da:	45c4      	cmp	ip, r8
 80014dc:	d8d7      	bhi.n	800148e <__ledf2+0x66>
 80014de:	2300      	movs	r3, #0
 80014e0:	45c4      	cmp	ip, r8
 80014e2:	d3f5      	bcc.n	80014d0 <__ledf2+0xa8>
 80014e4:	e7c8      	b.n	8001478 <__ledf2+0x50>
 80014e6:	46c0      	nop			; (mov r8, r8)
 80014e8:	000007ff 	.word	0x000007ff

080014ec <__aeabi_dmul>:
 80014ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014ee:	4657      	mov	r7, sl
 80014f0:	4645      	mov	r5, r8
 80014f2:	46de      	mov	lr, fp
 80014f4:	464e      	mov	r6, r9
 80014f6:	b5e0      	push	{r5, r6, r7, lr}
 80014f8:	030c      	lsls	r4, r1, #12
 80014fa:	4698      	mov	r8, r3
 80014fc:	004e      	lsls	r6, r1, #1
 80014fe:	0b23      	lsrs	r3, r4, #12
 8001500:	b087      	sub	sp, #28
 8001502:	0007      	movs	r7, r0
 8001504:	4692      	mov	sl, r2
 8001506:	469b      	mov	fp, r3
 8001508:	0d76      	lsrs	r6, r6, #21
 800150a:	0fcd      	lsrs	r5, r1, #31
 800150c:	2e00      	cmp	r6, #0
 800150e:	d06b      	beq.n	80015e8 <__aeabi_dmul+0xfc>
 8001510:	4b6d      	ldr	r3, [pc, #436]	; (80016c8 <__aeabi_dmul+0x1dc>)
 8001512:	429e      	cmp	r6, r3
 8001514:	d035      	beq.n	8001582 <__aeabi_dmul+0x96>
 8001516:	2480      	movs	r4, #128	; 0x80
 8001518:	465b      	mov	r3, fp
 800151a:	0f42      	lsrs	r2, r0, #29
 800151c:	0424      	lsls	r4, r4, #16
 800151e:	00db      	lsls	r3, r3, #3
 8001520:	4314      	orrs	r4, r2
 8001522:	431c      	orrs	r4, r3
 8001524:	00c3      	lsls	r3, r0, #3
 8001526:	4699      	mov	r9, r3
 8001528:	4b68      	ldr	r3, [pc, #416]	; (80016cc <__aeabi_dmul+0x1e0>)
 800152a:	46a3      	mov	fp, r4
 800152c:	469c      	mov	ip, r3
 800152e:	2300      	movs	r3, #0
 8001530:	2700      	movs	r7, #0
 8001532:	4466      	add	r6, ip
 8001534:	9302      	str	r3, [sp, #8]
 8001536:	4643      	mov	r3, r8
 8001538:	031c      	lsls	r4, r3, #12
 800153a:	005a      	lsls	r2, r3, #1
 800153c:	0fdb      	lsrs	r3, r3, #31
 800153e:	4650      	mov	r0, sl
 8001540:	0b24      	lsrs	r4, r4, #12
 8001542:	0d52      	lsrs	r2, r2, #21
 8001544:	4698      	mov	r8, r3
 8001546:	d100      	bne.n	800154a <__aeabi_dmul+0x5e>
 8001548:	e076      	b.n	8001638 <__aeabi_dmul+0x14c>
 800154a:	4b5f      	ldr	r3, [pc, #380]	; (80016c8 <__aeabi_dmul+0x1dc>)
 800154c:	429a      	cmp	r2, r3
 800154e:	d06d      	beq.n	800162c <__aeabi_dmul+0x140>
 8001550:	2380      	movs	r3, #128	; 0x80
 8001552:	0f41      	lsrs	r1, r0, #29
 8001554:	041b      	lsls	r3, r3, #16
 8001556:	430b      	orrs	r3, r1
 8001558:	495c      	ldr	r1, [pc, #368]	; (80016cc <__aeabi_dmul+0x1e0>)
 800155a:	00e4      	lsls	r4, r4, #3
 800155c:	468c      	mov	ip, r1
 800155e:	431c      	orrs	r4, r3
 8001560:	00c3      	lsls	r3, r0, #3
 8001562:	2000      	movs	r0, #0
 8001564:	4462      	add	r2, ip
 8001566:	4641      	mov	r1, r8
 8001568:	18b6      	adds	r6, r6, r2
 800156a:	4069      	eors	r1, r5
 800156c:	1c72      	adds	r2, r6, #1
 800156e:	9101      	str	r1, [sp, #4]
 8001570:	4694      	mov	ip, r2
 8001572:	4307      	orrs	r7, r0
 8001574:	2f0f      	cmp	r7, #15
 8001576:	d900      	bls.n	800157a <__aeabi_dmul+0x8e>
 8001578:	e0b0      	b.n	80016dc <__aeabi_dmul+0x1f0>
 800157a:	4a55      	ldr	r2, [pc, #340]	; (80016d0 <__aeabi_dmul+0x1e4>)
 800157c:	00bf      	lsls	r7, r7, #2
 800157e:	59d2      	ldr	r2, [r2, r7]
 8001580:	4697      	mov	pc, r2
 8001582:	465b      	mov	r3, fp
 8001584:	4303      	orrs	r3, r0
 8001586:	4699      	mov	r9, r3
 8001588:	d000      	beq.n	800158c <__aeabi_dmul+0xa0>
 800158a:	e087      	b.n	800169c <__aeabi_dmul+0x1b0>
 800158c:	2300      	movs	r3, #0
 800158e:	469b      	mov	fp, r3
 8001590:	3302      	adds	r3, #2
 8001592:	2708      	movs	r7, #8
 8001594:	9302      	str	r3, [sp, #8]
 8001596:	e7ce      	b.n	8001536 <__aeabi_dmul+0x4a>
 8001598:	4642      	mov	r2, r8
 800159a:	9201      	str	r2, [sp, #4]
 800159c:	2802      	cmp	r0, #2
 800159e:	d067      	beq.n	8001670 <__aeabi_dmul+0x184>
 80015a0:	2803      	cmp	r0, #3
 80015a2:	d100      	bne.n	80015a6 <__aeabi_dmul+0xba>
 80015a4:	e20e      	b.n	80019c4 <__aeabi_dmul+0x4d8>
 80015a6:	2801      	cmp	r0, #1
 80015a8:	d000      	beq.n	80015ac <__aeabi_dmul+0xc0>
 80015aa:	e162      	b.n	8001872 <__aeabi_dmul+0x386>
 80015ac:	2300      	movs	r3, #0
 80015ae:	2400      	movs	r4, #0
 80015b0:	2200      	movs	r2, #0
 80015b2:	4699      	mov	r9, r3
 80015b4:	9901      	ldr	r1, [sp, #4]
 80015b6:	4001      	ands	r1, r0
 80015b8:	b2cd      	uxtb	r5, r1
 80015ba:	2100      	movs	r1, #0
 80015bc:	0312      	lsls	r2, r2, #12
 80015be:	0d0b      	lsrs	r3, r1, #20
 80015c0:	0b12      	lsrs	r2, r2, #12
 80015c2:	051b      	lsls	r3, r3, #20
 80015c4:	4313      	orrs	r3, r2
 80015c6:	4a43      	ldr	r2, [pc, #268]	; (80016d4 <__aeabi_dmul+0x1e8>)
 80015c8:	0524      	lsls	r4, r4, #20
 80015ca:	4013      	ands	r3, r2
 80015cc:	431c      	orrs	r4, r3
 80015ce:	0064      	lsls	r4, r4, #1
 80015d0:	07ed      	lsls	r5, r5, #31
 80015d2:	0864      	lsrs	r4, r4, #1
 80015d4:	432c      	orrs	r4, r5
 80015d6:	4648      	mov	r0, r9
 80015d8:	0021      	movs	r1, r4
 80015da:	b007      	add	sp, #28
 80015dc:	bc3c      	pop	{r2, r3, r4, r5}
 80015de:	4690      	mov	r8, r2
 80015e0:	4699      	mov	r9, r3
 80015e2:	46a2      	mov	sl, r4
 80015e4:	46ab      	mov	fp, r5
 80015e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015e8:	4303      	orrs	r3, r0
 80015ea:	4699      	mov	r9, r3
 80015ec:	d04f      	beq.n	800168e <__aeabi_dmul+0x1a2>
 80015ee:	465b      	mov	r3, fp
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d100      	bne.n	80015f6 <__aeabi_dmul+0x10a>
 80015f4:	e189      	b.n	800190a <__aeabi_dmul+0x41e>
 80015f6:	4658      	mov	r0, fp
 80015f8:	f000 fddc 	bl	80021b4 <__clzsi2>
 80015fc:	0003      	movs	r3, r0
 80015fe:	3b0b      	subs	r3, #11
 8001600:	2b1c      	cmp	r3, #28
 8001602:	dd00      	ble.n	8001606 <__aeabi_dmul+0x11a>
 8001604:	e17a      	b.n	80018fc <__aeabi_dmul+0x410>
 8001606:	221d      	movs	r2, #29
 8001608:	1ad3      	subs	r3, r2, r3
 800160a:	003a      	movs	r2, r7
 800160c:	0001      	movs	r1, r0
 800160e:	465c      	mov	r4, fp
 8001610:	40da      	lsrs	r2, r3
 8001612:	3908      	subs	r1, #8
 8001614:	408c      	lsls	r4, r1
 8001616:	0013      	movs	r3, r2
 8001618:	408f      	lsls	r7, r1
 800161a:	4323      	orrs	r3, r4
 800161c:	469b      	mov	fp, r3
 800161e:	46b9      	mov	r9, r7
 8001620:	2300      	movs	r3, #0
 8001622:	4e2d      	ldr	r6, [pc, #180]	; (80016d8 <__aeabi_dmul+0x1ec>)
 8001624:	2700      	movs	r7, #0
 8001626:	1a36      	subs	r6, r6, r0
 8001628:	9302      	str	r3, [sp, #8]
 800162a:	e784      	b.n	8001536 <__aeabi_dmul+0x4a>
 800162c:	4653      	mov	r3, sl
 800162e:	4323      	orrs	r3, r4
 8001630:	d12a      	bne.n	8001688 <__aeabi_dmul+0x19c>
 8001632:	2400      	movs	r4, #0
 8001634:	2002      	movs	r0, #2
 8001636:	e796      	b.n	8001566 <__aeabi_dmul+0x7a>
 8001638:	4653      	mov	r3, sl
 800163a:	4323      	orrs	r3, r4
 800163c:	d020      	beq.n	8001680 <__aeabi_dmul+0x194>
 800163e:	2c00      	cmp	r4, #0
 8001640:	d100      	bne.n	8001644 <__aeabi_dmul+0x158>
 8001642:	e157      	b.n	80018f4 <__aeabi_dmul+0x408>
 8001644:	0020      	movs	r0, r4
 8001646:	f000 fdb5 	bl	80021b4 <__clzsi2>
 800164a:	0003      	movs	r3, r0
 800164c:	3b0b      	subs	r3, #11
 800164e:	2b1c      	cmp	r3, #28
 8001650:	dd00      	ble.n	8001654 <__aeabi_dmul+0x168>
 8001652:	e149      	b.n	80018e8 <__aeabi_dmul+0x3fc>
 8001654:	211d      	movs	r1, #29
 8001656:	1acb      	subs	r3, r1, r3
 8001658:	4651      	mov	r1, sl
 800165a:	0002      	movs	r2, r0
 800165c:	40d9      	lsrs	r1, r3
 800165e:	4653      	mov	r3, sl
 8001660:	3a08      	subs	r2, #8
 8001662:	4094      	lsls	r4, r2
 8001664:	4093      	lsls	r3, r2
 8001666:	430c      	orrs	r4, r1
 8001668:	4a1b      	ldr	r2, [pc, #108]	; (80016d8 <__aeabi_dmul+0x1ec>)
 800166a:	1a12      	subs	r2, r2, r0
 800166c:	2000      	movs	r0, #0
 800166e:	e77a      	b.n	8001566 <__aeabi_dmul+0x7a>
 8001670:	2501      	movs	r5, #1
 8001672:	9b01      	ldr	r3, [sp, #4]
 8001674:	4c14      	ldr	r4, [pc, #80]	; (80016c8 <__aeabi_dmul+0x1dc>)
 8001676:	401d      	ands	r5, r3
 8001678:	2300      	movs	r3, #0
 800167a:	2200      	movs	r2, #0
 800167c:	4699      	mov	r9, r3
 800167e:	e79c      	b.n	80015ba <__aeabi_dmul+0xce>
 8001680:	2400      	movs	r4, #0
 8001682:	2200      	movs	r2, #0
 8001684:	2001      	movs	r0, #1
 8001686:	e76e      	b.n	8001566 <__aeabi_dmul+0x7a>
 8001688:	4653      	mov	r3, sl
 800168a:	2003      	movs	r0, #3
 800168c:	e76b      	b.n	8001566 <__aeabi_dmul+0x7a>
 800168e:	2300      	movs	r3, #0
 8001690:	469b      	mov	fp, r3
 8001692:	3301      	adds	r3, #1
 8001694:	2704      	movs	r7, #4
 8001696:	2600      	movs	r6, #0
 8001698:	9302      	str	r3, [sp, #8]
 800169a:	e74c      	b.n	8001536 <__aeabi_dmul+0x4a>
 800169c:	2303      	movs	r3, #3
 800169e:	4681      	mov	r9, r0
 80016a0:	270c      	movs	r7, #12
 80016a2:	9302      	str	r3, [sp, #8]
 80016a4:	e747      	b.n	8001536 <__aeabi_dmul+0x4a>
 80016a6:	2280      	movs	r2, #128	; 0x80
 80016a8:	2300      	movs	r3, #0
 80016aa:	2500      	movs	r5, #0
 80016ac:	0312      	lsls	r2, r2, #12
 80016ae:	4699      	mov	r9, r3
 80016b0:	4c05      	ldr	r4, [pc, #20]	; (80016c8 <__aeabi_dmul+0x1dc>)
 80016b2:	e782      	b.n	80015ba <__aeabi_dmul+0xce>
 80016b4:	465c      	mov	r4, fp
 80016b6:	464b      	mov	r3, r9
 80016b8:	9802      	ldr	r0, [sp, #8]
 80016ba:	e76f      	b.n	800159c <__aeabi_dmul+0xb0>
 80016bc:	465c      	mov	r4, fp
 80016be:	464b      	mov	r3, r9
 80016c0:	9501      	str	r5, [sp, #4]
 80016c2:	9802      	ldr	r0, [sp, #8]
 80016c4:	e76a      	b.n	800159c <__aeabi_dmul+0xb0>
 80016c6:	46c0      	nop			; (mov r8, r8)
 80016c8:	000007ff 	.word	0x000007ff
 80016cc:	fffffc01 	.word	0xfffffc01
 80016d0:	080071b0 	.word	0x080071b0
 80016d4:	800fffff 	.word	0x800fffff
 80016d8:	fffffc0d 	.word	0xfffffc0d
 80016dc:	464a      	mov	r2, r9
 80016de:	4649      	mov	r1, r9
 80016e0:	0c17      	lsrs	r7, r2, #16
 80016e2:	0c1a      	lsrs	r2, r3, #16
 80016e4:	041b      	lsls	r3, r3, #16
 80016e6:	0c1b      	lsrs	r3, r3, #16
 80016e8:	0408      	lsls	r0, r1, #16
 80016ea:	0019      	movs	r1, r3
 80016ec:	0c00      	lsrs	r0, r0, #16
 80016ee:	4341      	muls	r1, r0
 80016f0:	0015      	movs	r5, r2
 80016f2:	4688      	mov	r8, r1
 80016f4:	0019      	movs	r1, r3
 80016f6:	437d      	muls	r5, r7
 80016f8:	4379      	muls	r1, r7
 80016fa:	9503      	str	r5, [sp, #12]
 80016fc:	4689      	mov	r9, r1
 80016fe:	0029      	movs	r1, r5
 8001700:	0015      	movs	r5, r2
 8001702:	4345      	muls	r5, r0
 8001704:	444d      	add	r5, r9
 8001706:	9502      	str	r5, [sp, #8]
 8001708:	4645      	mov	r5, r8
 800170a:	0c2d      	lsrs	r5, r5, #16
 800170c:	46aa      	mov	sl, r5
 800170e:	9d02      	ldr	r5, [sp, #8]
 8001710:	4455      	add	r5, sl
 8001712:	45a9      	cmp	r9, r5
 8001714:	d906      	bls.n	8001724 <__aeabi_dmul+0x238>
 8001716:	468a      	mov	sl, r1
 8001718:	2180      	movs	r1, #128	; 0x80
 800171a:	0249      	lsls	r1, r1, #9
 800171c:	4689      	mov	r9, r1
 800171e:	44ca      	add	sl, r9
 8001720:	4651      	mov	r1, sl
 8001722:	9103      	str	r1, [sp, #12]
 8001724:	0c29      	lsrs	r1, r5, #16
 8001726:	9104      	str	r1, [sp, #16]
 8001728:	4641      	mov	r1, r8
 800172a:	0409      	lsls	r1, r1, #16
 800172c:	042d      	lsls	r5, r5, #16
 800172e:	0c09      	lsrs	r1, r1, #16
 8001730:	4688      	mov	r8, r1
 8001732:	0029      	movs	r1, r5
 8001734:	0c25      	lsrs	r5, r4, #16
 8001736:	0424      	lsls	r4, r4, #16
 8001738:	4441      	add	r1, r8
 800173a:	0c24      	lsrs	r4, r4, #16
 800173c:	9105      	str	r1, [sp, #20]
 800173e:	0021      	movs	r1, r4
 8001740:	4341      	muls	r1, r0
 8001742:	4688      	mov	r8, r1
 8001744:	0021      	movs	r1, r4
 8001746:	4379      	muls	r1, r7
 8001748:	468a      	mov	sl, r1
 800174a:	4368      	muls	r0, r5
 800174c:	4641      	mov	r1, r8
 800174e:	4450      	add	r0, sl
 8001750:	4681      	mov	r9, r0
 8001752:	0c08      	lsrs	r0, r1, #16
 8001754:	4448      	add	r0, r9
 8001756:	436f      	muls	r7, r5
 8001758:	4582      	cmp	sl, r0
 800175a:	d903      	bls.n	8001764 <__aeabi_dmul+0x278>
 800175c:	2180      	movs	r1, #128	; 0x80
 800175e:	0249      	lsls	r1, r1, #9
 8001760:	4689      	mov	r9, r1
 8001762:	444f      	add	r7, r9
 8001764:	0c01      	lsrs	r1, r0, #16
 8001766:	4689      	mov	r9, r1
 8001768:	0039      	movs	r1, r7
 800176a:	4449      	add	r1, r9
 800176c:	9102      	str	r1, [sp, #8]
 800176e:	4641      	mov	r1, r8
 8001770:	040f      	lsls	r7, r1, #16
 8001772:	9904      	ldr	r1, [sp, #16]
 8001774:	0c3f      	lsrs	r7, r7, #16
 8001776:	4688      	mov	r8, r1
 8001778:	0400      	lsls	r0, r0, #16
 800177a:	19c0      	adds	r0, r0, r7
 800177c:	4480      	add	r8, r0
 800177e:	4641      	mov	r1, r8
 8001780:	9104      	str	r1, [sp, #16]
 8001782:	4659      	mov	r1, fp
 8001784:	0c0f      	lsrs	r7, r1, #16
 8001786:	0409      	lsls	r1, r1, #16
 8001788:	0c09      	lsrs	r1, r1, #16
 800178a:	4688      	mov	r8, r1
 800178c:	4359      	muls	r1, r3
 800178e:	468a      	mov	sl, r1
 8001790:	0039      	movs	r1, r7
 8001792:	4351      	muls	r1, r2
 8001794:	4689      	mov	r9, r1
 8001796:	4641      	mov	r1, r8
 8001798:	434a      	muls	r2, r1
 800179a:	4651      	mov	r1, sl
 800179c:	0c09      	lsrs	r1, r1, #16
 800179e:	468b      	mov	fp, r1
 80017a0:	437b      	muls	r3, r7
 80017a2:	18d2      	adds	r2, r2, r3
 80017a4:	445a      	add	r2, fp
 80017a6:	4293      	cmp	r3, r2
 80017a8:	d903      	bls.n	80017b2 <__aeabi_dmul+0x2c6>
 80017aa:	2380      	movs	r3, #128	; 0x80
 80017ac:	025b      	lsls	r3, r3, #9
 80017ae:	469b      	mov	fp, r3
 80017b0:	44d9      	add	r9, fp
 80017b2:	4651      	mov	r1, sl
 80017b4:	0409      	lsls	r1, r1, #16
 80017b6:	0c09      	lsrs	r1, r1, #16
 80017b8:	468a      	mov	sl, r1
 80017ba:	4641      	mov	r1, r8
 80017bc:	4361      	muls	r1, r4
 80017be:	437c      	muls	r4, r7
 80017c0:	0c13      	lsrs	r3, r2, #16
 80017c2:	0412      	lsls	r2, r2, #16
 80017c4:	444b      	add	r3, r9
 80017c6:	4452      	add	r2, sl
 80017c8:	46a1      	mov	r9, r4
 80017ca:	468a      	mov	sl, r1
 80017cc:	003c      	movs	r4, r7
 80017ce:	4641      	mov	r1, r8
 80017d0:	436c      	muls	r4, r5
 80017d2:	434d      	muls	r5, r1
 80017d4:	4651      	mov	r1, sl
 80017d6:	444d      	add	r5, r9
 80017d8:	0c0f      	lsrs	r7, r1, #16
 80017da:	197d      	adds	r5, r7, r5
 80017dc:	45a9      	cmp	r9, r5
 80017de:	d903      	bls.n	80017e8 <__aeabi_dmul+0x2fc>
 80017e0:	2180      	movs	r1, #128	; 0x80
 80017e2:	0249      	lsls	r1, r1, #9
 80017e4:	4688      	mov	r8, r1
 80017e6:	4444      	add	r4, r8
 80017e8:	9f04      	ldr	r7, [sp, #16]
 80017ea:	9903      	ldr	r1, [sp, #12]
 80017ec:	46b8      	mov	r8, r7
 80017ee:	4441      	add	r1, r8
 80017f0:	468b      	mov	fp, r1
 80017f2:	4583      	cmp	fp, r0
 80017f4:	4180      	sbcs	r0, r0
 80017f6:	4241      	negs	r1, r0
 80017f8:	4688      	mov	r8, r1
 80017fa:	4651      	mov	r1, sl
 80017fc:	0408      	lsls	r0, r1, #16
 80017fe:	042f      	lsls	r7, r5, #16
 8001800:	0c00      	lsrs	r0, r0, #16
 8001802:	183f      	adds	r7, r7, r0
 8001804:	4658      	mov	r0, fp
 8001806:	9902      	ldr	r1, [sp, #8]
 8001808:	1810      	adds	r0, r2, r0
 800180a:	4689      	mov	r9, r1
 800180c:	4290      	cmp	r0, r2
 800180e:	4192      	sbcs	r2, r2
 8001810:	444f      	add	r7, r9
 8001812:	46ba      	mov	sl, r7
 8001814:	4252      	negs	r2, r2
 8001816:	4699      	mov	r9, r3
 8001818:	4693      	mov	fp, r2
 800181a:	44c2      	add	sl, r8
 800181c:	44d1      	add	r9, sl
 800181e:	44cb      	add	fp, r9
 8001820:	428f      	cmp	r7, r1
 8001822:	41bf      	sbcs	r7, r7
 8001824:	45c2      	cmp	sl, r8
 8001826:	4189      	sbcs	r1, r1
 8001828:	4599      	cmp	r9, r3
 800182a:	419b      	sbcs	r3, r3
 800182c:	4593      	cmp	fp, r2
 800182e:	4192      	sbcs	r2, r2
 8001830:	427f      	negs	r7, r7
 8001832:	4249      	negs	r1, r1
 8001834:	0c2d      	lsrs	r5, r5, #16
 8001836:	4252      	negs	r2, r2
 8001838:	430f      	orrs	r7, r1
 800183a:	425b      	negs	r3, r3
 800183c:	4313      	orrs	r3, r2
 800183e:	197f      	adds	r7, r7, r5
 8001840:	18ff      	adds	r7, r7, r3
 8001842:	465b      	mov	r3, fp
 8001844:	193c      	adds	r4, r7, r4
 8001846:	0ddb      	lsrs	r3, r3, #23
 8001848:	9a05      	ldr	r2, [sp, #20]
 800184a:	0264      	lsls	r4, r4, #9
 800184c:	431c      	orrs	r4, r3
 800184e:	0243      	lsls	r3, r0, #9
 8001850:	4313      	orrs	r3, r2
 8001852:	1e5d      	subs	r5, r3, #1
 8001854:	41ab      	sbcs	r3, r5
 8001856:	465a      	mov	r2, fp
 8001858:	0dc0      	lsrs	r0, r0, #23
 800185a:	4303      	orrs	r3, r0
 800185c:	0252      	lsls	r2, r2, #9
 800185e:	4313      	orrs	r3, r2
 8001860:	01e2      	lsls	r2, r4, #7
 8001862:	d556      	bpl.n	8001912 <__aeabi_dmul+0x426>
 8001864:	2001      	movs	r0, #1
 8001866:	085a      	lsrs	r2, r3, #1
 8001868:	4003      	ands	r3, r0
 800186a:	4313      	orrs	r3, r2
 800186c:	07e2      	lsls	r2, r4, #31
 800186e:	4313      	orrs	r3, r2
 8001870:	0864      	lsrs	r4, r4, #1
 8001872:	485a      	ldr	r0, [pc, #360]	; (80019dc <__aeabi_dmul+0x4f0>)
 8001874:	4460      	add	r0, ip
 8001876:	2800      	cmp	r0, #0
 8001878:	dd4d      	ble.n	8001916 <__aeabi_dmul+0x42a>
 800187a:	075a      	lsls	r2, r3, #29
 800187c:	d009      	beq.n	8001892 <__aeabi_dmul+0x3a6>
 800187e:	220f      	movs	r2, #15
 8001880:	401a      	ands	r2, r3
 8001882:	2a04      	cmp	r2, #4
 8001884:	d005      	beq.n	8001892 <__aeabi_dmul+0x3a6>
 8001886:	1d1a      	adds	r2, r3, #4
 8001888:	429a      	cmp	r2, r3
 800188a:	419b      	sbcs	r3, r3
 800188c:	425b      	negs	r3, r3
 800188e:	18e4      	adds	r4, r4, r3
 8001890:	0013      	movs	r3, r2
 8001892:	01e2      	lsls	r2, r4, #7
 8001894:	d504      	bpl.n	80018a0 <__aeabi_dmul+0x3b4>
 8001896:	2080      	movs	r0, #128	; 0x80
 8001898:	4a51      	ldr	r2, [pc, #324]	; (80019e0 <__aeabi_dmul+0x4f4>)
 800189a:	00c0      	lsls	r0, r0, #3
 800189c:	4014      	ands	r4, r2
 800189e:	4460      	add	r0, ip
 80018a0:	4a50      	ldr	r2, [pc, #320]	; (80019e4 <__aeabi_dmul+0x4f8>)
 80018a2:	4290      	cmp	r0, r2
 80018a4:	dd00      	ble.n	80018a8 <__aeabi_dmul+0x3bc>
 80018a6:	e6e3      	b.n	8001670 <__aeabi_dmul+0x184>
 80018a8:	2501      	movs	r5, #1
 80018aa:	08db      	lsrs	r3, r3, #3
 80018ac:	0762      	lsls	r2, r4, #29
 80018ae:	431a      	orrs	r2, r3
 80018b0:	0264      	lsls	r4, r4, #9
 80018b2:	9b01      	ldr	r3, [sp, #4]
 80018b4:	4691      	mov	r9, r2
 80018b6:	0b22      	lsrs	r2, r4, #12
 80018b8:	0544      	lsls	r4, r0, #21
 80018ba:	0d64      	lsrs	r4, r4, #21
 80018bc:	401d      	ands	r5, r3
 80018be:	e67c      	b.n	80015ba <__aeabi_dmul+0xce>
 80018c0:	2280      	movs	r2, #128	; 0x80
 80018c2:	4659      	mov	r1, fp
 80018c4:	0312      	lsls	r2, r2, #12
 80018c6:	4211      	tst	r1, r2
 80018c8:	d008      	beq.n	80018dc <__aeabi_dmul+0x3f0>
 80018ca:	4214      	tst	r4, r2
 80018cc:	d106      	bne.n	80018dc <__aeabi_dmul+0x3f0>
 80018ce:	4322      	orrs	r2, r4
 80018d0:	0312      	lsls	r2, r2, #12
 80018d2:	0b12      	lsrs	r2, r2, #12
 80018d4:	4645      	mov	r5, r8
 80018d6:	4699      	mov	r9, r3
 80018d8:	4c43      	ldr	r4, [pc, #268]	; (80019e8 <__aeabi_dmul+0x4fc>)
 80018da:	e66e      	b.n	80015ba <__aeabi_dmul+0xce>
 80018dc:	465b      	mov	r3, fp
 80018de:	431a      	orrs	r2, r3
 80018e0:	0312      	lsls	r2, r2, #12
 80018e2:	0b12      	lsrs	r2, r2, #12
 80018e4:	4c40      	ldr	r4, [pc, #256]	; (80019e8 <__aeabi_dmul+0x4fc>)
 80018e6:	e668      	b.n	80015ba <__aeabi_dmul+0xce>
 80018e8:	0003      	movs	r3, r0
 80018ea:	4654      	mov	r4, sl
 80018ec:	3b28      	subs	r3, #40	; 0x28
 80018ee:	409c      	lsls	r4, r3
 80018f0:	2300      	movs	r3, #0
 80018f2:	e6b9      	b.n	8001668 <__aeabi_dmul+0x17c>
 80018f4:	f000 fc5e 	bl	80021b4 <__clzsi2>
 80018f8:	3020      	adds	r0, #32
 80018fa:	e6a6      	b.n	800164a <__aeabi_dmul+0x15e>
 80018fc:	0003      	movs	r3, r0
 80018fe:	3b28      	subs	r3, #40	; 0x28
 8001900:	409f      	lsls	r7, r3
 8001902:	2300      	movs	r3, #0
 8001904:	46bb      	mov	fp, r7
 8001906:	4699      	mov	r9, r3
 8001908:	e68a      	b.n	8001620 <__aeabi_dmul+0x134>
 800190a:	f000 fc53 	bl	80021b4 <__clzsi2>
 800190e:	3020      	adds	r0, #32
 8001910:	e674      	b.n	80015fc <__aeabi_dmul+0x110>
 8001912:	46b4      	mov	ip, r6
 8001914:	e7ad      	b.n	8001872 <__aeabi_dmul+0x386>
 8001916:	2501      	movs	r5, #1
 8001918:	1a2a      	subs	r2, r5, r0
 800191a:	2a38      	cmp	r2, #56	; 0x38
 800191c:	dd06      	ble.n	800192c <__aeabi_dmul+0x440>
 800191e:	9b01      	ldr	r3, [sp, #4]
 8001920:	2400      	movs	r4, #0
 8001922:	401d      	ands	r5, r3
 8001924:	2300      	movs	r3, #0
 8001926:	2200      	movs	r2, #0
 8001928:	4699      	mov	r9, r3
 800192a:	e646      	b.n	80015ba <__aeabi_dmul+0xce>
 800192c:	2a1f      	cmp	r2, #31
 800192e:	dc21      	bgt.n	8001974 <__aeabi_dmul+0x488>
 8001930:	2520      	movs	r5, #32
 8001932:	0020      	movs	r0, r4
 8001934:	1aad      	subs	r5, r5, r2
 8001936:	001e      	movs	r6, r3
 8001938:	40ab      	lsls	r3, r5
 800193a:	40a8      	lsls	r0, r5
 800193c:	40d6      	lsrs	r6, r2
 800193e:	1e5d      	subs	r5, r3, #1
 8001940:	41ab      	sbcs	r3, r5
 8001942:	4330      	orrs	r0, r6
 8001944:	4318      	orrs	r0, r3
 8001946:	40d4      	lsrs	r4, r2
 8001948:	0743      	lsls	r3, r0, #29
 800194a:	d009      	beq.n	8001960 <__aeabi_dmul+0x474>
 800194c:	230f      	movs	r3, #15
 800194e:	4003      	ands	r3, r0
 8001950:	2b04      	cmp	r3, #4
 8001952:	d005      	beq.n	8001960 <__aeabi_dmul+0x474>
 8001954:	0003      	movs	r3, r0
 8001956:	1d18      	adds	r0, r3, #4
 8001958:	4298      	cmp	r0, r3
 800195a:	419b      	sbcs	r3, r3
 800195c:	425b      	negs	r3, r3
 800195e:	18e4      	adds	r4, r4, r3
 8001960:	0223      	lsls	r3, r4, #8
 8001962:	d521      	bpl.n	80019a8 <__aeabi_dmul+0x4bc>
 8001964:	2501      	movs	r5, #1
 8001966:	9b01      	ldr	r3, [sp, #4]
 8001968:	2401      	movs	r4, #1
 800196a:	401d      	ands	r5, r3
 800196c:	2300      	movs	r3, #0
 800196e:	2200      	movs	r2, #0
 8001970:	4699      	mov	r9, r3
 8001972:	e622      	b.n	80015ba <__aeabi_dmul+0xce>
 8001974:	251f      	movs	r5, #31
 8001976:	0021      	movs	r1, r4
 8001978:	426d      	negs	r5, r5
 800197a:	1a28      	subs	r0, r5, r0
 800197c:	40c1      	lsrs	r1, r0
 800197e:	0008      	movs	r0, r1
 8001980:	2a20      	cmp	r2, #32
 8001982:	d01d      	beq.n	80019c0 <__aeabi_dmul+0x4d4>
 8001984:	355f      	adds	r5, #95	; 0x5f
 8001986:	1aaa      	subs	r2, r5, r2
 8001988:	4094      	lsls	r4, r2
 800198a:	4323      	orrs	r3, r4
 800198c:	1e5c      	subs	r4, r3, #1
 800198e:	41a3      	sbcs	r3, r4
 8001990:	2507      	movs	r5, #7
 8001992:	4303      	orrs	r3, r0
 8001994:	401d      	ands	r5, r3
 8001996:	2200      	movs	r2, #0
 8001998:	2d00      	cmp	r5, #0
 800199a:	d009      	beq.n	80019b0 <__aeabi_dmul+0x4c4>
 800199c:	220f      	movs	r2, #15
 800199e:	2400      	movs	r4, #0
 80019a0:	401a      	ands	r2, r3
 80019a2:	0018      	movs	r0, r3
 80019a4:	2a04      	cmp	r2, #4
 80019a6:	d1d6      	bne.n	8001956 <__aeabi_dmul+0x46a>
 80019a8:	0003      	movs	r3, r0
 80019aa:	0765      	lsls	r5, r4, #29
 80019ac:	0264      	lsls	r4, r4, #9
 80019ae:	0b22      	lsrs	r2, r4, #12
 80019b0:	08db      	lsrs	r3, r3, #3
 80019b2:	432b      	orrs	r3, r5
 80019b4:	2501      	movs	r5, #1
 80019b6:	4699      	mov	r9, r3
 80019b8:	9b01      	ldr	r3, [sp, #4]
 80019ba:	2400      	movs	r4, #0
 80019bc:	401d      	ands	r5, r3
 80019be:	e5fc      	b.n	80015ba <__aeabi_dmul+0xce>
 80019c0:	2400      	movs	r4, #0
 80019c2:	e7e2      	b.n	800198a <__aeabi_dmul+0x49e>
 80019c4:	2280      	movs	r2, #128	; 0x80
 80019c6:	2501      	movs	r5, #1
 80019c8:	0312      	lsls	r2, r2, #12
 80019ca:	4322      	orrs	r2, r4
 80019cc:	9901      	ldr	r1, [sp, #4]
 80019ce:	0312      	lsls	r2, r2, #12
 80019d0:	0b12      	lsrs	r2, r2, #12
 80019d2:	400d      	ands	r5, r1
 80019d4:	4699      	mov	r9, r3
 80019d6:	4c04      	ldr	r4, [pc, #16]	; (80019e8 <__aeabi_dmul+0x4fc>)
 80019d8:	e5ef      	b.n	80015ba <__aeabi_dmul+0xce>
 80019da:	46c0      	nop			; (mov r8, r8)
 80019dc:	000003ff 	.word	0x000003ff
 80019e0:	feffffff 	.word	0xfeffffff
 80019e4:	000007fe 	.word	0x000007fe
 80019e8:	000007ff 	.word	0x000007ff

080019ec <__aeabi_dsub>:
 80019ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019ee:	4646      	mov	r6, r8
 80019f0:	46d6      	mov	lr, sl
 80019f2:	464f      	mov	r7, r9
 80019f4:	030c      	lsls	r4, r1, #12
 80019f6:	b5c0      	push	{r6, r7, lr}
 80019f8:	0fcd      	lsrs	r5, r1, #31
 80019fa:	004e      	lsls	r6, r1, #1
 80019fc:	0a61      	lsrs	r1, r4, #9
 80019fe:	0f44      	lsrs	r4, r0, #29
 8001a00:	430c      	orrs	r4, r1
 8001a02:	00c1      	lsls	r1, r0, #3
 8001a04:	0058      	lsls	r0, r3, #1
 8001a06:	0d40      	lsrs	r0, r0, #21
 8001a08:	4684      	mov	ip, r0
 8001a0a:	468a      	mov	sl, r1
 8001a0c:	000f      	movs	r7, r1
 8001a0e:	0319      	lsls	r1, r3, #12
 8001a10:	0f50      	lsrs	r0, r2, #29
 8001a12:	0a49      	lsrs	r1, r1, #9
 8001a14:	4301      	orrs	r1, r0
 8001a16:	48c6      	ldr	r0, [pc, #792]	; (8001d30 <__aeabi_dsub+0x344>)
 8001a18:	0d76      	lsrs	r6, r6, #21
 8001a1a:	46a8      	mov	r8, r5
 8001a1c:	0fdb      	lsrs	r3, r3, #31
 8001a1e:	00d2      	lsls	r2, r2, #3
 8001a20:	4584      	cmp	ip, r0
 8001a22:	d100      	bne.n	8001a26 <__aeabi_dsub+0x3a>
 8001a24:	e0d8      	b.n	8001bd8 <__aeabi_dsub+0x1ec>
 8001a26:	2001      	movs	r0, #1
 8001a28:	4043      	eors	r3, r0
 8001a2a:	42ab      	cmp	r3, r5
 8001a2c:	d100      	bne.n	8001a30 <__aeabi_dsub+0x44>
 8001a2e:	e0a6      	b.n	8001b7e <__aeabi_dsub+0x192>
 8001a30:	4660      	mov	r0, ip
 8001a32:	1a35      	subs	r5, r6, r0
 8001a34:	2d00      	cmp	r5, #0
 8001a36:	dc00      	bgt.n	8001a3a <__aeabi_dsub+0x4e>
 8001a38:	e105      	b.n	8001c46 <__aeabi_dsub+0x25a>
 8001a3a:	2800      	cmp	r0, #0
 8001a3c:	d110      	bne.n	8001a60 <__aeabi_dsub+0x74>
 8001a3e:	000b      	movs	r3, r1
 8001a40:	4313      	orrs	r3, r2
 8001a42:	d100      	bne.n	8001a46 <__aeabi_dsub+0x5a>
 8001a44:	e0d7      	b.n	8001bf6 <__aeabi_dsub+0x20a>
 8001a46:	1e6b      	subs	r3, r5, #1
 8001a48:	2b00      	cmp	r3, #0
 8001a4a:	d000      	beq.n	8001a4e <__aeabi_dsub+0x62>
 8001a4c:	e14b      	b.n	8001ce6 <__aeabi_dsub+0x2fa>
 8001a4e:	4653      	mov	r3, sl
 8001a50:	1a9f      	subs	r7, r3, r2
 8001a52:	45ba      	cmp	sl, r7
 8001a54:	4180      	sbcs	r0, r0
 8001a56:	1a64      	subs	r4, r4, r1
 8001a58:	4240      	negs	r0, r0
 8001a5a:	1a24      	subs	r4, r4, r0
 8001a5c:	2601      	movs	r6, #1
 8001a5e:	e01e      	b.n	8001a9e <__aeabi_dsub+0xb2>
 8001a60:	4bb3      	ldr	r3, [pc, #716]	; (8001d30 <__aeabi_dsub+0x344>)
 8001a62:	429e      	cmp	r6, r3
 8001a64:	d048      	beq.n	8001af8 <__aeabi_dsub+0x10c>
 8001a66:	2380      	movs	r3, #128	; 0x80
 8001a68:	041b      	lsls	r3, r3, #16
 8001a6a:	4319      	orrs	r1, r3
 8001a6c:	2d38      	cmp	r5, #56	; 0x38
 8001a6e:	dd00      	ble.n	8001a72 <__aeabi_dsub+0x86>
 8001a70:	e119      	b.n	8001ca6 <__aeabi_dsub+0x2ba>
 8001a72:	2d1f      	cmp	r5, #31
 8001a74:	dd00      	ble.n	8001a78 <__aeabi_dsub+0x8c>
 8001a76:	e14c      	b.n	8001d12 <__aeabi_dsub+0x326>
 8001a78:	2320      	movs	r3, #32
 8001a7a:	000f      	movs	r7, r1
 8001a7c:	1b5b      	subs	r3, r3, r5
 8001a7e:	0010      	movs	r0, r2
 8001a80:	409a      	lsls	r2, r3
 8001a82:	409f      	lsls	r7, r3
 8001a84:	40e8      	lsrs	r0, r5
 8001a86:	1e53      	subs	r3, r2, #1
 8001a88:	419a      	sbcs	r2, r3
 8001a8a:	40e9      	lsrs	r1, r5
 8001a8c:	4307      	orrs	r7, r0
 8001a8e:	4317      	orrs	r7, r2
 8001a90:	4653      	mov	r3, sl
 8001a92:	1bdf      	subs	r7, r3, r7
 8001a94:	1a61      	subs	r1, r4, r1
 8001a96:	45ba      	cmp	sl, r7
 8001a98:	41a4      	sbcs	r4, r4
 8001a9a:	4264      	negs	r4, r4
 8001a9c:	1b0c      	subs	r4, r1, r4
 8001a9e:	0223      	lsls	r3, r4, #8
 8001aa0:	d400      	bmi.n	8001aa4 <__aeabi_dsub+0xb8>
 8001aa2:	e0c5      	b.n	8001c30 <__aeabi_dsub+0x244>
 8001aa4:	0264      	lsls	r4, r4, #9
 8001aa6:	0a65      	lsrs	r5, r4, #9
 8001aa8:	2d00      	cmp	r5, #0
 8001aaa:	d100      	bne.n	8001aae <__aeabi_dsub+0xc2>
 8001aac:	e0f6      	b.n	8001c9c <__aeabi_dsub+0x2b0>
 8001aae:	0028      	movs	r0, r5
 8001ab0:	f000 fb80 	bl	80021b4 <__clzsi2>
 8001ab4:	0003      	movs	r3, r0
 8001ab6:	3b08      	subs	r3, #8
 8001ab8:	2b1f      	cmp	r3, #31
 8001aba:	dd00      	ble.n	8001abe <__aeabi_dsub+0xd2>
 8001abc:	e0e9      	b.n	8001c92 <__aeabi_dsub+0x2a6>
 8001abe:	2220      	movs	r2, #32
 8001ac0:	003c      	movs	r4, r7
 8001ac2:	1ad2      	subs	r2, r2, r3
 8001ac4:	409d      	lsls	r5, r3
 8001ac6:	40d4      	lsrs	r4, r2
 8001ac8:	409f      	lsls	r7, r3
 8001aca:	4325      	orrs	r5, r4
 8001acc:	429e      	cmp	r6, r3
 8001ace:	dd00      	ble.n	8001ad2 <__aeabi_dsub+0xe6>
 8001ad0:	e0db      	b.n	8001c8a <__aeabi_dsub+0x29e>
 8001ad2:	1b9e      	subs	r6, r3, r6
 8001ad4:	1c73      	adds	r3, r6, #1
 8001ad6:	2b1f      	cmp	r3, #31
 8001ad8:	dd00      	ble.n	8001adc <__aeabi_dsub+0xf0>
 8001ada:	e10a      	b.n	8001cf2 <__aeabi_dsub+0x306>
 8001adc:	2220      	movs	r2, #32
 8001ade:	0038      	movs	r0, r7
 8001ae0:	1ad2      	subs	r2, r2, r3
 8001ae2:	0029      	movs	r1, r5
 8001ae4:	4097      	lsls	r7, r2
 8001ae6:	002c      	movs	r4, r5
 8001ae8:	4091      	lsls	r1, r2
 8001aea:	40d8      	lsrs	r0, r3
 8001aec:	1e7a      	subs	r2, r7, #1
 8001aee:	4197      	sbcs	r7, r2
 8001af0:	40dc      	lsrs	r4, r3
 8001af2:	2600      	movs	r6, #0
 8001af4:	4301      	orrs	r1, r0
 8001af6:	430f      	orrs	r7, r1
 8001af8:	077b      	lsls	r3, r7, #29
 8001afa:	d009      	beq.n	8001b10 <__aeabi_dsub+0x124>
 8001afc:	230f      	movs	r3, #15
 8001afe:	403b      	ands	r3, r7
 8001b00:	2b04      	cmp	r3, #4
 8001b02:	d005      	beq.n	8001b10 <__aeabi_dsub+0x124>
 8001b04:	1d3b      	adds	r3, r7, #4
 8001b06:	42bb      	cmp	r3, r7
 8001b08:	41bf      	sbcs	r7, r7
 8001b0a:	427f      	negs	r7, r7
 8001b0c:	19e4      	adds	r4, r4, r7
 8001b0e:	001f      	movs	r7, r3
 8001b10:	0223      	lsls	r3, r4, #8
 8001b12:	d525      	bpl.n	8001b60 <__aeabi_dsub+0x174>
 8001b14:	4b86      	ldr	r3, [pc, #536]	; (8001d30 <__aeabi_dsub+0x344>)
 8001b16:	3601      	adds	r6, #1
 8001b18:	429e      	cmp	r6, r3
 8001b1a:	d100      	bne.n	8001b1e <__aeabi_dsub+0x132>
 8001b1c:	e0af      	b.n	8001c7e <__aeabi_dsub+0x292>
 8001b1e:	4b85      	ldr	r3, [pc, #532]	; (8001d34 <__aeabi_dsub+0x348>)
 8001b20:	2501      	movs	r5, #1
 8001b22:	401c      	ands	r4, r3
 8001b24:	4643      	mov	r3, r8
 8001b26:	0762      	lsls	r2, r4, #29
 8001b28:	08ff      	lsrs	r7, r7, #3
 8001b2a:	0264      	lsls	r4, r4, #9
 8001b2c:	0576      	lsls	r6, r6, #21
 8001b2e:	4317      	orrs	r7, r2
 8001b30:	0b24      	lsrs	r4, r4, #12
 8001b32:	0d76      	lsrs	r6, r6, #21
 8001b34:	401d      	ands	r5, r3
 8001b36:	2100      	movs	r1, #0
 8001b38:	0324      	lsls	r4, r4, #12
 8001b3a:	0b23      	lsrs	r3, r4, #12
 8001b3c:	0d0c      	lsrs	r4, r1, #20
 8001b3e:	4a7e      	ldr	r2, [pc, #504]	; (8001d38 <__aeabi_dsub+0x34c>)
 8001b40:	0524      	lsls	r4, r4, #20
 8001b42:	431c      	orrs	r4, r3
 8001b44:	4014      	ands	r4, r2
 8001b46:	0533      	lsls	r3, r6, #20
 8001b48:	4323      	orrs	r3, r4
 8001b4a:	005b      	lsls	r3, r3, #1
 8001b4c:	07ed      	lsls	r5, r5, #31
 8001b4e:	085b      	lsrs	r3, r3, #1
 8001b50:	432b      	orrs	r3, r5
 8001b52:	0038      	movs	r0, r7
 8001b54:	0019      	movs	r1, r3
 8001b56:	bc1c      	pop	{r2, r3, r4}
 8001b58:	4690      	mov	r8, r2
 8001b5a:	4699      	mov	r9, r3
 8001b5c:	46a2      	mov	sl, r4
 8001b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b60:	2501      	movs	r5, #1
 8001b62:	4643      	mov	r3, r8
 8001b64:	0762      	lsls	r2, r4, #29
 8001b66:	08ff      	lsrs	r7, r7, #3
 8001b68:	4317      	orrs	r7, r2
 8001b6a:	08e4      	lsrs	r4, r4, #3
 8001b6c:	401d      	ands	r5, r3
 8001b6e:	4b70      	ldr	r3, [pc, #448]	; (8001d30 <__aeabi_dsub+0x344>)
 8001b70:	429e      	cmp	r6, r3
 8001b72:	d036      	beq.n	8001be2 <__aeabi_dsub+0x1f6>
 8001b74:	0324      	lsls	r4, r4, #12
 8001b76:	0576      	lsls	r6, r6, #21
 8001b78:	0b24      	lsrs	r4, r4, #12
 8001b7a:	0d76      	lsrs	r6, r6, #21
 8001b7c:	e7db      	b.n	8001b36 <__aeabi_dsub+0x14a>
 8001b7e:	4663      	mov	r3, ip
 8001b80:	1af3      	subs	r3, r6, r3
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	dc00      	bgt.n	8001b88 <__aeabi_dsub+0x19c>
 8001b86:	e094      	b.n	8001cb2 <__aeabi_dsub+0x2c6>
 8001b88:	4660      	mov	r0, ip
 8001b8a:	2800      	cmp	r0, #0
 8001b8c:	d035      	beq.n	8001bfa <__aeabi_dsub+0x20e>
 8001b8e:	4868      	ldr	r0, [pc, #416]	; (8001d30 <__aeabi_dsub+0x344>)
 8001b90:	4286      	cmp	r6, r0
 8001b92:	d0b1      	beq.n	8001af8 <__aeabi_dsub+0x10c>
 8001b94:	2780      	movs	r7, #128	; 0x80
 8001b96:	043f      	lsls	r7, r7, #16
 8001b98:	4339      	orrs	r1, r7
 8001b9a:	2b38      	cmp	r3, #56	; 0x38
 8001b9c:	dc00      	bgt.n	8001ba0 <__aeabi_dsub+0x1b4>
 8001b9e:	e0fd      	b.n	8001d9c <__aeabi_dsub+0x3b0>
 8001ba0:	430a      	orrs	r2, r1
 8001ba2:	0017      	movs	r7, r2
 8001ba4:	2100      	movs	r1, #0
 8001ba6:	1e7a      	subs	r2, r7, #1
 8001ba8:	4197      	sbcs	r7, r2
 8001baa:	4457      	add	r7, sl
 8001bac:	4557      	cmp	r7, sl
 8001bae:	4180      	sbcs	r0, r0
 8001bb0:	1909      	adds	r1, r1, r4
 8001bb2:	4244      	negs	r4, r0
 8001bb4:	190c      	adds	r4, r1, r4
 8001bb6:	0223      	lsls	r3, r4, #8
 8001bb8:	d53a      	bpl.n	8001c30 <__aeabi_dsub+0x244>
 8001bba:	4b5d      	ldr	r3, [pc, #372]	; (8001d30 <__aeabi_dsub+0x344>)
 8001bbc:	3601      	adds	r6, #1
 8001bbe:	429e      	cmp	r6, r3
 8001bc0:	d100      	bne.n	8001bc4 <__aeabi_dsub+0x1d8>
 8001bc2:	e14b      	b.n	8001e5c <__aeabi_dsub+0x470>
 8001bc4:	2201      	movs	r2, #1
 8001bc6:	4b5b      	ldr	r3, [pc, #364]	; (8001d34 <__aeabi_dsub+0x348>)
 8001bc8:	401c      	ands	r4, r3
 8001bca:	087b      	lsrs	r3, r7, #1
 8001bcc:	4017      	ands	r7, r2
 8001bce:	431f      	orrs	r7, r3
 8001bd0:	07e2      	lsls	r2, r4, #31
 8001bd2:	4317      	orrs	r7, r2
 8001bd4:	0864      	lsrs	r4, r4, #1
 8001bd6:	e78f      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001bd8:	0008      	movs	r0, r1
 8001bda:	4310      	orrs	r0, r2
 8001bdc:	d000      	beq.n	8001be0 <__aeabi_dsub+0x1f4>
 8001bde:	e724      	b.n	8001a2a <__aeabi_dsub+0x3e>
 8001be0:	e721      	b.n	8001a26 <__aeabi_dsub+0x3a>
 8001be2:	0023      	movs	r3, r4
 8001be4:	433b      	orrs	r3, r7
 8001be6:	d100      	bne.n	8001bea <__aeabi_dsub+0x1fe>
 8001be8:	e1b9      	b.n	8001f5e <__aeabi_dsub+0x572>
 8001bea:	2280      	movs	r2, #128	; 0x80
 8001bec:	0312      	lsls	r2, r2, #12
 8001bee:	4314      	orrs	r4, r2
 8001bf0:	0324      	lsls	r4, r4, #12
 8001bf2:	0b24      	lsrs	r4, r4, #12
 8001bf4:	e79f      	b.n	8001b36 <__aeabi_dsub+0x14a>
 8001bf6:	002e      	movs	r6, r5
 8001bf8:	e77e      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001bfa:	0008      	movs	r0, r1
 8001bfc:	4310      	orrs	r0, r2
 8001bfe:	d100      	bne.n	8001c02 <__aeabi_dsub+0x216>
 8001c00:	e0ca      	b.n	8001d98 <__aeabi_dsub+0x3ac>
 8001c02:	1e58      	subs	r0, r3, #1
 8001c04:	4684      	mov	ip, r0
 8001c06:	2800      	cmp	r0, #0
 8001c08:	d000      	beq.n	8001c0c <__aeabi_dsub+0x220>
 8001c0a:	e0e7      	b.n	8001ddc <__aeabi_dsub+0x3f0>
 8001c0c:	4452      	add	r2, sl
 8001c0e:	4552      	cmp	r2, sl
 8001c10:	4180      	sbcs	r0, r0
 8001c12:	1864      	adds	r4, r4, r1
 8001c14:	4240      	negs	r0, r0
 8001c16:	1824      	adds	r4, r4, r0
 8001c18:	0017      	movs	r7, r2
 8001c1a:	2601      	movs	r6, #1
 8001c1c:	0223      	lsls	r3, r4, #8
 8001c1e:	d507      	bpl.n	8001c30 <__aeabi_dsub+0x244>
 8001c20:	2602      	movs	r6, #2
 8001c22:	e7cf      	b.n	8001bc4 <__aeabi_dsub+0x1d8>
 8001c24:	4664      	mov	r4, ip
 8001c26:	432c      	orrs	r4, r5
 8001c28:	d100      	bne.n	8001c2c <__aeabi_dsub+0x240>
 8001c2a:	e1b3      	b.n	8001f94 <__aeabi_dsub+0x5a8>
 8001c2c:	002c      	movs	r4, r5
 8001c2e:	4667      	mov	r7, ip
 8001c30:	077b      	lsls	r3, r7, #29
 8001c32:	d000      	beq.n	8001c36 <__aeabi_dsub+0x24a>
 8001c34:	e762      	b.n	8001afc <__aeabi_dsub+0x110>
 8001c36:	0763      	lsls	r3, r4, #29
 8001c38:	08ff      	lsrs	r7, r7, #3
 8001c3a:	431f      	orrs	r7, r3
 8001c3c:	2501      	movs	r5, #1
 8001c3e:	4643      	mov	r3, r8
 8001c40:	08e4      	lsrs	r4, r4, #3
 8001c42:	401d      	ands	r5, r3
 8001c44:	e793      	b.n	8001b6e <__aeabi_dsub+0x182>
 8001c46:	2d00      	cmp	r5, #0
 8001c48:	d178      	bne.n	8001d3c <__aeabi_dsub+0x350>
 8001c4a:	1c75      	adds	r5, r6, #1
 8001c4c:	056d      	lsls	r5, r5, #21
 8001c4e:	0d6d      	lsrs	r5, r5, #21
 8001c50:	2d01      	cmp	r5, #1
 8001c52:	dc00      	bgt.n	8001c56 <__aeabi_dsub+0x26a>
 8001c54:	e0f2      	b.n	8001e3c <__aeabi_dsub+0x450>
 8001c56:	4650      	mov	r0, sl
 8001c58:	1a80      	subs	r0, r0, r2
 8001c5a:	4582      	cmp	sl, r0
 8001c5c:	41bf      	sbcs	r7, r7
 8001c5e:	1a65      	subs	r5, r4, r1
 8001c60:	427f      	negs	r7, r7
 8001c62:	1bed      	subs	r5, r5, r7
 8001c64:	4684      	mov	ip, r0
 8001c66:	0228      	lsls	r0, r5, #8
 8001c68:	d400      	bmi.n	8001c6c <__aeabi_dsub+0x280>
 8001c6a:	e08c      	b.n	8001d86 <__aeabi_dsub+0x39a>
 8001c6c:	4650      	mov	r0, sl
 8001c6e:	1a17      	subs	r7, r2, r0
 8001c70:	42ba      	cmp	r2, r7
 8001c72:	4192      	sbcs	r2, r2
 8001c74:	1b0c      	subs	r4, r1, r4
 8001c76:	4255      	negs	r5, r2
 8001c78:	1b65      	subs	r5, r4, r5
 8001c7a:	4698      	mov	r8, r3
 8001c7c:	e714      	b.n	8001aa8 <__aeabi_dsub+0xbc>
 8001c7e:	2501      	movs	r5, #1
 8001c80:	4643      	mov	r3, r8
 8001c82:	2400      	movs	r4, #0
 8001c84:	401d      	ands	r5, r3
 8001c86:	2700      	movs	r7, #0
 8001c88:	e755      	b.n	8001b36 <__aeabi_dsub+0x14a>
 8001c8a:	4c2a      	ldr	r4, [pc, #168]	; (8001d34 <__aeabi_dsub+0x348>)
 8001c8c:	1af6      	subs	r6, r6, r3
 8001c8e:	402c      	ands	r4, r5
 8001c90:	e732      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001c92:	003d      	movs	r5, r7
 8001c94:	3828      	subs	r0, #40	; 0x28
 8001c96:	4085      	lsls	r5, r0
 8001c98:	2700      	movs	r7, #0
 8001c9a:	e717      	b.n	8001acc <__aeabi_dsub+0xe0>
 8001c9c:	0038      	movs	r0, r7
 8001c9e:	f000 fa89 	bl	80021b4 <__clzsi2>
 8001ca2:	3020      	adds	r0, #32
 8001ca4:	e706      	b.n	8001ab4 <__aeabi_dsub+0xc8>
 8001ca6:	430a      	orrs	r2, r1
 8001ca8:	0017      	movs	r7, r2
 8001caa:	2100      	movs	r1, #0
 8001cac:	1e7a      	subs	r2, r7, #1
 8001cae:	4197      	sbcs	r7, r2
 8001cb0:	e6ee      	b.n	8001a90 <__aeabi_dsub+0xa4>
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	d000      	beq.n	8001cb8 <__aeabi_dsub+0x2cc>
 8001cb6:	e0e5      	b.n	8001e84 <__aeabi_dsub+0x498>
 8001cb8:	1c73      	adds	r3, r6, #1
 8001cba:	469c      	mov	ip, r3
 8001cbc:	055b      	lsls	r3, r3, #21
 8001cbe:	0d5b      	lsrs	r3, r3, #21
 8001cc0:	2b01      	cmp	r3, #1
 8001cc2:	dc00      	bgt.n	8001cc6 <__aeabi_dsub+0x2da>
 8001cc4:	e09f      	b.n	8001e06 <__aeabi_dsub+0x41a>
 8001cc6:	4b1a      	ldr	r3, [pc, #104]	; (8001d30 <__aeabi_dsub+0x344>)
 8001cc8:	459c      	cmp	ip, r3
 8001cca:	d100      	bne.n	8001cce <__aeabi_dsub+0x2e2>
 8001ccc:	e0c5      	b.n	8001e5a <__aeabi_dsub+0x46e>
 8001cce:	4452      	add	r2, sl
 8001cd0:	4552      	cmp	r2, sl
 8001cd2:	4180      	sbcs	r0, r0
 8001cd4:	1864      	adds	r4, r4, r1
 8001cd6:	4240      	negs	r0, r0
 8001cd8:	1824      	adds	r4, r4, r0
 8001cda:	07e7      	lsls	r7, r4, #31
 8001cdc:	0852      	lsrs	r2, r2, #1
 8001cde:	4317      	orrs	r7, r2
 8001ce0:	0864      	lsrs	r4, r4, #1
 8001ce2:	4666      	mov	r6, ip
 8001ce4:	e708      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001ce6:	4812      	ldr	r0, [pc, #72]	; (8001d30 <__aeabi_dsub+0x344>)
 8001ce8:	4285      	cmp	r5, r0
 8001cea:	d100      	bne.n	8001cee <__aeabi_dsub+0x302>
 8001cec:	e085      	b.n	8001dfa <__aeabi_dsub+0x40e>
 8001cee:	001d      	movs	r5, r3
 8001cf0:	e6bc      	b.n	8001a6c <__aeabi_dsub+0x80>
 8001cf2:	0029      	movs	r1, r5
 8001cf4:	3e1f      	subs	r6, #31
 8001cf6:	40f1      	lsrs	r1, r6
 8001cf8:	2b20      	cmp	r3, #32
 8001cfa:	d100      	bne.n	8001cfe <__aeabi_dsub+0x312>
 8001cfc:	e07f      	b.n	8001dfe <__aeabi_dsub+0x412>
 8001cfe:	2240      	movs	r2, #64	; 0x40
 8001d00:	1ad3      	subs	r3, r2, r3
 8001d02:	409d      	lsls	r5, r3
 8001d04:	432f      	orrs	r7, r5
 8001d06:	1e7d      	subs	r5, r7, #1
 8001d08:	41af      	sbcs	r7, r5
 8001d0a:	2400      	movs	r4, #0
 8001d0c:	430f      	orrs	r7, r1
 8001d0e:	2600      	movs	r6, #0
 8001d10:	e78e      	b.n	8001c30 <__aeabi_dsub+0x244>
 8001d12:	002b      	movs	r3, r5
 8001d14:	000f      	movs	r7, r1
 8001d16:	3b20      	subs	r3, #32
 8001d18:	40df      	lsrs	r7, r3
 8001d1a:	2d20      	cmp	r5, #32
 8001d1c:	d071      	beq.n	8001e02 <__aeabi_dsub+0x416>
 8001d1e:	2340      	movs	r3, #64	; 0x40
 8001d20:	1b5d      	subs	r5, r3, r5
 8001d22:	40a9      	lsls	r1, r5
 8001d24:	430a      	orrs	r2, r1
 8001d26:	1e51      	subs	r1, r2, #1
 8001d28:	418a      	sbcs	r2, r1
 8001d2a:	2100      	movs	r1, #0
 8001d2c:	4317      	orrs	r7, r2
 8001d2e:	e6af      	b.n	8001a90 <__aeabi_dsub+0xa4>
 8001d30:	000007ff 	.word	0x000007ff
 8001d34:	ff7fffff 	.word	0xff7fffff
 8001d38:	800fffff 	.word	0x800fffff
 8001d3c:	2e00      	cmp	r6, #0
 8001d3e:	d03e      	beq.n	8001dbe <__aeabi_dsub+0x3d2>
 8001d40:	4eb3      	ldr	r6, [pc, #716]	; (8002010 <__aeabi_dsub+0x624>)
 8001d42:	45b4      	cmp	ip, r6
 8001d44:	d045      	beq.n	8001dd2 <__aeabi_dsub+0x3e6>
 8001d46:	2680      	movs	r6, #128	; 0x80
 8001d48:	0436      	lsls	r6, r6, #16
 8001d4a:	426d      	negs	r5, r5
 8001d4c:	4334      	orrs	r4, r6
 8001d4e:	2d38      	cmp	r5, #56	; 0x38
 8001d50:	dd00      	ble.n	8001d54 <__aeabi_dsub+0x368>
 8001d52:	e0a8      	b.n	8001ea6 <__aeabi_dsub+0x4ba>
 8001d54:	2d1f      	cmp	r5, #31
 8001d56:	dd00      	ble.n	8001d5a <__aeabi_dsub+0x36e>
 8001d58:	e11f      	b.n	8001f9a <__aeabi_dsub+0x5ae>
 8001d5a:	2620      	movs	r6, #32
 8001d5c:	0027      	movs	r7, r4
 8001d5e:	4650      	mov	r0, sl
 8001d60:	1b76      	subs	r6, r6, r5
 8001d62:	40b7      	lsls	r7, r6
 8001d64:	40e8      	lsrs	r0, r5
 8001d66:	4307      	orrs	r7, r0
 8001d68:	4650      	mov	r0, sl
 8001d6a:	40b0      	lsls	r0, r6
 8001d6c:	1e46      	subs	r6, r0, #1
 8001d6e:	41b0      	sbcs	r0, r6
 8001d70:	40ec      	lsrs	r4, r5
 8001d72:	4338      	orrs	r0, r7
 8001d74:	1a17      	subs	r7, r2, r0
 8001d76:	42ba      	cmp	r2, r7
 8001d78:	4192      	sbcs	r2, r2
 8001d7a:	1b0c      	subs	r4, r1, r4
 8001d7c:	4252      	negs	r2, r2
 8001d7e:	1aa4      	subs	r4, r4, r2
 8001d80:	4666      	mov	r6, ip
 8001d82:	4698      	mov	r8, r3
 8001d84:	e68b      	b.n	8001a9e <__aeabi_dsub+0xb2>
 8001d86:	4664      	mov	r4, ip
 8001d88:	4667      	mov	r7, ip
 8001d8a:	432c      	orrs	r4, r5
 8001d8c:	d000      	beq.n	8001d90 <__aeabi_dsub+0x3a4>
 8001d8e:	e68b      	b.n	8001aa8 <__aeabi_dsub+0xbc>
 8001d90:	2500      	movs	r5, #0
 8001d92:	2600      	movs	r6, #0
 8001d94:	2700      	movs	r7, #0
 8001d96:	e6ea      	b.n	8001b6e <__aeabi_dsub+0x182>
 8001d98:	001e      	movs	r6, r3
 8001d9a:	e6ad      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001d9c:	2b1f      	cmp	r3, #31
 8001d9e:	dc60      	bgt.n	8001e62 <__aeabi_dsub+0x476>
 8001da0:	2720      	movs	r7, #32
 8001da2:	1af8      	subs	r0, r7, r3
 8001da4:	000f      	movs	r7, r1
 8001da6:	4684      	mov	ip, r0
 8001da8:	4087      	lsls	r7, r0
 8001daa:	0010      	movs	r0, r2
 8001dac:	40d8      	lsrs	r0, r3
 8001dae:	4307      	orrs	r7, r0
 8001db0:	4660      	mov	r0, ip
 8001db2:	4082      	lsls	r2, r0
 8001db4:	1e50      	subs	r0, r2, #1
 8001db6:	4182      	sbcs	r2, r0
 8001db8:	40d9      	lsrs	r1, r3
 8001dba:	4317      	orrs	r7, r2
 8001dbc:	e6f5      	b.n	8001baa <__aeabi_dsub+0x1be>
 8001dbe:	0026      	movs	r6, r4
 8001dc0:	4650      	mov	r0, sl
 8001dc2:	4306      	orrs	r6, r0
 8001dc4:	d005      	beq.n	8001dd2 <__aeabi_dsub+0x3e6>
 8001dc6:	43ed      	mvns	r5, r5
 8001dc8:	2d00      	cmp	r5, #0
 8001dca:	d0d3      	beq.n	8001d74 <__aeabi_dsub+0x388>
 8001dcc:	4e90      	ldr	r6, [pc, #576]	; (8002010 <__aeabi_dsub+0x624>)
 8001dce:	45b4      	cmp	ip, r6
 8001dd0:	d1bd      	bne.n	8001d4e <__aeabi_dsub+0x362>
 8001dd2:	000c      	movs	r4, r1
 8001dd4:	0017      	movs	r7, r2
 8001dd6:	4666      	mov	r6, ip
 8001dd8:	4698      	mov	r8, r3
 8001dda:	e68d      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001ddc:	488c      	ldr	r0, [pc, #560]	; (8002010 <__aeabi_dsub+0x624>)
 8001dde:	4283      	cmp	r3, r0
 8001de0:	d00b      	beq.n	8001dfa <__aeabi_dsub+0x40e>
 8001de2:	4663      	mov	r3, ip
 8001de4:	e6d9      	b.n	8001b9a <__aeabi_dsub+0x1ae>
 8001de6:	2d00      	cmp	r5, #0
 8001de8:	d000      	beq.n	8001dec <__aeabi_dsub+0x400>
 8001dea:	e096      	b.n	8001f1a <__aeabi_dsub+0x52e>
 8001dec:	0008      	movs	r0, r1
 8001dee:	4310      	orrs	r0, r2
 8001df0:	d100      	bne.n	8001df4 <__aeabi_dsub+0x408>
 8001df2:	e0e2      	b.n	8001fba <__aeabi_dsub+0x5ce>
 8001df4:	000c      	movs	r4, r1
 8001df6:	0017      	movs	r7, r2
 8001df8:	4698      	mov	r8, r3
 8001dfa:	4e85      	ldr	r6, [pc, #532]	; (8002010 <__aeabi_dsub+0x624>)
 8001dfc:	e67c      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001dfe:	2500      	movs	r5, #0
 8001e00:	e780      	b.n	8001d04 <__aeabi_dsub+0x318>
 8001e02:	2100      	movs	r1, #0
 8001e04:	e78e      	b.n	8001d24 <__aeabi_dsub+0x338>
 8001e06:	0023      	movs	r3, r4
 8001e08:	4650      	mov	r0, sl
 8001e0a:	4303      	orrs	r3, r0
 8001e0c:	2e00      	cmp	r6, #0
 8001e0e:	d000      	beq.n	8001e12 <__aeabi_dsub+0x426>
 8001e10:	e0a8      	b.n	8001f64 <__aeabi_dsub+0x578>
 8001e12:	2b00      	cmp	r3, #0
 8001e14:	d100      	bne.n	8001e18 <__aeabi_dsub+0x42c>
 8001e16:	e0de      	b.n	8001fd6 <__aeabi_dsub+0x5ea>
 8001e18:	000b      	movs	r3, r1
 8001e1a:	4313      	orrs	r3, r2
 8001e1c:	d100      	bne.n	8001e20 <__aeabi_dsub+0x434>
 8001e1e:	e66b      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001e20:	4452      	add	r2, sl
 8001e22:	4552      	cmp	r2, sl
 8001e24:	4180      	sbcs	r0, r0
 8001e26:	1864      	adds	r4, r4, r1
 8001e28:	4240      	negs	r0, r0
 8001e2a:	1824      	adds	r4, r4, r0
 8001e2c:	0017      	movs	r7, r2
 8001e2e:	0223      	lsls	r3, r4, #8
 8001e30:	d400      	bmi.n	8001e34 <__aeabi_dsub+0x448>
 8001e32:	e6fd      	b.n	8001c30 <__aeabi_dsub+0x244>
 8001e34:	4b77      	ldr	r3, [pc, #476]	; (8002014 <__aeabi_dsub+0x628>)
 8001e36:	4666      	mov	r6, ip
 8001e38:	401c      	ands	r4, r3
 8001e3a:	e65d      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001e3c:	0025      	movs	r5, r4
 8001e3e:	4650      	mov	r0, sl
 8001e40:	4305      	orrs	r5, r0
 8001e42:	2e00      	cmp	r6, #0
 8001e44:	d1cf      	bne.n	8001de6 <__aeabi_dsub+0x3fa>
 8001e46:	2d00      	cmp	r5, #0
 8001e48:	d14f      	bne.n	8001eea <__aeabi_dsub+0x4fe>
 8001e4a:	000c      	movs	r4, r1
 8001e4c:	4314      	orrs	r4, r2
 8001e4e:	d100      	bne.n	8001e52 <__aeabi_dsub+0x466>
 8001e50:	e0a0      	b.n	8001f94 <__aeabi_dsub+0x5a8>
 8001e52:	000c      	movs	r4, r1
 8001e54:	0017      	movs	r7, r2
 8001e56:	4698      	mov	r8, r3
 8001e58:	e64e      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001e5a:	4666      	mov	r6, ip
 8001e5c:	2400      	movs	r4, #0
 8001e5e:	2700      	movs	r7, #0
 8001e60:	e685      	b.n	8001b6e <__aeabi_dsub+0x182>
 8001e62:	001f      	movs	r7, r3
 8001e64:	0008      	movs	r0, r1
 8001e66:	3f20      	subs	r7, #32
 8001e68:	40f8      	lsrs	r0, r7
 8001e6a:	0007      	movs	r7, r0
 8001e6c:	2b20      	cmp	r3, #32
 8001e6e:	d100      	bne.n	8001e72 <__aeabi_dsub+0x486>
 8001e70:	e08e      	b.n	8001f90 <__aeabi_dsub+0x5a4>
 8001e72:	2040      	movs	r0, #64	; 0x40
 8001e74:	1ac3      	subs	r3, r0, r3
 8001e76:	4099      	lsls	r1, r3
 8001e78:	430a      	orrs	r2, r1
 8001e7a:	1e51      	subs	r1, r2, #1
 8001e7c:	418a      	sbcs	r2, r1
 8001e7e:	2100      	movs	r1, #0
 8001e80:	4317      	orrs	r7, r2
 8001e82:	e692      	b.n	8001baa <__aeabi_dsub+0x1be>
 8001e84:	2e00      	cmp	r6, #0
 8001e86:	d114      	bne.n	8001eb2 <__aeabi_dsub+0x4c6>
 8001e88:	0026      	movs	r6, r4
 8001e8a:	4650      	mov	r0, sl
 8001e8c:	4306      	orrs	r6, r0
 8001e8e:	d062      	beq.n	8001f56 <__aeabi_dsub+0x56a>
 8001e90:	43db      	mvns	r3, r3
 8001e92:	2b00      	cmp	r3, #0
 8001e94:	d15c      	bne.n	8001f50 <__aeabi_dsub+0x564>
 8001e96:	1887      	adds	r7, r0, r2
 8001e98:	4297      	cmp	r7, r2
 8001e9a:	4192      	sbcs	r2, r2
 8001e9c:	1864      	adds	r4, r4, r1
 8001e9e:	4252      	negs	r2, r2
 8001ea0:	18a4      	adds	r4, r4, r2
 8001ea2:	4666      	mov	r6, ip
 8001ea4:	e687      	b.n	8001bb6 <__aeabi_dsub+0x1ca>
 8001ea6:	4650      	mov	r0, sl
 8001ea8:	4320      	orrs	r0, r4
 8001eaa:	1e44      	subs	r4, r0, #1
 8001eac:	41a0      	sbcs	r0, r4
 8001eae:	2400      	movs	r4, #0
 8001eb0:	e760      	b.n	8001d74 <__aeabi_dsub+0x388>
 8001eb2:	4e57      	ldr	r6, [pc, #348]	; (8002010 <__aeabi_dsub+0x624>)
 8001eb4:	45b4      	cmp	ip, r6
 8001eb6:	d04e      	beq.n	8001f56 <__aeabi_dsub+0x56a>
 8001eb8:	2680      	movs	r6, #128	; 0x80
 8001eba:	0436      	lsls	r6, r6, #16
 8001ebc:	425b      	negs	r3, r3
 8001ebe:	4334      	orrs	r4, r6
 8001ec0:	2b38      	cmp	r3, #56	; 0x38
 8001ec2:	dd00      	ble.n	8001ec6 <__aeabi_dsub+0x4da>
 8001ec4:	e07f      	b.n	8001fc6 <__aeabi_dsub+0x5da>
 8001ec6:	2b1f      	cmp	r3, #31
 8001ec8:	dd00      	ble.n	8001ecc <__aeabi_dsub+0x4e0>
 8001eca:	e08b      	b.n	8001fe4 <__aeabi_dsub+0x5f8>
 8001ecc:	2620      	movs	r6, #32
 8001ece:	0027      	movs	r7, r4
 8001ed0:	4650      	mov	r0, sl
 8001ed2:	1af6      	subs	r6, r6, r3
 8001ed4:	40b7      	lsls	r7, r6
 8001ed6:	40d8      	lsrs	r0, r3
 8001ed8:	4307      	orrs	r7, r0
 8001eda:	4650      	mov	r0, sl
 8001edc:	40b0      	lsls	r0, r6
 8001ede:	1e46      	subs	r6, r0, #1
 8001ee0:	41b0      	sbcs	r0, r6
 8001ee2:	4307      	orrs	r7, r0
 8001ee4:	40dc      	lsrs	r4, r3
 8001ee6:	18bf      	adds	r7, r7, r2
 8001ee8:	e7d6      	b.n	8001e98 <__aeabi_dsub+0x4ac>
 8001eea:	000d      	movs	r5, r1
 8001eec:	4315      	orrs	r5, r2
 8001eee:	d100      	bne.n	8001ef2 <__aeabi_dsub+0x506>
 8001ef0:	e602      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001ef2:	4650      	mov	r0, sl
 8001ef4:	1a80      	subs	r0, r0, r2
 8001ef6:	4582      	cmp	sl, r0
 8001ef8:	41bf      	sbcs	r7, r7
 8001efa:	1a65      	subs	r5, r4, r1
 8001efc:	427f      	negs	r7, r7
 8001efe:	1bed      	subs	r5, r5, r7
 8001f00:	4684      	mov	ip, r0
 8001f02:	0228      	lsls	r0, r5, #8
 8001f04:	d400      	bmi.n	8001f08 <__aeabi_dsub+0x51c>
 8001f06:	e68d      	b.n	8001c24 <__aeabi_dsub+0x238>
 8001f08:	4650      	mov	r0, sl
 8001f0a:	1a17      	subs	r7, r2, r0
 8001f0c:	42ba      	cmp	r2, r7
 8001f0e:	4192      	sbcs	r2, r2
 8001f10:	1b0c      	subs	r4, r1, r4
 8001f12:	4252      	negs	r2, r2
 8001f14:	1aa4      	subs	r4, r4, r2
 8001f16:	4698      	mov	r8, r3
 8001f18:	e5ee      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001f1a:	000d      	movs	r5, r1
 8001f1c:	4315      	orrs	r5, r2
 8001f1e:	d100      	bne.n	8001f22 <__aeabi_dsub+0x536>
 8001f20:	e76b      	b.n	8001dfa <__aeabi_dsub+0x40e>
 8001f22:	4650      	mov	r0, sl
 8001f24:	0767      	lsls	r7, r4, #29
 8001f26:	08c0      	lsrs	r0, r0, #3
 8001f28:	4307      	orrs	r7, r0
 8001f2a:	2080      	movs	r0, #128	; 0x80
 8001f2c:	08e4      	lsrs	r4, r4, #3
 8001f2e:	0300      	lsls	r0, r0, #12
 8001f30:	4204      	tst	r4, r0
 8001f32:	d007      	beq.n	8001f44 <__aeabi_dsub+0x558>
 8001f34:	08cd      	lsrs	r5, r1, #3
 8001f36:	4205      	tst	r5, r0
 8001f38:	d104      	bne.n	8001f44 <__aeabi_dsub+0x558>
 8001f3a:	002c      	movs	r4, r5
 8001f3c:	4698      	mov	r8, r3
 8001f3e:	08d7      	lsrs	r7, r2, #3
 8001f40:	0749      	lsls	r1, r1, #29
 8001f42:	430f      	orrs	r7, r1
 8001f44:	0f7b      	lsrs	r3, r7, #29
 8001f46:	00e4      	lsls	r4, r4, #3
 8001f48:	431c      	orrs	r4, r3
 8001f4a:	00ff      	lsls	r7, r7, #3
 8001f4c:	4e30      	ldr	r6, [pc, #192]	; (8002010 <__aeabi_dsub+0x624>)
 8001f4e:	e5d3      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001f50:	4e2f      	ldr	r6, [pc, #188]	; (8002010 <__aeabi_dsub+0x624>)
 8001f52:	45b4      	cmp	ip, r6
 8001f54:	d1b4      	bne.n	8001ec0 <__aeabi_dsub+0x4d4>
 8001f56:	000c      	movs	r4, r1
 8001f58:	0017      	movs	r7, r2
 8001f5a:	4666      	mov	r6, ip
 8001f5c:	e5cc      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001f5e:	2700      	movs	r7, #0
 8001f60:	2400      	movs	r4, #0
 8001f62:	e5e8      	b.n	8001b36 <__aeabi_dsub+0x14a>
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d039      	beq.n	8001fdc <__aeabi_dsub+0x5f0>
 8001f68:	000b      	movs	r3, r1
 8001f6a:	4313      	orrs	r3, r2
 8001f6c:	d100      	bne.n	8001f70 <__aeabi_dsub+0x584>
 8001f6e:	e744      	b.n	8001dfa <__aeabi_dsub+0x40e>
 8001f70:	08c0      	lsrs	r0, r0, #3
 8001f72:	0767      	lsls	r7, r4, #29
 8001f74:	4307      	orrs	r7, r0
 8001f76:	2080      	movs	r0, #128	; 0x80
 8001f78:	08e4      	lsrs	r4, r4, #3
 8001f7a:	0300      	lsls	r0, r0, #12
 8001f7c:	4204      	tst	r4, r0
 8001f7e:	d0e1      	beq.n	8001f44 <__aeabi_dsub+0x558>
 8001f80:	08cb      	lsrs	r3, r1, #3
 8001f82:	4203      	tst	r3, r0
 8001f84:	d1de      	bne.n	8001f44 <__aeabi_dsub+0x558>
 8001f86:	08d7      	lsrs	r7, r2, #3
 8001f88:	0749      	lsls	r1, r1, #29
 8001f8a:	430f      	orrs	r7, r1
 8001f8c:	001c      	movs	r4, r3
 8001f8e:	e7d9      	b.n	8001f44 <__aeabi_dsub+0x558>
 8001f90:	2100      	movs	r1, #0
 8001f92:	e771      	b.n	8001e78 <__aeabi_dsub+0x48c>
 8001f94:	2500      	movs	r5, #0
 8001f96:	2700      	movs	r7, #0
 8001f98:	e5e9      	b.n	8001b6e <__aeabi_dsub+0x182>
 8001f9a:	002e      	movs	r6, r5
 8001f9c:	0027      	movs	r7, r4
 8001f9e:	3e20      	subs	r6, #32
 8001fa0:	40f7      	lsrs	r7, r6
 8001fa2:	2d20      	cmp	r5, #32
 8001fa4:	d02f      	beq.n	8002006 <__aeabi_dsub+0x61a>
 8001fa6:	2640      	movs	r6, #64	; 0x40
 8001fa8:	1b75      	subs	r5, r6, r5
 8001faa:	40ac      	lsls	r4, r5
 8001fac:	4650      	mov	r0, sl
 8001fae:	4320      	orrs	r0, r4
 8001fb0:	1e44      	subs	r4, r0, #1
 8001fb2:	41a0      	sbcs	r0, r4
 8001fb4:	2400      	movs	r4, #0
 8001fb6:	4338      	orrs	r0, r7
 8001fb8:	e6dc      	b.n	8001d74 <__aeabi_dsub+0x388>
 8001fba:	2480      	movs	r4, #128	; 0x80
 8001fbc:	2500      	movs	r5, #0
 8001fbe:	0324      	lsls	r4, r4, #12
 8001fc0:	4e13      	ldr	r6, [pc, #76]	; (8002010 <__aeabi_dsub+0x624>)
 8001fc2:	2700      	movs	r7, #0
 8001fc4:	e5d3      	b.n	8001b6e <__aeabi_dsub+0x182>
 8001fc6:	4650      	mov	r0, sl
 8001fc8:	4320      	orrs	r0, r4
 8001fca:	0007      	movs	r7, r0
 8001fcc:	1e78      	subs	r0, r7, #1
 8001fce:	4187      	sbcs	r7, r0
 8001fd0:	2400      	movs	r4, #0
 8001fd2:	18bf      	adds	r7, r7, r2
 8001fd4:	e760      	b.n	8001e98 <__aeabi_dsub+0x4ac>
 8001fd6:	000c      	movs	r4, r1
 8001fd8:	0017      	movs	r7, r2
 8001fda:	e58d      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001fdc:	000c      	movs	r4, r1
 8001fde:	0017      	movs	r7, r2
 8001fe0:	4e0b      	ldr	r6, [pc, #44]	; (8002010 <__aeabi_dsub+0x624>)
 8001fe2:	e589      	b.n	8001af8 <__aeabi_dsub+0x10c>
 8001fe4:	001e      	movs	r6, r3
 8001fe6:	0027      	movs	r7, r4
 8001fe8:	3e20      	subs	r6, #32
 8001fea:	40f7      	lsrs	r7, r6
 8001fec:	2b20      	cmp	r3, #32
 8001fee:	d00c      	beq.n	800200a <__aeabi_dsub+0x61e>
 8001ff0:	2640      	movs	r6, #64	; 0x40
 8001ff2:	1af3      	subs	r3, r6, r3
 8001ff4:	409c      	lsls	r4, r3
 8001ff6:	4650      	mov	r0, sl
 8001ff8:	4320      	orrs	r0, r4
 8001ffa:	1e44      	subs	r4, r0, #1
 8001ffc:	41a0      	sbcs	r0, r4
 8001ffe:	4307      	orrs	r7, r0
 8002000:	2400      	movs	r4, #0
 8002002:	18bf      	adds	r7, r7, r2
 8002004:	e748      	b.n	8001e98 <__aeabi_dsub+0x4ac>
 8002006:	2400      	movs	r4, #0
 8002008:	e7d0      	b.n	8001fac <__aeabi_dsub+0x5c0>
 800200a:	2400      	movs	r4, #0
 800200c:	e7f3      	b.n	8001ff6 <__aeabi_dsub+0x60a>
 800200e:	46c0      	nop			; (mov r8, r8)
 8002010:	000007ff 	.word	0x000007ff
 8002014:	ff7fffff 	.word	0xff7fffff

08002018 <__aeabi_dcmpun>:
 8002018:	b570      	push	{r4, r5, r6, lr}
 800201a:	4e0e      	ldr	r6, [pc, #56]	; (8002054 <__aeabi_dcmpun+0x3c>)
 800201c:	030d      	lsls	r5, r1, #12
 800201e:	031c      	lsls	r4, r3, #12
 8002020:	0049      	lsls	r1, r1, #1
 8002022:	005b      	lsls	r3, r3, #1
 8002024:	0b2d      	lsrs	r5, r5, #12
 8002026:	0d49      	lsrs	r1, r1, #21
 8002028:	0b24      	lsrs	r4, r4, #12
 800202a:	0d5b      	lsrs	r3, r3, #21
 800202c:	42b1      	cmp	r1, r6
 800202e:	d004      	beq.n	800203a <__aeabi_dcmpun+0x22>
 8002030:	4908      	ldr	r1, [pc, #32]	; (8002054 <__aeabi_dcmpun+0x3c>)
 8002032:	2000      	movs	r0, #0
 8002034:	428b      	cmp	r3, r1
 8002036:	d008      	beq.n	800204a <__aeabi_dcmpun+0x32>
 8002038:	bd70      	pop	{r4, r5, r6, pc}
 800203a:	4305      	orrs	r5, r0
 800203c:	2001      	movs	r0, #1
 800203e:	2d00      	cmp	r5, #0
 8002040:	d1fa      	bne.n	8002038 <__aeabi_dcmpun+0x20>
 8002042:	4904      	ldr	r1, [pc, #16]	; (8002054 <__aeabi_dcmpun+0x3c>)
 8002044:	2000      	movs	r0, #0
 8002046:	428b      	cmp	r3, r1
 8002048:	d1f6      	bne.n	8002038 <__aeabi_dcmpun+0x20>
 800204a:	4314      	orrs	r4, r2
 800204c:	0020      	movs	r0, r4
 800204e:	1e44      	subs	r4, r0, #1
 8002050:	41a0      	sbcs	r0, r4
 8002052:	e7f1      	b.n	8002038 <__aeabi_dcmpun+0x20>
 8002054:	000007ff 	.word	0x000007ff

08002058 <__aeabi_d2iz>:
 8002058:	b530      	push	{r4, r5, lr}
 800205a:	4d13      	ldr	r5, [pc, #76]	; (80020a8 <__aeabi_d2iz+0x50>)
 800205c:	030a      	lsls	r2, r1, #12
 800205e:	004b      	lsls	r3, r1, #1
 8002060:	0b12      	lsrs	r2, r2, #12
 8002062:	0d5b      	lsrs	r3, r3, #21
 8002064:	0fc9      	lsrs	r1, r1, #31
 8002066:	2400      	movs	r4, #0
 8002068:	42ab      	cmp	r3, r5
 800206a:	dd10      	ble.n	800208e <__aeabi_d2iz+0x36>
 800206c:	4c0f      	ldr	r4, [pc, #60]	; (80020ac <__aeabi_d2iz+0x54>)
 800206e:	42a3      	cmp	r3, r4
 8002070:	dc0f      	bgt.n	8002092 <__aeabi_d2iz+0x3a>
 8002072:	2480      	movs	r4, #128	; 0x80
 8002074:	4d0e      	ldr	r5, [pc, #56]	; (80020b0 <__aeabi_d2iz+0x58>)
 8002076:	0364      	lsls	r4, r4, #13
 8002078:	4322      	orrs	r2, r4
 800207a:	1aed      	subs	r5, r5, r3
 800207c:	2d1f      	cmp	r5, #31
 800207e:	dd0b      	ble.n	8002098 <__aeabi_d2iz+0x40>
 8002080:	480c      	ldr	r0, [pc, #48]	; (80020b4 <__aeabi_d2iz+0x5c>)
 8002082:	1ac3      	subs	r3, r0, r3
 8002084:	40da      	lsrs	r2, r3
 8002086:	4254      	negs	r4, r2
 8002088:	2900      	cmp	r1, #0
 800208a:	d100      	bne.n	800208e <__aeabi_d2iz+0x36>
 800208c:	0014      	movs	r4, r2
 800208e:	0020      	movs	r0, r4
 8002090:	bd30      	pop	{r4, r5, pc}
 8002092:	4b09      	ldr	r3, [pc, #36]	; (80020b8 <__aeabi_d2iz+0x60>)
 8002094:	18cc      	adds	r4, r1, r3
 8002096:	e7fa      	b.n	800208e <__aeabi_d2iz+0x36>
 8002098:	4c08      	ldr	r4, [pc, #32]	; (80020bc <__aeabi_d2iz+0x64>)
 800209a:	40e8      	lsrs	r0, r5
 800209c:	46a4      	mov	ip, r4
 800209e:	4463      	add	r3, ip
 80020a0:	409a      	lsls	r2, r3
 80020a2:	4302      	orrs	r2, r0
 80020a4:	e7ef      	b.n	8002086 <__aeabi_d2iz+0x2e>
 80020a6:	46c0      	nop			; (mov r8, r8)
 80020a8:	000003fe 	.word	0x000003fe
 80020ac:	0000041d 	.word	0x0000041d
 80020b0:	00000433 	.word	0x00000433
 80020b4:	00000413 	.word	0x00000413
 80020b8:	7fffffff 	.word	0x7fffffff
 80020bc:	fffffbed 	.word	0xfffffbed

080020c0 <__aeabi_i2d>:
 80020c0:	b570      	push	{r4, r5, r6, lr}
 80020c2:	2800      	cmp	r0, #0
 80020c4:	d030      	beq.n	8002128 <__aeabi_i2d+0x68>
 80020c6:	17c3      	asrs	r3, r0, #31
 80020c8:	18c4      	adds	r4, r0, r3
 80020ca:	405c      	eors	r4, r3
 80020cc:	0fc5      	lsrs	r5, r0, #31
 80020ce:	0020      	movs	r0, r4
 80020d0:	f000 f870 	bl	80021b4 <__clzsi2>
 80020d4:	4b17      	ldr	r3, [pc, #92]	; (8002134 <__aeabi_i2d+0x74>)
 80020d6:	4a18      	ldr	r2, [pc, #96]	; (8002138 <__aeabi_i2d+0x78>)
 80020d8:	1a1b      	subs	r3, r3, r0
 80020da:	1ad2      	subs	r2, r2, r3
 80020dc:	2a1f      	cmp	r2, #31
 80020de:	dd18      	ble.n	8002112 <__aeabi_i2d+0x52>
 80020e0:	4a16      	ldr	r2, [pc, #88]	; (800213c <__aeabi_i2d+0x7c>)
 80020e2:	1ad2      	subs	r2, r2, r3
 80020e4:	4094      	lsls	r4, r2
 80020e6:	2200      	movs	r2, #0
 80020e8:	0324      	lsls	r4, r4, #12
 80020ea:	055b      	lsls	r3, r3, #21
 80020ec:	0b24      	lsrs	r4, r4, #12
 80020ee:	0d5b      	lsrs	r3, r3, #21
 80020f0:	2100      	movs	r1, #0
 80020f2:	0010      	movs	r0, r2
 80020f4:	0324      	lsls	r4, r4, #12
 80020f6:	0d0a      	lsrs	r2, r1, #20
 80020f8:	0b24      	lsrs	r4, r4, #12
 80020fa:	0512      	lsls	r2, r2, #20
 80020fc:	4322      	orrs	r2, r4
 80020fe:	4c10      	ldr	r4, [pc, #64]	; (8002140 <__aeabi_i2d+0x80>)
 8002100:	051b      	lsls	r3, r3, #20
 8002102:	4022      	ands	r2, r4
 8002104:	4313      	orrs	r3, r2
 8002106:	005b      	lsls	r3, r3, #1
 8002108:	07ed      	lsls	r5, r5, #31
 800210a:	085b      	lsrs	r3, r3, #1
 800210c:	432b      	orrs	r3, r5
 800210e:	0019      	movs	r1, r3
 8002110:	bd70      	pop	{r4, r5, r6, pc}
 8002112:	0021      	movs	r1, r4
 8002114:	4091      	lsls	r1, r2
 8002116:	000a      	movs	r2, r1
 8002118:	210b      	movs	r1, #11
 800211a:	1a08      	subs	r0, r1, r0
 800211c:	40c4      	lsrs	r4, r0
 800211e:	055b      	lsls	r3, r3, #21
 8002120:	0324      	lsls	r4, r4, #12
 8002122:	0b24      	lsrs	r4, r4, #12
 8002124:	0d5b      	lsrs	r3, r3, #21
 8002126:	e7e3      	b.n	80020f0 <__aeabi_i2d+0x30>
 8002128:	2500      	movs	r5, #0
 800212a:	2300      	movs	r3, #0
 800212c:	2400      	movs	r4, #0
 800212e:	2200      	movs	r2, #0
 8002130:	e7de      	b.n	80020f0 <__aeabi_i2d+0x30>
 8002132:	46c0      	nop			; (mov r8, r8)
 8002134:	0000041e 	.word	0x0000041e
 8002138:	00000433 	.word	0x00000433
 800213c:	00000413 	.word	0x00000413
 8002140:	800fffff 	.word	0x800fffff

08002144 <__aeabi_ui2d>:
 8002144:	b510      	push	{r4, lr}
 8002146:	1e04      	subs	r4, r0, #0
 8002148:	d028      	beq.n	800219c <__aeabi_ui2d+0x58>
 800214a:	f000 f833 	bl	80021b4 <__clzsi2>
 800214e:	4b15      	ldr	r3, [pc, #84]	; (80021a4 <__aeabi_ui2d+0x60>)
 8002150:	4a15      	ldr	r2, [pc, #84]	; (80021a8 <__aeabi_ui2d+0x64>)
 8002152:	1a1b      	subs	r3, r3, r0
 8002154:	1ad2      	subs	r2, r2, r3
 8002156:	2a1f      	cmp	r2, #31
 8002158:	dd15      	ble.n	8002186 <__aeabi_ui2d+0x42>
 800215a:	4a14      	ldr	r2, [pc, #80]	; (80021ac <__aeabi_ui2d+0x68>)
 800215c:	1ad2      	subs	r2, r2, r3
 800215e:	4094      	lsls	r4, r2
 8002160:	2200      	movs	r2, #0
 8002162:	0324      	lsls	r4, r4, #12
 8002164:	055b      	lsls	r3, r3, #21
 8002166:	0b24      	lsrs	r4, r4, #12
 8002168:	0d5b      	lsrs	r3, r3, #21
 800216a:	2100      	movs	r1, #0
 800216c:	0010      	movs	r0, r2
 800216e:	0324      	lsls	r4, r4, #12
 8002170:	0d0a      	lsrs	r2, r1, #20
 8002172:	0b24      	lsrs	r4, r4, #12
 8002174:	0512      	lsls	r2, r2, #20
 8002176:	4322      	orrs	r2, r4
 8002178:	4c0d      	ldr	r4, [pc, #52]	; (80021b0 <__aeabi_ui2d+0x6c>)
 800217a:	051b      	lsls	r3, r3, #20
 800217c:	4022      	ands	r2, r4
 800217e:	4313      	orrs	r3, r2
 8002180:	005b      	lsls	r3, r3, #1
 8002182:	0859      	lsrs	r1, r3, #1
 8002184:	bd10      	pop	{r4, pc}
 8002186:	0021      	movs	r1, r4
 8002188:	4091      	lsls	r1, r2
 800218a:	000a      	movs	r2, r1
 800218c:	210b      	movs	r1, #11
 800218e:	1a08      	subs	r0, r1, r0
 8002190:	40c4      	lsrs	r4, r0
 8002192:	055b      	lsls	r3, r3, #21
 8002194:	0324      	lsls	r4, r4, #12
 8002196:	0b24      	lsrs	r4, r4, #12
 8002198:	0d5b      	lsrs	r3, r3, #21
 800219a:	e7e6      	b.n	800216a <__aeabi_ui2d+0x26>
 800219c:	2300      	movs	r3, #0
 800219e:	2400      	movs	r4, #0
 80021a0:	2200      	movs	r2, #0
 80021a2:	e7e2      	b.n	800216a <__aeabi_ui2d+0x26>
 80021a4:	0000041e 	.word	0x0000041e
 80021a8:	00000433 	.word	0x00000433
 80021ac:	00000413 	.word	0x00000413
 80021b0:	800fffff 	.word	0x800fffff

080021b4 <__clzsi2>:
 80021b4:	211c      	movs	r1, #28
 80021b6:	2301      	movs	r3, #1
 80021b8:	041b      	lsls	r3, r3, #16
 80021ba:	4298      	cmp	r0, r3
 80021bc:	d301      	bcc.n	80021c2 <__clzsi2+0xe>
 80021be:	0c00      	lsrs	r0, r0, #16
 80021c0:	3910      	subs	r1, #16
 80021c2:	0a1b      	lsrs	r3, r3, #8
 80021c4:	4298      	cmp	r0, r3
 80021c6:	d301      	bcc.n	80021cc <__clzsi2+0x18>
 80021c8:	0a00      	lsrs	r0, r0, #8
 80021ca:	3908      	subs	r1, #8
 80021cc:	091b      	lsrs	r3, r3, #4
 80021ce:	4298      	cmp	r0, r3
 80021d0:	d301      	bcc.n	80021d6 <__clzsi2+0x22>
 80021d2:	0900      	lsrs	r0, r0, #4
 80021d4:	3904      	subs	r1, #4
 80021d6:	a202      	add	r2, pc, #8	; (adr r2, 80021e0 <__clzsi2+0x2c>)
 80021d8:	5c10      	ldrb	r0, [r2, r0]
 80021da:	1840      	adds	r0, r0, r1
 80021dc:	4770      	bx	lr
 80021de:	46c0      	nop			; (mov r8, r8)
 80021e0:	02020304 	.word	0x02020304
 80021e4:	01010101 	.word	0x01010101
	...

080021f0 <__clzdi2>:
 80021f0:	b510      	push	{r4, lr}
 80021f2:	2900      	cmp	r1, #0
 80021f4:	d103      	bne.n	80021fe <__clzdi2+0xe>
 80021f6:	f7ff ffdd 	bl	80021b4 <__clzsi2>
 80021fa:	3020      	adds	r0, #32
 80021fc:	e002      	b.n	8002204 <__clzdi2+0x14>
 80021fe:	1c08      	adds	r0, r1, #0
 8002200:	f7ff ffd8 	bl	80021b4 <__clzsi2>
 8002204:	bd10      	pop	{r4, pc}
 8002206:	46c0      	nop			; (mov r8, r8)

08002208 <HAL_InitTick>:
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  HAL_StatusTypeDef  status = HAL_OK;

  if (uwTickFreq != 0U)
 8002208:	4b10      	ldr	r3, [pc, #64]	; (800224c <HAL_InitTick+0x44>)
{
 800220a:	b570      	push	{r4, r5, r6, lr}
  if (uwTickFreq != 0U)
 800220c:	6819      	ldr	r1, [r3, #0]
{
 800220e:	0005      	movs	r5, r0
  if (uwTickFreq != 0U)
 8002210:	2900      	cmp	r1, #0
 8002212:	d101      	bne.n	8002218 <HAL_InitTick+0x10>
      status = HAL_ERROR;
    }
  }
  else
  {
    status = HAL_ERROR;
 8002214:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 8002216:	bd70      	pop	{r4, r5, r6, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U /uwTickFreq)) == 0U)
 8002218:	20fa      	movs	r0, #250	; 0xfa
 800221a:	0080      	lsls	r0, r0, #2
 800221c:	f7fd ff8e 	bl	800013c <__udivsi3>
 8002220:	4b0b      	ldr	r3, [pc, #44]	; (8002250 <HAL_InitTick+0x48>)
 8002222:	0001      	movs	r1, r0
 8002224:	6818      	ldr	r0, [r3, #0]
 8002226:	f7fd ff89 	bl	800013c <__udivsi3>
 800222a:	f000 f889 	bl	8002340 <HAL_SYSTICK_Config>
 800222e:	1e04      	subs	r4, r0, #0
 8002230:	d1f0      	bne.n	8002214 <HAL_InitTick+0xc>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002232:	2d03      	cmp	r5, #3
 8002234:	d8ee      	bhi.n	8002214 <HAL_InitTick+0xc>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002236:	0002      	movs	r2, r0
 8002238:	2001      	movs	r0, #1
 800223a:	0029      	movs	r1, r5
 800223c:	4240      	negs	r0, r0
 800223e:	f000 f843 	bl	80022c8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002242:	4b04      	ldr	r3, [pc, #16]	; (8002254 <HAL_InitTick+0x4c>)
 8002244:	0020      	movs	r0, r4
 8002246:	601d      	str	r5, [r3, #0]
 8002248:	e7e5      	b.n	8002216 <HAL_InitTick+0xe>
 800224a:	46c0      	nop			; (mov r8, r8)
 800224c:	20000000 	.word	0x20000000
 8002250:	20000008 	.word	0x20000008
 8002254:	20000004 	.word	0x20000004

08002258 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002258:	2380      	movs	r3, #128	; 0x80
 800225a:	4a08      	ldr	r2, [pc, #32]	; (800227c <HAL_Init+0x24>)
 800225c:	005b      	lsls	r3, r3, #1
 800225e:	6811      	ldr	r1, [r2, #0]
{
 8002260:	b510      	push	{r4, lr}
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002262:	430b      	orrs	r3, r1
 8002264:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002266:	2000      	movs	r0, #0
 8002268:	f7ff ffce 	bl	8002208 <HAL_InitTick>
 800226c:	1e04      	subs	r4, r0, #0
 800226e:	d103      	bne.n	8002278 <HAL_Init+0x20>
  HAL_MspInit();
 8002270:	f002 fa22 	bl	80046b8 <HAL_MspInit>
}
 8002274:	0020      	movs	r0, r4
 8002276:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8002278:	2401      	movs	r4, #1
 800227a:	e7fb      	b.n	8002274 <HAL_Init+0x1c>
 800227c:	40022000 	.word	0x40022000

08002280 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8002280:	4a03      	ldr	r2, [pc, #12]	; (8002290 <HAL_IncTick+0x10>)
 8002282:	4904      	ldr	r1, [pc, #16]	; (8002294 <HAL_IncTick+0x14>)
 8002284:	6813      	ldr	r3, [r2, #0]
 8002286:	6809      	ldr	r1, [r1, #0]
 8002288:	185b      	adds	r3, r3, r1
 800228a:	6013      	str	r3, [r2, #0]
}
 800228c:	4770      	bx	lr
 800228e:	46c0      	nop			; (mov r8, r8)
 8002290:	20000204 	.word	0x20000204
 8002294:	20000000 	.word	0x20000000

08002298 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8002298:	4b01      	ldr	r3, [pc, #4]	; (80022a0 <HAL_GetTick+0x8>)
 800229a:	6818      	ldr	r0, [r3, #0]
}
 800229c:	4770      	bx	lr
 800229e:	46c0      	nop			; (mov r8, r8)
 80022a0:	20000204 	.word	0x20000204

080022a4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80022a4:	b570      	push	{r4, r5, r6, lr}
 80022a6:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80022a8:	f7ff fff6 	bl	8002298 <HAL_GetTick>
 80022ac:	0005      	movs	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80022ae:	1c63      	adds	r3, r4, #1
 80022b0:	d002      	beq.n	80022b8 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80022b2:	4b04      	ldr	r3, [pc, #16]	; (80022c4 <HAL_Delay+0x20>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	18e4      	adds	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80022b8:	f7ff ffee 	bl	8002298 <HAL_GetTick>
 80022bc:	1b40      	subs	r0, r0, r5
 80022be:	4284      	cmp	r4, r0
 80022c0:	d8fa      	bhi.n	80022b8 <HAL_Delay+0x14>
  {
  }
}
 80022c2:	bd70      	pop	{r4, r5, r6, pc}
 80022c4:	20000000 	.word	0x20000000

080022c8 <HAL_NVIC_SetPriority>:
  *         with stm32g0xx devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80022c8:	b570      	push	{r4, r5, r6, lr}
 80022ca:	0189      	lsls	r1, r1, #6
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
 80022cc:	2800      	cmp	r0, #0
 80022ce:	db12      	blt.n	80022f6 <HAL_NVIC_SetPriority+0x2e>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80022d0:	0883      	lsrs	r3, r0, #2
 80022d2:	4a13      	ldr	r2, [pc, #76]	; (8002320 <HAL_NVIC_SetPriority+0x58>)
 80022d4:	2403      	movs	r4, #3
 80022d6:	009b      	lsls	r3, r3, #2
 80022d8:	189b      	adds	r3, r3, r2
 80022da:	22ff      	movs	r2, #255	; 0xff
 80022dc:	4020      	ands	r0, r4
 80022de:	40a0      	lsls	r0, r4
 80022e0:	0014      	movs	r4, r2
 80022e2:	25c0      	movs	r5, #192	; 0xc0
 80022e4:	4084      	lsls	r4, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80022e6:	4011      	ands	r1, r2
 80022e8:	4081      	lsls	r1, r0
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80022ea:	00ad      	lsls	r5, r5, #2
 80022ec:	595e      	ldr	r6, [r3, r5]
 80022ee:	43a6      	bics	r6, r4
 80022f0:	4331      	orrs	r1, r6
 80022f2:	5159      	str	r1, [r3, r5]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 80022f4:	bd70      	pop	{r4, r5, r6, pc}
  }
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80022f6:	2403      	movs	r4, #3
 80022f8:	230f      	movs	r3, #15
 80022fa:	b2c0      	uxtb	r0, r0
 80022fc:	4003      	ands	r3, r0
 80022fe:	4020      	ands	r0, r4
 8002300:	40a0      	lsls	r0, r4
 8002302:	34fc      	adds	r4, #252	; 0xfc
 8002304:	0025      	movs	r5, r4
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002306:	4021      	ands	r1, r4
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002308:	4085      	lsls	r5, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800230a:	4081      	lsls	r1, r0
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800230c:	3b08      	subs	r3, #8
 800230e:	4a05      	ldr	r2, [pc, #20]	; (8002324 <HAL_NVIC_SetPriority+0x5c>)
 8002310:	089b      	lsrs	r3, r3, #2
 8002312:	009b      	lsls	r3, r3, #2
 8002314:	189b      	adds	r3, r3, r2
 8002316:	69da      	ldr	r2, [r3, #28]
 8002318:	43aa      	bics	r2, r5
 800231a:	4311      	orrs	r1, r2
 800231c:	61d9      	str	r1, [r3, #28]
 800231e:	e7e9      	b.n	80022f4 <HAL_NVIC_SetPriority+0x2c>
 8002320:	e000e100 	.word	0xe000e100
 8002324:	e000ed00 	.word	0xe000ed00

08002328 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8002328:	2800      	cmp	r0, #0
 800232a:	db05      	blt.n	8002338 <HAL_NVIC_EnableIRQ+0x10>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800232c:	231f      	movs	r3, #31
 800232e:	4018      	ands	r0, r3
 8002330:	3b1e      	subs	r3, #30
 8002332:	4083      	lsls	r3, r0
 8002334:	4a01      	ldr	r2, [pc, #4]	; (800233c <HAL_NVIC_EnableIRQ+0x14>)
 8002336:	6013      	str	r3, [r2, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8002338:	4770      	bx	lr
 800233a:	46c0      	nop			; (mov r8, r8)
 800233c:	e000e100 	.word	0xe000e100

08002340 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002340:	4a09      	ldr	r2, [pc, #36]	; (8002368 <HAL_SYSTICK_Config+0x28>)
 8002342:	1e43      	subs	r3, r0, #1
  {
    return (1UL);                                                   /* Reload value impossible */
 8002344:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002346:	4293      	cmp	r3, r2
 8002348:	d80d      	bhi.n	8002366 <HAL_SYSTICK_Config+0x26>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800234a:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800234c:	4a07      	ldr	r2, [pc, #28]	; (800236c <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800234e:	4808      	ldr	r0, [pc, #32]	; (8002370 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002350:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002352:	6a03      	ldr	r3, [r0, #32]
 8002354:	0609      	lsls	r1, r1, #24
 8002356:	021b      	lsls	r3, r3, #8
 8002358:	0a1b      	lsrs	r3, r3, #8
 800235a:	430b      	orrs	r3, r1
 800235c:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800235e:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002360:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002362:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002364:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
  return SysTick_Config(TicksNumb);
}
 8002366:	4770      	bx	lr
 8002368:	00ffffff 	.word	0x00ffffff
 800236c:	e000e010 	.word	0xe000e010
 8002370:	e000ed00 	.word	0xe000ed00

08002374 <HAL_DMA_Abort_IT>:
  * @param  hdma    pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8002374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  HAL_StatusTypeDef status = HAL_OK;

  /* Process Unlocked/locked */
  __HAL_UNLOCK(hdma);
  __HAL_LOCK(hdma);
 8002376:	2301      	movs	r3, #1
 8002378:	1d41      	adds	r1, r0, #5
 800237a:	77cb      	strb	r3, [r1, #31]

  if (HAL_DMA_STATE_BUSY != hdma->State)
 800237c:	1d84      	adds	r4, r0, #6
 800237e:	7fe2      	ldrb	r2, [r4, #31]
 8002380:	2a02      	cmp	r2, #2
 8002382:	d003      	beq.n	800238c <HAL_DMA_Abort_IT+0x18>
  {
    /* no transfer ongoing */
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8002384:	2204      	movs	r2, #4
 8002386:	63c2      	str	r2, [r0, #60]	; 0x3c
    {
      hdma->XferAbortCallback(hdma);
    }
  }
  return status;
}
 8002388:	0018      	movs	r0, r3
 800238a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 800238c:	260e      	movs	r6, #14
 800238e:	6802      	ldr	r2, [r0, #0]
 8002390:	6815      	ldr	r5, [r2, #0]
 8002392:	43b5      	bics	r5, r6
 8002394:	6015      	str	r5, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 8002396:	6815      	ldr	r5, [r2, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 8002398:	6c46      	ldr	r6, [r0, #68]	; 0x44
    __HAL_DMA_DISABLE(hdma);
 800239a:	439d      	bics	r5, r3
 800239c:	6015      	str	r5, [r2, #0]
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 800239e:	6832      	ldr	r2, [r6, #0]
 80023a0:	4d11      	ldr	r5, [pc, #68]	; (80023e8 <HAL_DMA_Abort_IT+0x74>)
 80023a2:	402a      	ands	r2, r5
 80023a4:	6032      	str	r2, [r6, #0]
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1cU)));
 80023a6:	221c      	movs	r2, #28
    hdma->DMAmuxChannel->CCR &= ~DMAMUX_CxCR_SOIE;
 80023a8:	46ac      	mov	ip, r5
    __HAL_DMA_CLEAR_FLAG(hdma, ((DMA_FLAG_GI1) << (hdma->ChannelIndex & 0x1cU)));
 80023aa:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80023ac:	4e0f      	ldr	r6, [pc, #60]	; (80023ec <HAL_DMA_Abort_IT+0x78>)
 80023ae:	402a      	ands	r2, r5
 80023b0:	4093      	lsls	r3, r2
 80023b2:	6877      	ldr	r7, [r6, #4]
 80023b4:	433b      	orrs	r3, r7
 80023b6:	6073      	str	r3, [r6, #4]
    hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 80023b8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 80023ba:	6c83      	ldr	r3, [r0, #72]	; 0x48
 80023bc:	605a      	str	r2, [r3, #4]
    if (hdma->DMAmuxRequestGen != 0U)
 80023be:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d006      	beq.n	80023d2 <HAL_DMA_Abort_IT+0x5e>
      hdma->DMAmuxRequestGen->RGCR &= ~DMAMUX_RGxCR_OIE;
 80023c4:	4665      	mov	r5, ip
 80023c6:	681a      	ldr	r2, [r3, #0]
 80023c8:	402a      	ands	r2, r5
 80023ca:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 80023cc:	6d43      	ldr	r3, [r0, #84]	; 0x54
 80023ce:	6d82      	ldr	r2, [r0, #88]	; 0x58
 80023d0:	605a      	str	r2, [r3, #4]
    hdma->State = HAL_DMA_STATE_READY;
 80023d2:	2301      	movs	r3, #1
 80023d4:	77e3      	strb	r3, [r4, #31]
    __HAL_UNLOCK(hdma);
 80023d6:	2400      	movs	r4, #0
    if (hdma->XferAbortCallback != NULL)
 80023d8:	6b82      	ldr	r2, [r0, #56]	; 0x38
    __HAL_UNLOCK(hdma);
 80023da:	77cc      	strb	r4, [r1, #31]
  HAL_StatusTypeDef status = HAL_OK;
 80023dc:	0013      	movs	r3, r2
    if (hdma->XferAbortCallback != NULL)
 80023de:	42a2      	cmp	r2, r4
 80023e0:	d0d2      	beq.n	8002388 <HAL_DMA_Abort_IT+0x14>
      hdma->XferAbortCallback(hdma);
 80023e2:	4790      	blx	r2
  HAL_StatusTypeDef status = HAL_OK;
 80023e4:	0023      	movs	r3, r4
 80023e6:	e7cf      	b.n	8002388 <HAL_DMA_Abort_IT+0x14>
 80023e8:	fffffeff 	.word	0xfffffeff
 80023ec:	40020000 	.word	0x40020000

080023f0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80023f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80023f2:	680b      	ldr	r3, [r1, #0]
{
 80023f4:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80023f6:	9302      	str	r3, [sp, #8]
  uint32_t position = 0x00u;
 80023f8:	2300      	movs	r3, #0
{
 80023fa:	9101      	str	r1, [sp, #4]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80023fc:	9a02      	ldr	r2, [sp, #8]
 80023fe:	40da      	lsrs	r2, r3
 8002400:	d101      	bne.n	8002406 <HAL_GPIO_Init+0x16>
      }
    }

    position++;
  }
}
 8002402:	b005      	add	sp, #20
 8002404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002406:	2201      	movs	r2, #1
 8002408:	409a      	lsls	r2, r3
 800240a:	9203      	str	r2, [sp, #12]
 800240c:	9903      	ldr	r1, [sp, #12]
 800240e:	9a02      	ldr	r2, [sp, #8]
 8002410:	400a      	ands	r2, r1
 8002412:	9200      	str	r2, [sp, #0]
    if (iocurrent != 0x00u)
 8002414:	d100      	bne.n	8002418 <HAL_GPIO_Init+0x28>
 8002416:	e085      	b.n	8002524 <HAL_GPIO_Init+0x134>
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002418:	9a01      	ldr	r2, [sp, #4]
 800241a:	2110      	movs	r1, #16
 800241c:	6852      	ldr	r2, [r2, #4]
 800241e:	0016      	movs	r6, r2
 8002420:	438e      	bics	r6, r1
 8002422:	2e02      	cmp	r6, #2
 8002424:	d10e      	bne.n	8002444 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002426:	2507      	movs	r5, #7
 8002428:	401d      	ands	r5, r3
 800242a:	00ad      	lsls	r5, r5, #2
 800242c:	3901      	subs	r1, #1
 800242e:	40a9      	lsls	r1, r5
        temp = GPIOx->AFR[position >> 3u];
 8002430:	08dc      	lsrs	r4, r3, #3
 8002432:	00a4      	lsls	r4, r4, #2
 8002434:	1904      	adds	r4, r0, r4
 8002436:	6a27      	ldr	r7, [r4, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002438:	438f      	bics	r7, r1
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 800243a:	9901      	ldr	r1, [sp, #4]
 800243c:	6909      	ldr	r1, [r1, #16]
 800243e:	40a9      	lsls	r1, r5
 8002440:	430f      	orrs	r7, r1
        GPIOx->AFR[position >> 3u] = temp;
 8002442:	6227      	str	r7, [r4, #32]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8002444:	2403      	movs	r4, #3
 8002446:	005f      	lsls	r7, r3, #1
 8002448:	40bc      	lsls	r4, r7
 800244a:	43e4      	mvns	r4, r4
      temp = GPIOx->MODER;
 800244c:	6805      	ldr	r5, [r0, #0]
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800244e:	3e01      	subs	r6, #1
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8002450:	4025      	ands	r5, r4
 8002452:	46ac      	mov	ip, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002454:	2503      	movs	r5, #3
 8002456:	4015      	ands	r5, r2
 8002458:	40bd      	lsls	r5, r7
 800245a:	4661      	mov	r1, ip
 800245c:	430d      	orrs	r5, r1
      GPIOx->MODER = temp;
 800245e:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002460:	2e01      	cmp	r6, #1
 8002462:	d80f      	bhi.n	8002484 <HAL_GPIO_Init+0x94>
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002464:	9901      	ldr	r1, [sp, #4]
        temp = GPIOx->OSPEEDR;
 8002466:	6886      	ldr	r6, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002468:	68cd      	ldr	r5, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 800246a:	4026      	ands	r6, r4
        temp |= (GPIO_Init->Speed << (position * 2u));
 800246c:	40bd      	lsls	r5, r7
 800246e:	4335      	orrs	r5, r6
        GPIOx->OSPEEDR = temp;
 8002470:	6085      	str	r5, [r0, #8]
        temp = GPIOx->OTYPER;
 8002472:	6846      	ldr	r6, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002474:	9903      	ldr	r1, [sp, #12]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 8002476:	0915      	lsrs	r5, r2, #4
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8002478:	438e      	bics	r6, r1
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4u) << position);
 800247a:	2101      	movs	r1, #1
 800247c:	400d      	ands	r5, r1
 800247e:	409d      	lsls	r5, r3
 8002480:	4335      	orrs	r5, r6
        GPIOx->OTYPER = temp;
 8002482:	6045      	str	r5, [r0, #4]
      temp = GPIOx->PUPDR;
 8002484:	68c5      	ldr	r5, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8002486:	9901      	ldr	r1, [sp, #4]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2u));
 8002488:	402c      	ands	r4, r5
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 800248a:	688d      	ldr	r5, [r1, #8]
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800248c:	2180      	movs	r1, #128	; 0x80
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 800248e:	40bd      	lsls	r5, r7
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8002490:	0549      	lsls	r1, r1, #21
      temp |= ((GPIO_Init->Pull) << (position * 2u));
 8002492:	432c      	orrs	r4, r5
      GPIOx->PUPDR = temp;
 8002494:	60c4      	str	r4, [r0, #12]
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8002496:	420a      	tst	r2, r1
 8002498:	d044      	beq.n	8002524 <HAL_GPIO_Init+0x134>
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 800249a:	2603      	movs	r6, #3
 800249c:	240f      	movs	r4, #15
 800249e:	4922      	ldr	r1, [pc, #136]	; (8002528 <HAL_GPIO_Init+0x138>)
        temp = EXTI->EXTICR[position >> 2u];
 80024a0:	089d      	lsrs	r5, r3, #2
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 80024a2:	401e      	ands	r6, r3
 80024a4:	00ad      	lsls	r5, r5, #2
 80024a6:	00f6      	lsls	r6, r6, #3
 80024a8:	186d      	adds	r5, r5, r1
 80024aa:	40b4      	lsls	r4, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80024ac:	21a0      	movs	r1, #160	; 0xa0
        temp = EXTI->EXTICR[position >> 2u];
 80024ae:	6e2f      	ldr	r7, [r5, #96]	; 0x60
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80024b0:	05c9      	lsls	r1, r1, #23
        temp &= ~(0x0FuL << (8u * (position & 0x03u)));
 80024b2:	43a7      	bics	r7, r4
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80024b4:	2400      	movs	r4, #0
 80024b6:	4288      	cmp	r0, r1
 80024b8:	d00c      	beq.n	80024d4 <HAL_GPIO_Init+0xe4>
 80024ba:	491c      	ldr	r1, [pc, #112]	; (800252c <HAL_GPIO_Init+0x13c>)
 80024bc:	3401      	adds	r4, #1
 80024be:	4288      	cmp	r0, r1
 80024c0:	d008      	beq.n	80024d4 <HAL_GPIO_Init+0xe4>
 80024c2:	491b      	ldr	r1, [pc, #108]	; (8002530 <HAL_GPIO_Init+0x140>)
 80024c4:	3401      	adds	r4, #1
 80024c6:	4288      	cmp	r0, r1
 80024c8:	d004      	beq.n	80024d4 <HAL_GPIO_Init+0xe4>
 80024ca:	491a      	ldr	r1, [pc, #104]	; (8002534 <HAL_GPIO_Init+0x144>)
 80024cc:	3403      	adds	r4, #3
 80024ce:	4288      	cmp	r0, r1
 80024d0:	d100      	bne.n	80024d4 <HAL_GPIO_Init+0xe4>
 80024d2:	3c02      	subs	r4, #2
 80024d4:	40b4      	lsls	r4, r6
        temp &= ~(iocurrent);
 80024d6:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_GET_INDEX(GPIOx) << (8u * (position & 0x03u)));
 80024d8:	433c      	orrs	r4, r7
          temp |= iocurrent;
 80024da:	000e      	movs	r6, r1
        EXTI->EXTICR[position >> 2u] = temp;
 80024dc:	662c      	str	r4, [r5, #96]	; 0x60
        temp = EXTI->IMR1;
 80024de:	4c16      	ldr	r4, [pc, #88]	; (8002538 <HAL_GPIO_Init+0x148>)
        temp &= ~(iocurrent);
 80024e0:	43cd      	mvns	r5, r1
        temp = EXTI->IMR1;
 80024e2:	6fe7      	ldr	r7, [r4, #124]	; 0x7c
          temp |= iocurrent;
 80024e4:	433e      	orrs	r6, r7
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80024e6:	03d1      	lsls	r1, r2, #15
 80024e8:	d401      	bmi.n	80024ee <HAL_GPIO_Init+0xfe>
        temp &= ~(iocurrent);
 80024ea:	003e      	movs	r6, r7
 80024ec:	402e      	ands	r6, r5
        EXTI->IMR1 = temp;
 80024ee:	67e6      	str	r6, [r4, #124]	; 0x7c
        temp = EXTI->EMR1;
 80024f0:	4e12      	ldr	r6, [pc, #72]	; (800253c <HAL_GPIO_Init+0x14c>)
          temp |= iocurrent;
 80024f2:	9f00      	ldr	r7, [sp, #0]
        temp = EXTI->EMR1;
 80024f4:	6ff4      	ldr	r4, [r6, #124]	; 0x7c
          temp |= iocurrent;
 80024f6:	4327      	orrs	r7, r4
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80024f8:	0391      	lsls	r1, r2, #14
 80024fa:	d401      	bmi.n	8002500 <HAL_GPIO_Init+0x110>
        temp &= ~(iocurrent);
 80024fc:	402c      	ands	r4, r5
 80024fe:	0027      	movs	r7, r4
        EXTI->EMR1 = temp;
 8002500:	4c09      	ldr	r4, [pc, #36]	; (8002528 <HAL_GPIO_Init+0x138>)
 8002502:	67f7      	str	r7, [r6, #124]	; 0x7c
        temp = EXTI->RTSR1;
 8002504:	6827      	ldr	r7, [r4, #0]
          temp |= iocurrent;
 8002506:	9e00      	ldr	r6, [sp, #0]
 8002508:	433e      	orrs	r6, r7
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800250a:	02d1      	lsls	r1, r2, #11
 800250c:	d401      	bmi.n	8002512 <HAL_GPIO_Init+0x122>
        temp &= ~(iocurrent);
 800250e:	003e      	movs	r6, r7
 8002510:	402e      	ands	r6, r5
        EXTI->RTSR1 = temp;
 8002512:	6026      	str	r6, [r4, #0]
        temp = EXTI->FTSR1;
 8002514:	6866      	ldr	r6, [r4, #4]
          temp |= iocurrent;
 8002516:	9f00      	ldr	r7, [sp, #0]
 8002518:	4337      	orrs	r7, r6
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800251a:	0292      	lsls	r2, r2, #10
 800251c:	d401      	bmi.n	8002522 <HAL_GPIO_Init+0x132>
        temp &= ~(iocurrent);
 800251e:	402e      	ands	r6, r5
 8002520:	0037      	movs	r7, r6
        EXTI->FTSR1 = temp;
 8002522:	6067      	str	r7, [r4, #4]
    position++;
 8002524:	3301      	adds	r3, #1
 8002526:	e769      	b.n	80023fc <HAL_GPIO_Init+0xc>
 8002528:	40021800 	.word	0x40021800
 800252c:	50000400 	.word	0x50000400
 8002530:	50000800 	.word	0x50000800
 8002534:	50000c00 	.word	0x50000c00
 8002538:	40021804 	.word	0x40021804
 800253c:	40021808 	.word	0x40021808

08002540 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002540:	2a00      	cmp	r2, #0
 8002542:	d001      	beq.n	8002548 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8002544:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8002546:	4770      	bx	lr
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8002548:	6281      	str	r1, [r0, #40]	; 0x28
}
 800254a:	e7fc      	b.n	8002546 <HAL_GPIO_WritePin+0x6>

0800254c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800254c:	6803      	ldr	r3, [r0, #0]
 800254e:	699a      	ldr	r2, [r3, #24]
 8002550:	0792      	lsls	r2, r2, #30
 8002552:	d501      	bpl.n	8002558 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8002554:	2200      	movs	r2, #0
 8002556:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8002558:	2201      	movs	r2, #1
 800255a:	6999      	ldr	r1, [r3, #24]
 800255c:	4211      	tst	r1, r2
 800255e:	d102      	bne.n	8002566 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8002560:	6999      	ldr	r1, [r3, #24]
 8002562:	430a      	orrs	r2, r1
 8002564:	619a      	str	r2, [r3, #24]
  }
}
 8002566:	4770      	bx	lr

08002568 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode, uint32_t Request)
{
 8002568:	b570      	push	{r4, r5, r6, lr}
 800256a:	9e04      	ldr	r6, [sp, #16]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
 800256c:	0589      	lsls	r1, r1, #22
 800256e:	4333      	orrs	r3, r6
 8002570:	0d89      	lsrs	r1, r1, #22
 8002572:	4319      	orrs	r1, r3
 8002574:	2380      	movs	r3, #128	; 0x80
 8002576:	6804      	ldr	r4, [r0, #0]
 8002578:	00db      	lsls	r3, r3, #3
 800257a:	0d70      	lsrs	r0, r6, #21
 800257c:	4018      	ands	r0, r3
 800257e:	4b04      	ldr	r3, [pc, #16]	; (8002590 <I2C_TransferConfig+0x28>)
 8002580:	6865      	ldr	r5, [r4, #4]
 8002582:	0412      	lsls	r2, r2, #16
 8002584:	4318      	orrs	r0, r3
 8002586:	4385      	bics	r5, r0
 8002588:	4311      	orrs	r1, r2
 800258a:	4329      	orrs	r1, r5
 800258c:	6061      	str	r1, [r4, #4]
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
 800258e:	bd70      	pop	{r4, r5, r6, pc}
 8002590:	03ff63ff 	.word	0x03ff63ff

08002594 <I2C_WaitOnFlagUntilTimeout>:
{
 8002594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002596:	0004      	movs	r4, r0
 8002598:	000e      	movs	r6, r1
 800259a:	0017      	movs	r7, r2
 800259c:	001d      	movs	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800259e:	6822      	ldr	r2, [r4, #0]
 80025a0:	6993      	ldr	r3, [r2, #24]
 80025a2:	4033      	ands	r3, r6
 80025a4:	1b9b      	subs	r3, r3, r6
 80025a6:	4259      	negs	r1, r3
 80025a8:	414b      	adcs	r3, r1
 80025aa:	42bb      	cmp	r3, r7
 80025ac:	d001      	beq.n	80025b2 <I2C_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 80025ae:	2000      	movs	r0, #0
 80025b0:	e017      	b.n	80025e2 <I2C_WaitOnFlagUntilTimeout+0x4e>
    if (Timeout != HAL_MAX_DELAY)
 80025b2:	1c6b      	adds	r3, r5, #1
 80025b4:	d0f4      	beq.n	80025a0 <I2C_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80025b6:	f7ff fe6f 	bl	8002298 <HAL_GetTick>
 80025ba:	9b06      	ldr	r3, [sp, #24]
 80025bc:	1ac0      	subs	r0, r0, r3
 80025be:	4285      	cmp	r5, r0
 80025c0:	d301      	bcc.n	80025c6 <I2C_WaitOnFlagUntilTimeout+0x32>
 80025c2:	2d00      	cmp	r5, #0
 80025c4:	d1eb      	bne.n	800259e <I2C_WaitOnFlagUntilTimeout+0xa>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80025c6:	2220      	movs	r2, #32
 80025c8:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hi2c);
 80025ca:	2001      	movs	r0, #1
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80025cc:	4313      	orrs	r3, r2
 80025ce:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80025d0:	0023      	movs	r3, r4
 80025d2:	3341      	adds	r3, #65	; 0x41
 80025d4:	701a      	strb	r2, [r3, #0]
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80025d6:	0022      	movs	r2, r4
 80025d8:	2300      	movs	r3, #0
 80025da:	3242      	adds	r2, #66	; 0x42
      __HAL_UNLOCK(hi2c);
 80025dc:	3440      	adds	r4, #64	; 0x40
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80025de:	7013      	strb	r3, [r2, #0]
      __HAL_UNLOCK(hi2c);
 80025e0:	7023      	strb	r3, [r4, #0]
}
 80025e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080025e4 <I2C_IsAcknowledgeFailed>:
{
 80025e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80025e6:	6803      	ldr	r3, [r0, #0]
{
 80025e8:	0004      	movs	r4, r0
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80025ea:	6998      	ldr	r0, [r3, #24]
 80025ec:	2310      	movs	r3, #16
{
 80025ee:	000e      	movs	r6, r1
 80025f0:	0017      	movs	r7, r2
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80025f2:	4018      	ands	r0, r3
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80025f4:	2520      	movs	r5, #32
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80025f6:	2800      	cmp	r0, #0
 80025f8:	d118      	bne.n	800262c <I2C_IsAcknowledgeFailed+0x48>
}
 80025fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (Timeout != HAL_MAX_DELAY)
 80025fc:	1c72      	adds	r2, r6, #1
 80025fe:	d016      	beq.n	800262e <I2C_IsAcknowledgeFailed+0x4a>
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8002600:	f7ff fe4a 	bl	8002298 <HAL_GetTick>
 8002604:	1bc0      	subs	r0, r0, r7
 8002606:	4286      	cmp	r6, r0
 8002608:	d301      	bcc.n	800260e <I2C_IsAcknowledgeFailed+0x2a>
 800260a:	2e00      	cmp	r6, #0
 800260c:	d10e      	bne.n	800262c <I2C_IsAcknowledgeFailed+0x48>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800260e:	2220      	movs	r2, #32
 8002610:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8002612:	4313      	orrs	r3, r2
 8002614:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8002616:	0023      	movs	r3, r4
 8002618:	3341      	adds	r3, #65	; 0x41
 800261a:	701a      	strb	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800261c:	0022      	movs	r2, r4
 800261e:	2300      	movs	r3, #0
 8002620:	3242      	adds	r2, #66	; 0x42
    __HAL_UNLOCK(hi2c);
 8002622:	3440      	adds	r4, #64	; 0x40
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8002624:	7013      	strb	r3, [r2, #0]
    return HAL_ERROR;
 8002626:	2001      	movs	r0, #1
    __HAL_UNLOCK(hi2c);
 8002628:	7023      	strb	r3, [r4, #0]
    return HAL_ERROR;
 800262a:	e7e6      	b.n	80025fa <I2C_IsAcknowledgeFailed+0x16>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 800262c:	6823      	ldr	r3, [r4, #0]
 800262e:	699a      	ldr	r2, [r3, #24]
 8002630:	422a      	tst	r2, r5
 8002632:	d0e3      	beq.n	80025fc <I2C_IsAcknowledgeFailed+0x18>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002634:	2210      	movs	r2, #16
    I2C_Flush_TXDR(hi2c);
 8002636:	0020      	movs	r0, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002638:	61da      	str	r2, [r3, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800263a:	61dd      	str	r5, [r3, #28]
    I2C_Flush_TXDR(hi2c);
 800263c:	f7ff ff86 	bl	800254c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 8002640:	6822      	ldr	r2, [r4, #0]
 8002642:	4906      	ldr	r1, [pc, #24]	; (800265c <I2C_IsAcknowledgeFailed+0x78>)
 8002644:	6853      	ldr	r3, [r2, #4]
 8002646:	400b      	ands	r3, r1
 8002648:	6053      	str	r3, [r2, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800264a:	2304      	movs	r3, #4
 800264c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800264e:	4313      	orrs	r3, r2
 8002650:	6463      	str	r3, [r4, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8002652:	0023      	movs	r3, r4
 8002654:	3341      	adds	r3, #65	; 0x41
 8002656:	701d      	strb	r5, [r3, #0]
 8002658:	e7e0      	b.n	800261c <I2C_IsAcknowledgeFailed+0x38>
 800265a:	46c0      	nop			; (mov r8, r8)
 800265c:	fe00e800 	.word	0xfe00e800

08002660 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8002660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002662:	0004      	movs	r4, r0
 8002664:	000d      	movs	r5, r1
 8002666:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8002668:	2702      	movs	r7, #2
 800266a:	6823      	ldr	r3, [r4, #0]
 800266c:	699b      	ldr	r3, [r3, #24]
 800266e:	423b      	tst	r3, r7
 8002670:	d001      	beq.n	8002676 <I2C_WaitOnTXISFlagUntilTimeout+0x16>
  return HAL_OK;
 8002672:	2000      	movs	r0, #0
}
 8002674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 8002676:	0032      	movs	r2, r6
 8002678:	0029      	movs	r1, r5
 800267a:	0020      	movs	r0, r4
 800267c:	f7ff ffb2 	bl	80025e4 <I2C_IsAcknowledgeFailed>
 8002680:	2800      	cmp	r0, #0
 8002682:	d115      	bne.n	80026b0 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 8002684:	1c6b      	adds	r3, r5, #1
 8002686:	d0f0      	beq.n	800266a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8002688:	f7ff fe06 	bl	8002298 <HAL_GetTick>
 800268c:	1b80      	subs	r0, r0, r6
 800268e:	4285      	cmp	r5, r0
 8002690:	d301      	bcc.n	8002696 <I2C_WaitOnTXISFlagUntilTimeout+0x36>
 8002692:	2d00      	cmp	r5, #0
 8002694:	d1e9      	bne.n	800266a <I2C_WaitOnTXISFlagUntilTimeout+0xa>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8002696:	2220      	movs	r2, #32
 8002698:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800269a:	4313      	orrs	r3, r2
 800269c:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 800269e:	0023      	movs	r3, r4
 80026a0:	3341      	adds	r3, #65	; 0x41
 80026a2:	701a      	strb	r2, [r3, #0]
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80026a4:	0022      	movs	r2, r4
 80026a6:	2300      	movs	r3, #0
 80026a8:	3242      	adds	r2, #66	; 0x42
      __HAL_UNLOCK(hi2c);
 80026aa:	3440      	adds	r4, #64	; 0x40
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80026ac:	7013      	strb	r3, [r2, #0]
      __HAL_UNLOCK(hi2c);
 80026ae:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 80026b0:	2001      	movs	r0, #1
 80026b2:	e7df      	b.n	8002674 <I2C_WaitOnTXISFlagUntilTimeout+0x14>

080026b4 <I2C_RequestMemoryWrite>:
{
 80026b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80026b6:	0014      	movs	r4, r2
 80026b8:	001e      	movs	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80026ba:	b2da      	uxtb	r2, r3
 80026bc:	4b15      	ldr	r3, [pc, #84]	; (8002714 <I2C_RequestMemoryWrite+0x60>)
{
 80026be:	0005      	movs	r5, r0
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80026c0:	9300      	str	r3, [sp, #0]
 80026c2:	2380      	movs	r3, #128	; 0x80
 80026c4:	045b      	lsls	r3, r3, #17
 80026c6:	f7ff ff4f 	bl	8002568 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80026ca:	9a07      	ldr	r2, [sp, #28]
 80026cc:	9906      	ldr	r1, [sp, #24]
 80026ce:	0028      	movs	r0, r5
 80026d0:	f7ff ffc6 	bl	8002660 <I2C_WaitOnTXISFlagUntilTimeout>
 80026d4:	2800      	cmp	r0, #0
 80026d6:	d001      	beq.n	80026dc <I2C_RequestMemoryWrite+0x28>
    return HAL_ERROR;
 80026d8:	2001      	movs	r0, #1
}
 80026da:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 80026dc:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80026de:	2e01      	cmp	r6, #1
 80026e0:	d10d      	bne.n	80026fe <I2C_RequestMemoryWrite+0x4a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80026e2:	b2e4      	uxtb	r4, r4
 80026e4:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80026e6:	9b07      	ldr	r3, [sp, #28]
 80026e8:	2200      	movs	r2, #0
 80026ea:	9300      	str	r3, [sp, #0]
 80026ec:	2180      	movs	r1, #128	; 0x80
 80026ee:	9b06      	ldr	r3, [sp, #24]
 80026f0:	0028      	movs	r0, r5
 80026f2:	f7ff ff4f 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 80026f6:	1e43      	subs	r3, r0, #1
 80026f8:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 80026fa:	b2c0      	uxtb	r0, r0
 80026fc:	e7ed      	b.n	80026da <I2C_RequestMemoryWrite+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80026fe:	0a22      	lsrs	r2, r4, #8
 8002700:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8002702:	9906      	ldr	r1, [sp, #24]
 8002704:	9a07      	ldr	r2, [sp, #28]
 8002706:	0028      	movs	r0, r5
 8002708:	f7ff ffaa 	bl	8002660 <I2C_WaitOnTXISFlagUntilTimeout>
 800270c:	2800      	cmp	r0, #0
 800270e:	d1e3      	bne.n	80026d8 <I2C_RequestMemoryWrite+0x24>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8002710:	682b      	ldr	r3, [r5, #0]
 8002712:	e7e6      	b.n	80026e2 <I2C_RequestMemoryWrite+0x2e>
 8002714:	80002000 	.word	0x80002000

08002718 <I2C_RequestMemoryRead>:
{
 8002718:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800271a:	0005      	movs	r5, r0
 800271c:	0014      	movs	r4, r2
 800271e:	001e      	movs	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8002720:	b2da      	uxtb	r2, r3
 8002722:	4b15      	ldr	r3, [pc, #84]	; (8002778 <I2C_RequestMemoryRead+0x60>)
 8002724:	9300      	str	r3, [sp, #0]
 8002726:	2300      	movs	r3, #0
 8002728:	f7ff ff1e 	bl	8002568 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800272c:	9a07      	ldr	r2, [sp, #28]
 800272e:	9906      	ldr	r1, [sp, #24]
 8002730:	0028      	movs	r0, r5
 8002732:	f7ff ff95 	bl	8002660 <I2C_WaitOnTXISFlagUntilTimeout>
 8002736:	2800      	cmp	r0, #0
 8002738:	d001      	beq.n	800273e <I2C_RequestMemoryRead+0x26>
    return HAL_ERROR;
 800273a:	2001      	movs	r0, #1
}
 800273c:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 800273e:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8002740:	2e01      	cmp	r6, #1
 8002742:	d10d      	bne.n	8002760 <I2C_RequestMemoryRead+0x48>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8002744:	b2e4      	uxtb	r4, r4
 8002746:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8002748:	9b07      	ldr	r3, [sp, #28]
 800274a:	2200      	movs	r2, #0
 800274c:	9300      	str	r3, [sp, #0]
 800274e:	2140      	movs	r1, #64	; 0x40
 8002750:	9b06      	ldr	r3, [sp, #24]
 8002752:	0028      	movs	r0, r5
 8002754:	f7ff ff1e 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002758:	1e43      	subs	r3, r0, #1
 800275a:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 800275c:	b2c0      	uxtb	r0, r0
 800275e:	e7ed      	b.n	800273c <I2C_RequestMemoryRead+0x24>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8002760:	0a22      	lsrs	r2, r4, #8
 8002762:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8002764:	9906      	ldr	r1, [sp, #24]
 8002766:	9a07      	ldr	r2, [sp, #28]
 8002768:	0028      	movs	r0, r5
 800276a:	f7ff ff79 	bl	8002660 <I2C_WaitOnTXISFlagUntilTimeout>
 800276e:	2800      	cmp	r0, #0
 8002770:	d1e3      	bne.n	800273a <I2C_RequestMemoryRead+0x22>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8002772:	682b      	ldr	r3, [r5, #0]
 8002774:	e7e6      	b.n	8002744 <I2C_RequestMemoryRead+0x2c>
 8002776:	46c0      	nop			; (mov r8, r8)
 8002778:	80002000 	.word	0x80002000

0800277c <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 800277c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800277e:	0004      	movs	r4, r0
 8002780:	000d      	movs	r5, r1
 8002782:	0016      	movs	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8002784:	2720      	movs	r7, #32
 8002786:	6823      	ldr	r3, [r4, #0]
 8002788:	699b      	ldr	r3, [r3, #24]
 800278a:	423b      	tst	r3, r7
 800278c:	d001      	beq.n	8002792 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
 800278e:	2000      	movs	r0, #0
}
 8002790:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 8002792:	0032      	movs	r2, r6
 8002794:	0029      	movs	r1, r5
 8002796:	0020      	movs	r0, r4
 8002798:	f7ff ff24 	bl	80025e4 <I2C_IsAcknowledgeFailed>
 800279c:	2800      	cmp	r0, #0
 800279e:	d113      	bne.n	80027c8 <I2C_WaitOnSTOPFlagUntilTimeout+0x4c>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80027a0:	f7ff fd7a 	bl	8002298 <HAL_GetTick>
 80027a4:	1b80      	subs	r0, r0, r6
 80027a6:	4285      	cmp	r5, r0
 80027a8:	d301      	bcc.n	80027ae <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
 80027aa:	2d00      	cmp	r5, #0
 80027ac:	d1eb      	bne.n	8002786 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80027ae:	2220      	movs	r2, #32
 80027b0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80027b2:	4313      	orrs	r3, r2
 80027b4:	6463      	str	r3, [r4, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 80027b6:	0023      	movs	r3, r4
 80027b8:	3341      	adds	r3, #65	; 0x41
 80027ba:	701a      	strb	r2, [r3, #0]
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80027bc:	0022      	movs	r2, r4
 80027be:	2300      	movs	r3, #0
 80027c0:	3242      	adds	r2, #66	; 0x42
      __HAL_UNLOCK(hi2c);
 80027c2:	3440      	adds	r4, #64	; 0x40
      hi2c->Mode = HAL_I2C_MODE_NONE;
 80027c4:	7013      	strb	r3, [r2, #0]
      __HAL_UNLOCK(hi2c);
 80027c6:	7023      	strb	r3, [r4, #0]
      return HAL_ERROR;
 80027c8:	2001      	movs	r0, #1
 80027ca:	e7e1      	b.n	8002790 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>

080027cc <HAL_I2C_Init>:
{
 80027cc:	b570      	push	{r4, r5, r6, lr}
 80027ce:	0004      	movs	r4, r0
    return HAL_ERROR;
 80027d0:	2001      	movs	r0, #1
  if (hi2c == NULL)
 80027d2:	2c00      	cmp	r4, #0
 80027d4:	d03f      	beq.n	8002856 <HAL_I2C_Init+0x8a>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80027d6:	0025      	movs	r5, r4
 80027d8:	3541      	adds	r5, #65	; 0x41
 80027da:	782b      	ldrb	r3, [r5, #0]
 80027dc:	b2db      	uxtb	r3, r3
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d105      	bne.n	80027ee <HAL_I2C_Init+0x22>
    hi2c->Lock = HAL_UNLOCKED;
 80027e2:	0022      	movs	r2, r4
 80027e4:	3240      	adds	r2, #64	; 0x40
 80027e6:	7013      	strb	r3, [r2, #0]
    HAL_I2C_MspInit(hi2c);
 80027e8:	0020      	movs	r0, r4
 80027ea:	f001 ff85 	bl	80046f8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80027ee:	2324      	movs	r3, #36	; 0x24
  __HAL_I2C_DISABLE(hi2c);
 80027f0:	2101      	movs	r1, #1
  hi2c->State = HAL_I2C_STATE_BUSY;
 80027f2:	702b      	strb	r3, [r5, #0]
  __HAL_I2C_DISABLE(hi2c);
 80027f4:	6823      	ldr	r3, [r4, #0]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80027f6:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
 80027f8:	681a      	ldr	r2, [r3, #0]
 80027fa:	68a6      	ldr	r6, [r4, #8]
 80027fc:	438a      	bics	r2, r1
 80027fe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8002800:	6861      	ldr	r1, [r4, #4]
 8002802:	4a1a      	ldr	r2, [pc, #104]	; (800286c <HAL_I2C_Init+0xa0>)
 8002804:	400a      	ands	r2, r1
 8002806:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8002808:	6899      	ldr	r1, [r3, #8]
 800280a:	4a19      	ldr	r2, [pc, #100]	; (8002870 <HAL_I2C_Init+0xa4>)
 800280c:	4011      	ands	r1, r2
 800280e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8002810:	2801      	cmp	r0, #1
 8002812:	d121      	bne.n	8002858 <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8002814:	2180      	movs	r1, #128	; 0x80
 8002816:	0209      	lsls	r1, r1, #8
 8002818:	4331      	orrs	r1, r6
 800281a:	6099      	str	r1, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800281c:	6858      	ldr	r0, [r3, #4]
 800281e:	4915      	ldr	r1, [pc, #84]	; (8002874 <HAL_I2C_Init+0xa8>)
 8002820:	4301      	orrs	r1, r0
 8002822:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8002824:	68d9      	ldr	r1, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002826:	2000      	movs	r0, #0
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8002828:	400a      	ands	r2, r1
 800282a:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
 800282c:	6961      	ldr	r1, [r4, #20]
 800282e:	6922      	ldr	r2, [r4, #16]
 8002830:	430a      	orrs	r2, r1
 8002832:	69a1      	ldr	r1, [r4, #24]
 8002834:	0209      	lsls	r1, r1, #8
 8002836:	430a      	orrs	r2, r1
 8002838:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 800283a:	6a21      	ldr	r1, [r4, #32]
 800283c:	69e2      	ldr	r2, [r4, #28]
 800283e:	430a      	orrs	r2, r1
 8002840:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 8002842:	2201      	movs	r2, #1
 8002844:	6819      	ldr	r1, [r3, #0]
 8002846:	430a      	orrs	r2, r1
 8002848:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 800284a:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800284c:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800284e:	702b      	strb	r3, [r5, #0]
  hi2c->PreviousState = I2C_STATE_NONE;
 8002850:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8002852:	3442      	adds	r4, #66	; 0x42
 8002854:	7020      	strb	r0, [r4, #0]
}
 8002856:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8002858:	2184      	movs	r1, #132	; 0x84
 800285a:	0209      	lsls	r1, r1, #8
 800285c:	4331      	orrs	r1, r6
 800285e:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8002860:	2802      	cmp	r0, #2
 8002862:	d1db      	bne.n	800281c <HAL_I2C_Init+0x50>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8002864:	2180      	movs	r1, #128	; 0x80
 8002866:	0109      	lsls	r1, r1, #4
 8002868:	6059      	str	r1, [r3, #4]
 800286a:	e7d7      	b.n	800281c <HAL_I2C_Init+0x50>
 800286c:	f0ffffff 	.word	0xf0ffffff
 8002870:	ffff7fff 	.word	0xffff7fff
 8002874:	02008000 	.word	0x02008000

08002878 <HAL_I2C_Mem_Write>:
{
 8002878:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 800287a:	0007      	movs	r7, r0
{
 800287c:	b089      	sub	sp, #36	; 0x24
 800287e:	9307      	str	r3, [sp, #28]
 8002880:	ab0e      	add	r3, sp, #56	; 0x38
 8002882:	9206      	str	r2, [sp, #24]
 8002884:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002886:	3741      	adds	r7, #65	; 0x41
{
 8002888:	881b      	ldrh	r3, [r3, #0]
 800288a:	9204      	str	r2, [sp, #16]
 800288c:	9305      	str	r3, [sp, #20]
  if (hi2c->State == HAL_I2C_STATE_READY)
 800288e:	783b      	ldrb	r3, [r7, #0]
{
 8002890:	0004      	movs	r4, r0
 8002892:	000d      	movs	r5, r1
    return HAL_BUSY;
 8002894:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002896:	2b20      	cmp	r3, #32
 8002898:	d108      	bne.n	80028ac <HAL_I2C_Mem_Write+0x34>
    if ((pData == NULL) || (Size == 0U))
 800289a:	2a00      	cmp	r2, #0
 800289c:	d002      	beq.n	80028a4 <HAL_I2C_Mem_Write+0x2c>
 800289e:	9b05      	ldr	r3, [sp, #20]
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	d105      	bne.n	80028b0 <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 80028a4:	2380      	movs	r3, #128	; 0x80
 80028a6:	009b      	lsls	r3, r3, #2
 80028a8:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80028aa:	2001      	movs	r0, #1
}
 80028ac:	b009      	add	sp, #36	; 0x24
 80028ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_LOCK(hi2c);
 80028b0:	0023      	movs	r3, r4
 80028b2:	3340      	adds	r3, #64	; 0x40
 80028b4:	9303      	str	r3, [sp, #12]
 80028b6:	781b      	ldrb	r3, [r3, #0]
 80028b8:	2b01      	cmp	r3, #1
 80028ba:	d0f7      	beq.n	80028ac <HAL_I2C_Mem_Write+0x34>
 80028bc:	2201      	movs	r2, #1
 80028be:	9b03      	ldr	r3, [sp, #12]
 80028c0:	701a      	strb	r2, [r3, #0]
    tickstart = HAL_GetTick();
 80028c2:	f7ff fce9 	bl	8002298 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80028c6:	2180      	movs	r1, #128	; 0x80
    tickstart = HAL_GetTick();
 80028c8:	9002      	str	r0, [sp, #8]
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80028ca:	9000      	str	r0, [sp, #0]
 80028cc:	2319      	movs	r3, #25
 80028ce:	2201      	movs	r2, #1
 80028d0:	0209      	lsls	r1, r1, #8
 80028d2:	0020      	movs	r0, r4
 80028d4:	f7ff fe5e 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 80028d8:	1e06      	subs	r6, r0, #0
 80028da:	d1e6      	bne.n	80028aa <HAL_I2C_Mem_Write+0x32>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80028dc:	2321      	movs	r3, #33	; 0x21
 80028de:	703b      	strb	r3, [r7, #0]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80028e0:	0027      	movs	r7, r4
 80028e2:	331f      	adds	r3, #31
 80028e4:	3742      	adds	r7, #66	; 0x42
 80028e6:	703b      	strb	r3, [r7, #0]
    hi2c->pBuffPtr  = pData;
 80028e8:	9b04      	ldr	r3, [sp, #16]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80028ea:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 80028ec:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 80028ee:	466b      	mov	r3, sp
 80028f0:	8a9b      	ldrh	r3, [r3, #20]
    hi2c->XferISR   = NULL;
 80028f2:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->XferCount = Size;
 80028f4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80028f6:	9b02      	ldr	r3, [sp, #8]
 80028f8:	9a06      	ldr	r2, [sp, #24]
 80028fa:	9301      	str	r3, [sp, #4]
 80028fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80028fe:	0029      	movs	r1, r5
 8002900:	9300      	str	r3, [sp, #0]
 8002902:	0020      	movs	r0, r4
 8002904:	9b07      	ldr	r3, [sp, #28]
 8002906:	f7ff fed5 	bl	80026b4 <I2C_RequestMemoryWrite>
 800290a:	2800      	cmp	r0, #0
 800290c:	d002      	beq.n	8002914 <HAL_I2C_Mem_Write+0x9c>
      __HAL_UNLOCK(hi2c);
 800290e:	9b03      	ldr	r3, [sp, #12]
 8002910:	701e      	strb	r6, [r3, #0]
 8002912:	e7ca      	b.n	80028aa <HAL_I2C_Mem_Write+0x32>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002914:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002916:	2bff      	cmp	r3, #255	; 0xff
 8002918:	d954      	bls.n	80029c4 <HAL_I2C_Mem_Write+0x14c>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800291a:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 800291c:	2380      	movs	r3, #128	; 0x80
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800291e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8002920:	045b      	lsls	r3, r3, #17
 8002922:	9000      	str	r0, [sp, #0]
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002924:	0029      	movs	r1, r5
 8002926:	0020      	movs	r0, r4
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002928:	2680      	movs	r6, #128	; 0x80
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800292a:	f7ff fe1d 	bl	8002568 <I2C_TransferConfig>
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800292e:	04b6      	lsls	r6, r6, #18
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002930:	9a02      	ldr	r2, [sp, #8]
 8002932:	9910      	ldr	r1, [sp, #64]	; 0x40
 8002934:	0020      	movs	r0, r4
 8002936:	f7ff fe93 	bl	8002660 <I2C_WaitOnTXISFlagUntilTimeout>
 800293a:	2800      	cmp	r0, #0
 800293c:	d1b5      	bne.n	80028aa <HAL_I2C_Mem_Write+0x32>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800293e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002940:	6822      	ldr	r2, [r4, #0]
 8002942:	7819      	ldrb	r1, [r3, #0]
      hi2c->pBuffPtr++;
 8002944:	3301      	adds	r3, #1
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8002946:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 8002948:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800294a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800294c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800294e:	3b01      	subs	r3, #1
 8002950:	b29b      	uxth	r3, r3
 8002952:	8563      	strh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002954:	3a01      	subs	r2, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002956:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002958:	b292      	uxth	r2, r2
 800295a:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800295c:	2b00      	cmp	r3, #0
 800295e:	d018      	beq.n	8002992 <HAL_I2C_Mem_Write+0x11a>
 8002960:	2a00      	cmp	r2, #0
 8002962:	d116      	bne.n	8002992 <HAL_I2C_Mem_Write+0x11a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8002964:	9b02      	ldr	r3, [sp, #8]
 8002966:	2180      	movs	r1, #128	; 0x80
 8002968:	9300      	str	r3, [sp, #0]
 800296a:	0020      	movs	r0, r4
 800296c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800296e:	f7ff fe11 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002972:	2800      	cmp	r0, #0
 8002974:	d000      	beq.n	8002978 <HAL_I2C_Mem_Write+0x100>
 8002976:	e798      	b.n	80028aa <HAL_I2C_Mem_Write+0x32>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002978:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800297a:	2bff      	cmp	r3, #255	; 0xff
 800297c:	d92a      	bls.n	80029d4 <HAL_I2C_Mem_Write+0x15c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800297e:	23ff      	movs	r3, #255	; 0xff
 8002980:	8523      	strh	r3, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8002982:	2380      	movs	r3, #128	; 0x80
 8002984:	22ff      	movs	r2, #255	; 0xff
 8002986:	9000      	str	r0, [sp, #0]
 8002988:	045b      	lsls	r3, r3, #17
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800298a:	0029      	movs	r1, r5
 800298c:	0020      	movs	r0, r4
 800298e:	f7ff fdeb 	bl	8002568 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U);
 8002992:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002994:	2b00      	cmp	r3, #0
 8002996:	d1cb      	bne.n	8002930 <HAL_I2C_Mem_Write+0xb8>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002998:	9a02      	ldr	r2, [sp, #8]
 800299a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800299c:	0020      	movs	r0, r4
 800299e:	f7ff feed 	bl	800277c <I2C_WaitOnSTOPFlagUntilTimeout>
 80029a2:	2800      	cmp	r0, #0
 80029a4:	d000      	beq.n	80029a8 <HAL_I2C_Mem_Write+0x130>
 80029a6:	e780      	b.n	80028aa <HAL_I2C_Mem_Write+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80029a8:	2120      	movs	r1, #32
 80029aa:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 80029ac:	4d0d      	ldr	r5, [pc, #52]	; (80029e4 <HAL_I2C_Mem_Write+0x16c>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80029ae:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80029b0:	685a      	ldr	r2, [r3, #4]
 80029b2:	402a      	ands	r2, r5
 80029b4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80029b6:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 80029b8:	3440      	adds	r4, #64	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 80029ba:	3341      	adds	r3, #65	; 0x41
 80029bc:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80029be:	7038      	strb	r0, [r7, #0]
    __HAL_UNLOCK(hi2c);
 80029c0:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80029c2:	e773      	b.n	80028ac <HAL_I2C_Mem_Write+0x34>
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80029c4:	2380      	movs	r3, #128	; 0x80
      hi2c->XferSize = hi2c->XferCount;
 80029c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80029c8:	049b      	lsls	r3, r3, #18
      hi2c->XferSize = hi2c->XferCount;
 80029ca:	b292      	uxth	r2, r2
 80029cc:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80029ce:	b2d2      	uxtb	r2, r2
 80029d0:	9000      	str	r0, [sp, #0]
 80029d2:	e7a7      	b.n	8002924 <HAL_I2C_Mem_Write+0xac>
          hi2c->XferSize = hi2c->XferCount;
 80029d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80029d6:	0033      	movs	r3, r6
          hi2c->XferSize = hi2c->XferCount;
 80029d8:	b292      	uxth	r2, r2
 80029da:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80029dc:	b2d2      	uxtb	r2, r2
 80029de:	9000      	str	r0, [sp, #0]
 80029e0:	e7d3      	b.n	800298a <HAL_I2C_Mem_Write+0x112>
 80029e2:	46c0      	nop			; (mov r8, r8)
 80029e4:	fe00e800 	.word	0xfe00e800

080029e8 <HAL_I2C_Mem_Read>:
{
 80029e8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80029ea:	0007      	movs	r7, r0
{
 80029ec:	b089      	sub	sp, #36	; 0x24
 80029ee:	9307      	str	r3, [sp, #28]
 80029f0:	ab0e      	add	r3, sp, #56	; 0x38
 80029f2:	9206      	str	r2, [sp, #24]
 80029f4:	cb04      	ldmia	r3!, {r2}
  if (hi2c->State == HAL_I2C_STATE_READY)
 80029f6:	3741      	adds	r7, #65	; 0x41
{
 80029f8:	881b      	ldrh	r3, [r3, #0]
 80029fa:	9204      	str	r2, [sp, #16]
 80029fc:	9305      	str	r3, [sp, #20]
  if (hi2c->State == HAL_I2C_STATE_READY)
 80029fe:	783b      	ldrb	r3, [r7, #0]
{
 8002a00:	0004      	movs	r4, r0
 8002a02:	000d      	movs	r5, r1
    return HAL_BUSY;
 8002a04:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002a06:	2b20      	cmp	r3, #32
 8002a08:	d108      	bne.n	8002a1c <HAL_I2C_Mem_Read+0x34>
    if ((pData == NULL) || (Size == 0U))
 8002a0a:	2a00      	cmp	r2, #0
 8002a0c:	d002      	beq.n	8002a14 <HAL_I2C_Mem_Read+0x2c>
 8002a0e:	9b05      	ldr	r3, [sp, #20]
 8002a10:	2b00      	cmp	r3, #0
 8002a12:	d105      	bne.n	8002a20 <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8002a14:	2380      	movs	r3, #128	; 0x80
 8002a16:	009b      	lsls	r3, r3, #2
 8002a18:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8002a1a:	2001      	movs	r0, #1
}
 8002a1c:	b009      	add	sp, #36	; 0x24
 8002a1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_LOCK(hi2c);
 8002a20:	0023      	movs	r3, r4
 8002a22:	3340      	adds	r3, #64	; 0x40
 8002a24:	9303      	str	r3, [sp, #12]
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	2b01      	cmp	r3, #1
 8002a2a:	d0f7      	beq.n	8002a1c <HAL_I2C_Mem_Read+0x34>
 8002a2c:	2201      	movs	r2, #1
 8002a2e:	9b03      	ldr	r3, [sp, #12]
 8002a30:	701a      	strb	r2, [r3, #0]
    tickstart = HAL_GetTick();
 8002a32:	f7ff fc31 	bl	8002298 <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8002a36:	2180      	movs	r1, #128	; 0x80
    tickstart = HAL_GetTick();
 8002a38:	9002      	str	r0, [sp, #8]
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8002a3a:	9000      	str	r0, [sp, #0]
 8002a3c:	2319      	movs	r3, #25
 8002a3e:	2201      	movs	r2, #1
 8002a40:	0209      	lsls	r1, r1, #8
 8002a42:	0020      	movs	r0, r4
 8002a44:	f7ff fda6 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002a48:	1e06      	subs	r6, r0, #0
 8002a4a:	d1e6      	bne.n	8002a1a <HAL_I2C_Mem_Read+0x32>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8002a4c:	2322      	movs	r3, #34	; 0x22
 8002a4e:	703b      	strb	r3, [r7, #0]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8002a50:	0027      	movs	r7, r4
 8002a52:	331e      	adds	r3, #30
 8002a54:	3742      	adds	r7, #66	; 0x42
 8002a56:	703b      	strb	r3, [r7, #0]
    hi2c->pBuffPtr  = pData;
 8002a58:	9b04      	ldr	r3, [sp, #16]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002a5a:	6460      	str	r0, [r4, #68]	; 0x44
    hi2c->pBuffPtr  = pData;
 8002a5c:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8002a5e:	466b      	mov	r3, sp
 8002a60:	8a9b      	ldrh	r3, [r3, #20]
    hi2c->XferISR   = NULL;
 8002a62:	6360      	str	r0, [r4, #52]	; 0x34
    hi2c->XferCount = Size;
 8002a64:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8002a66:	9b02      	ldr	r3, [sp, #8]
 8002a68:	9a06      	ldr	r2, [sp, #24]
 8002a6a:	9301      	str	r3, [sp, #4]
 8002a6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002a6e:	0029      	movs	r1, r5
 8002a70:	9300      	str	r3, [sp, #0]
 8002a72:	0020      	movs	r0, r4
 8002a74:	9b07      	ldr	r3, [sp, #28]
 8002a76:	f7ff fe4f 	bl	8002718 <I2C_RequestMemoryRead>
 8002a7a:	2800      	cmp	r0, #0
 8002a7c:	d002      	beq.n	8002a84 <HAL_I2C_Mem_Read+0x9c>
      __HAL_UNLOCK(hi2c);
 8002a7e:	9b03      	ldr	r3, [sp, #12]
 8002a80:	701e      	strb	r6, [r3, #0]
 8002a82:	e7ca      	b.n	8002a1a <HAL_I2C_Mem_Read+0x32>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002a84:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002a86:	4b35      	ldr	r3, [pc, #212]	; (8002b5c <HAL_I2C_Mem_Read+0x174>)
 8002a88:	2aff      	cmp	r2, #255	; 0xff
 8002a8a:	d958      	bls.n	8002b3e <HAL_I2C_Mem_Read+0x156>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8002a8c:	22ff      	movs	r2, #255	; 0xff
 8002a8e:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ);
 8002a90:	9300      	str	r3, [sp, #0]
 8002a92:	2380      	movs	r3, #128	; 0x80
 8002a94:	045b      	lsls	r3, r3, #17
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 8002a96:	0029      	movs	r1, r5
 8002a98:	0020      	movs	r0, r4
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002a9a:	2680      	movs	r6, #128	; 0x80
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 8002a9c:	f7ff fd64 	bl	8002568 <I2C_TransferConfig>
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002aa0:	04b6      	lsls	r6, r6, #18
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8002aa2:	9b02      	ldr	r3, [sp, #8]
 8002aa4:	2200      	movs	r2, #0
 8002aa6:	9300      	str	r3, [sp, #0]
 8002aa8:	2104      	movs	r1, #4
 8002aaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002aac:	0020      	movs	r0, r4
 8002aae:	f7ff fd71 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002ab2:	2800      	cmp	r0, #0
 8002ab4:	d1b1      	bne.n	8002a1a <HAL_I2C_Mem_Read+0x32>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8002ab6:	6823      	ldr	r3, [r4, #0]
 8002ab8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8002aba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002abc:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 8002abe:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8002ac0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 8002ac2:	3301      	adds	r3, #1
 8002ac4:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8002ac6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002ac8:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 8002aca:	3b01      	subs	r3, #1
 8002acc:	b29b      	uxth	r3, r3
 8002ace:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002ad0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8002ad2:	b292      	uxth	r2, r2
 8002ad4:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d018      	beq.n	8002b0c <HAL_I2C_Mem_Read+0x124>
 8002ada:	2a00      	cmp	r2, #0
 8002adc:	d116      	bne.n	8002b0c <HAL_I2C_Mem_Read+0x124>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8002ade:	9b02      	ldr	r3, [sp, #8]
 8002ae0:	2180      	movs	r1, #128	; 0x80
 8002ae2:	9300      	str	r3, [sp, #0]
 8002ae4:	0020      	movs	r0, r4
 8002ae6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002ae8:	f7ff fd54 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002aec:	2800      	cmp	r0, #0
 8002aee:	d000      	beq.n	8002af2 <HAL_I2C_Mem_Read+0x10a>
 8002af0:	e793      	b.n	8002a1a <HAL_I2C_Mem_Read+0x32>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8002af2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002af4:	2bff      	cmp	r3, #255	; 0xff
 8002af6:	d92a      	bls.n	8002b4e <HAL_I2C_Mem_Read+0x166>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8002af8:	23ff      	movs	r3, #255	; 0xff
 8002afa:	8523      	strh	r3, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8002afc:	2380      	movs	r3, #128	; 0x80
 8002afe:	22ff      	movs	r2, #255	; 0xff
 8002b00:	9000      	str	r0, [sp, #0]
 8002b02:	045b      	lsls	r3, r3, #17
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002b04:	0029      	movs	r1, r5
 8002b06:	0020      	movs	r0, r4
 8002b08:	f7ff fd2e 	bl	8002568 <I2C_TransferConfig>
    while (hi2c->XferCount > 0U);
 8002b0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8002b0e:	2b00      	cmp	r3, #0
 8002b10:	d1c7      	bne.n	8002aa2 <HAL_I2C_Mem_Read+0xba>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002b12:	9a02      	ldr	r2, [sp, #8]
 8002b14:	9910      	ldr	r1, [sp, #64]	; 0x40
 8002b16:	0020      	movs	r0, r4
 8002b18:	f7ff fe30 	bl	800277c <I2C_WaitOnSTOPFlagUntilTimeout>
 8002b1c:	2800      	cmp	r0, #0
 8002b1e:	d000      	beq.n	8002b22 <HAL_I2C_Mem_Read+0x13a>
 8002b20:	e77b      	b.n	8002a1a <HAL_I2C_Mem_Read+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002b22:	2120      	movs	r1, #32
 8002b24:	6823      	ldr	r3, [r4, #0]
    I2C_RESET_CR2(hi2c);
 8002b26:	4d0e      	ldr	r5, [pc, #56]	; (8002b60 <HAL_I2C_Mem_Read+0x178>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002b28:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 8002b2a:	685a      	ldr	r2, [r3, #4]
 8002b2c:	402a      	ands	r2, r5
 8002b2e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8002b30:	0023      	movs	r3, r4
    __HAL_UNLOCK(hi2c);
 8002b32:	3440      	adds	r4, #64	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 8002b34:	3341      	adds	r3, #65	; 0x41
 8002b36:	7019      	strb	r1, [r3, #0]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8002b38:	7038      	strb	r0, [r7, #0]
    __HAL_UNLOCK(hi2c);
 8002b3a:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 8002b3c:	e76e      	b.n	8002a1c <HAL_I2C_Mem_Read+0x34>
      hi2c->XferSize = hi2c->XferCount;
 8002b3e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8002b40:	b292      	uxth	r2, r2
 8002b42:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_READ);
 8002b44:	9300      	str	r3, [sp, #0]
 8002b46:	2380      	movs	r3, #128	; 0x80
 8002b48:	b2d2      	uxtb	r2, r2
 8002b4a:	049b      	lsls	r3, r3, #18
 8002b4c:	e7a3      	b.n	8002a96 <HAL_I2C_Mem_Read+0xae>
          hi2c->XferSize = hi2c->XferCount;
 8002b4e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002b50:	0033      	movs	r3, r6
          hi2c->XferSize = hi2c->XferCount;
 8002b52:	b292      	uxth	r2, r2
 8002b54:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8002b56:	b2d2      	uxtb	r2, r2
 8002b58:	9000      	str	r0, [sp, #0]
 8002b5a:	e7d3      	b.n	8002b04 <HAL_I2C_Mem_Read+0x11c>
 8002b5c:	80002400 	.word	0x80002400
 8002b60:	fe00e800 	.word	0xfe00e800

08002b64 <HAL_I2C_IsDeviceReady>:
{
 8002b64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b66:	001d      	movs	r5, r3
  __IO uint32_t I2C_Trials = 0UL;
 8002b68:	2300      	movs	r3, #0
{
 8002b6a:	b089      	sub	sp, #36	; 0x24
  __IO uint32_t I2C_Trials = 0UL;
 8002b6c:	9307      	str	r3, [sp, #28]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002b6e:	0003      	movs	r3, r0
 8002b70:	3341      	adds	r3, #65	; 0x41
{
 8002b72:	9105      	str	r1, [sp, #20]
 8002b74:	9204      	str	r2, [sp, #16]
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002b76:	9302      	str	r3, [sp, #8]
 8002b78:	781b      	ldrb	r3, [r3, #0]
{
 8002b7a:	0004      	movs	r4, r0
    return HAL_BUSY;
 8002b7c:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002b7e:	2b20      	cmp	r3, #32
 8002b80:	d156      	bne.n	8002c30 <HAL_I2C_IsDeviceReady+0xcc>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 8002b82:	6823      	ldr	r3, [r4, #0]
 8002b84:	699a      	ldr	r2, [r3, #24]
 8002b86:	2380      	movs	r3, #128	; 0x80
 8002b88:	021b      	lsls	r3, r3, #8
 8002b8a:	4013      	ands	r3, r2
 8002b8c:	d150      	bne.n	8002c30 <HAL_I2C_IsDeviceReady+0xcc>
    __HAL_LOCK(hi2c);
 8002b8e:	0021      	movs	r1, r4
 8002b90:	3140      	adds	r1, #64	; 0x40
 8002b92:	780a      	ldrb	r2, [r1, #0]
 8002b94:	2a01      	cmp	r2, #1
 8002b96:	d04b      	beq.n	8002c30 <HAL_I2C_IsDeviceReady+0xcc>
 8002b98:	2201      	movs	r2, #1
 8002b9a:	700a      	strb	r2, [r1, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002b9c:	2124      	movs	r1, #36	; 0x24
 8002b9e:	9802      	ldr	r0, [sp, #8]
      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 8002ba0:	9203      	str	r2, [sp, #12]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002ba2:	7001      	strb	r1, [r0, #0]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002ba4:	6463      	str	r3, [r4, #68]	; 0x44
 8002ba6:	9b05      	ldr	r3, [sp, #20]
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 8002ba8:	68e1      	ldr	r1, [r4, #12]
 8002baa:	059b      	lsls	r3, r3, #22
 8002bac:	6822      	ldr	r2, [r4, #0]
 8002bae:	0d9b      	lsrs	r3, r3, #22
 8002bb0:	2901      	cmp	r1, #1
 8002bb2:	d11f      	bne.n	8002bf4 <HAL_I2C_IsDeviceReady+0x90>
 8002bb4:	4933      	ldr	r1, [pc, #204]	; (8002c84 <HAL_I2C_IsDeviceReady+0x120>)
 8002bb6:	430b      	orrs	r3, r1
 8002bb8:	6053      	str	r3, [r2, #4]
      tickstart = HAL_GetTick();
 8002bba:	f7ff fb6d 	bl	8002298 <HAL_GetTick>
 8002bbe:	0006      	movs	r6, r0
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 8002bc0:	6822      	ldr	r2, [r4, #0]
 8002bc2:	9903      	ldr	r1, [sp, #12]
 8002bc4:	6993      	ldr	r3, [r2, #24]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8002bc6:	6992      	ldr	r2, [r2, #24]
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 8002bc8:	095b      	lsrs	r3, r3, #5
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8002bca:	0912      	lsrs	r2, r2, #4
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 8002bcc:	400b      	ands	r3, r1
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 8002bce:	400a      	ands	r2, r1
      while ((tmp1 == RESET) && (tmp2 == RESET))
 8002bd0:	4313      	orrs	r3, r2
 8002bd2:	d012      	beq.n	8002bfa <HAL_I2C_IsDeviceReady+0x96>
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 8002bd4:	2710      	movs	r7, #16
 8002bd6:	6823      	ldr	r3, [r4, #0]
 8002bd8:	699a      	ldr	r2, [r3, #24]
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002bda:	9600      	str	r6, [sp, #0]
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 8002bdc:	403a      	ands	r2, r7
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002bde:	002b      	movs	r3, r5
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 8002be0:	2a00      	cmp	r2, #0
 8002be2:	d127      	bne.n	8002c34 <HAL_I2C_IsDeviceReady+0xd0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002be4:	2120      	movs	r1, #32
 8002be6:	0020      	movs	r0, r4
 8002be8:	f7ff fcd4 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002bec:	2800      	cmp	r0, #0
 8002bee:	d017      	beq.n	8002c20 <HAL_I2C_IsDeviceReady+0xbc>
    return HAL_ERROR;
 8002bf0:	2001      	movs	r0, #1
 8002bf2:	e01d      	b.n	8002c30 <HAL_I2C_IsDeviceReady+0xcc>
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 8002bf4:	21a0      	movs	r1, #160	; 0xa0
 8002bf6:	0189      	lsls	r1, r1, #6
 8002bf8:	e7dd      	b.n	8002bb6 <HAL_I2C_IsDeviceReady+0x52>
        if (Timeout != HAL_MAX_DELAY)
 8002bfa:	1c6b      	adds	r3, r5, #1
 8002bfc:	d0e0      	beq.n	8002bc0 <HAL_I2C_IsDeviceReady+0x5c>
          if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8002bfe:	f7ff fb4b 	bl	8002298 <HAL_GetTick>
 8002c02:	1b80      	subs	r0, r0, r6
 8002c04:	4285      	cmp	r5, r0
 8002c06:	d301      	bcc.n	8002c0c <HAL_I2C_IsDeviceReady+0xa8>
 8002c08:	2d00      	cmp	r5, #0
 8002c0a:	d1d9      	bne.n	8002bc0 <HAL_I2C_IsDeviceReady+0x5c>
    hi2c->State = HAL_I2C_STATE_READY;
 8002c0c:	2320      	movs	r3, #32
 8002c0e:	9a02      	ldr	r2, [sp, #8]
    __HAL_UNLOCK(hi2c);
 8002c10:	3440      	adds	r4, #64	; 0x40
    hi2c->State = HAL_I2C_STATE_READY;
 8002c12:	7013      	strb	r3, [r2, #0]
    hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8002c14:	6862      	ldr	r2, [r4, #4]
 8002c16:	4313      	orrs	r3, r2
 8002c18:	6063      	str	r3, [r4, #4]
    __HAL_UNLOCK(hi2c);
 8002c1a:	2300      	movs	r3, #0
 8002c1c:	7023      	strb	r3, [r4, #0]
 8002c1e:	e7e7      	b.n	8002bf0 <HAL_I2C_IsDeviceReady+0x8c>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002c20:	2320      	movs	r3, #32
 8002c22:	6822      	ldr	r2, [r4, #0]
 8002c24:	61d3      	str	r3, [r2, #28]
        hi2c->State = HAL_I2C_STATE_READY;
 8002c26:	0022      	movs	r2, r4
        __HAL_UNLOCK(hi2c);
 8002c28:	3440      	adds	r4, #64	; 0x40
        hi2c->State = HAL_I2C_STATE_READY;
 8002c2a:	3241      	adds	r2, #65	; 0x41
 8002c2c:	7013      	strb	r3, [r2, #0]
        __HAL_UNLOCK(hi2c);
 8002c2e:	7020      	strb	r0, [r4, #0]
}
 8002c30:	b009      	add	sp, #36	; 0x24
 8002c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002c34:	2200      	movs	r2, #0
 8002c36:	2120      	movs	r1, #32
 8002c38:	0020      	movs	r0, r4
 8002c3a:	f7ff fcab 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002c3e:	1e02      	subs	r2, r0, #0
 8002c40:	d1d6      	bne.n	8002bf0 <HAL_I2C_IsDeviceReady+0x8c>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002c42:	6823      	ldr	r3, [r4, #0]
      if (I2C_Trials == Trials)
 8002c44:	9804      	ldr	r0, [sp, #16]
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8002c46:	61df      	str	r7, [r3, #28]
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002c48:	2720      	movs	r7, #32
 8002c4a:	61df      	str	r7, [r3, #28]
      if (I2C_Trials == Trials)
 8002c4c:	9907      	ldr	r1, [sp, #28]
 8002c4e:	4281      	cmp	r1, r0
 8002c50:	d10e      	bne.n	8002c70 <HAL_I2C_IsDeviceReady+0x10c>
        hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8002c52:	2180      	movs	r1, #128	; 0x80
 8002c54:	6858      	ldr	r0, [r3, #4]
 8002c56:	01c9      	lsls	r1, r1, #7
 8002c58:	4301      	orrs	r1, r0
 8002c5a:	6059      	str	r1, [r3, #4]
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 8002c5c:	0020      	movs	r0, r4
 8002c5e:	9600      	str	r6, [sp, #0]
 8002c60:	002b      	movs	r3, r5
 8002c62:	0039      	movs	r1, r7
 8002c64:	f7ff fc96 	bl	8002594 <I2C_WaitOnFlagUntilTimeout>
 8002c68:	2800      	cmp	r0, #0
 8002c6a:	d1c1      	bne.n	8002bf0 <HAL_I2C_IsDeviceReady+0x8c>
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8002c6c:	6823      	ldr	r3, [r4, #0]
 8002c6e:	61df      	str	r7, [r3, #28]
      I2C_Trials++;
 8002c70:	9b07      	ldr	r3, [sp, #28]
    while (I2C_Trials < Trials);
 8002c72:	9a04      	ldr	r2, [sp, #16]
      I2C_Trials++;
 8002c74:	3301      	adds	r3, #1
 8002c76:	9307      	str	r3, [sp, #28]
    while (I2C_Trials < Trials);
 8002c78:	9b07      	ldr	r3, [sp, #28]
 8002c7a:	429a      	cmp	r2, r3
 8002c7c:	d900      	bls.n	8002c80 <HAL_I2C_IsDeviceReady+0x11c>
 8002c7e:	e792      	b.n	8002ba6 <HAL_I2C_IsDeviceReady+0x42>
 8002c80:	e7c4      	b.n	8002c0c <HAL_I2C_IsDeviceReady+0xa8>
 8002c82:	46c0      	nop			; (mov r8, r8)
 8002c84:	02002000 	.word	0x02002000

08002c88 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8002c88:	b5f0      	push	{r4, r5, r6, r7, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002c8a:	0004      	movs	r4, r0
 8002c8c:	3441      	adds	r4, #65	; 0x41
 8002c8e:	7822      	ldrb	r2, [r4, #0]
{
 8002c90:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002c92:	b2d2      	uxtb	r2, r2

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8002c94:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002c96:	2a20      	cmp	r2, #32
 8002c98:	d118      	bne.n	8002ccc <HAL_I2CEx_ConfigAnalogFilter+0x44>
    __HAL_LOCK(hi2c);
 8002c9a:	001d      	movs	r5, r3
 8002c9c:	3540      	adds	r5, #64	; 0x40
 8002c9e:	782e      	ldrb	r6, [r5, #0]
 8002ca0:	2e01      	cmp	r6, #1
 8002ca2:	d013      	beq.n	8002ccc <HAL_I2CEx_ConfigAnalogFilter+0x44>
    __HAL_I2C_DISABLE(hi2c);
 8002ca4:	681b      	ldr	r3, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002ca6:	3022      	adds	r0, #34	; 0x22
 8002ca8:	7020      	strb	r0, [r4, #0]
    __HAL_I2C_DISABLE(hi2c);
 8002caa:	681e      	ldr	r6, [r3, #0]
 8002cac:	3823      	subs	r0, #35	; 0x23
 8002cae:	4386      	bics	r6, r0
 8002cb0:	601e      	str	r6, [r3, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8002cb2:	681e      	ldr	r6, [r3, #0]
 8002cb4:	4f06      	ldr	r7, [pc, #24]	; (8002cd0 <HAL_I2CEx_ConfigAnalogFilter+0x48>)
 8002cb6:	403e      	ands	r6, r7
 8002cb8:	601e      	str	r6, [r3, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
 8002cba:	681e      	ldr	r6, [r3, #0]
 8002cbc:	4331      	orrs	r1, r6
 8002cbe:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 8002cc0:	6819      	ldr	r1, [r3, #0]
 8002cc2:	4308      	orrs	r0, r1
 8002cc4:	6018      	str	r0, [r3, #0]
    __HAL_UNLOCK(hi2c);
 8002cc6:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8002cc8:	7022      	strb	r2, [r4, #0]
    __HAL_UNLOCK(hi2c);
 8002cca:	7028      	strb	r0, [r5, #0]
  }
}
 8002ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002cce:	46c0      	nop			; (mov r8, r8)
 8002cd0:	ffffefff 	.word	0xffffefff

08002cd4 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8002cd4:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002cd6:	0005      	movs	r5, r0
 8002cd8:	3541      	adds	r5, #65	; 0x41
 8002cda:	782a      	ldrb	r2, [r5, #0]
{
 8002cdc:	0003      	movs	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002cde:	b2d2      	uxtb	r2, r2

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 8002ce0:	2002      	movs	r0, #2
  if (hi2c->State == HAL_I2C_STATE_READY)
 8002ce2:	2a20      	cmp	r2, #32
 8002ce4:	d117      	bne.n	8002d16 <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_LOCK(hi2c);
 8002ce6:	001c      	movs	r4, r3
 8002ce8:	3440      	adds	r4, #64	; 0x40
 8002cea:	7826      	ldrb	r6, [r4, #0]
 8002cec:	2e01      	cmp	r6, #1
 8002cee:	d012      	beq.n	8002d16 <HAL_I2CEx_ConfigDigitalFilter+0x42>
    __HAL_I2C_DISABLE(hi2c);
 8002cf0:	681b      	ldr	r3, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8002cf2:	3022      	adds	r0, #34	; 0x22
 8002cf4:	7028      	strb	r0, [r5, #0]
    __HAL_I2C_DISABLE(hi2c);
 8002cf6:	681e      	ldr	r6, [r3, #0]
 8002cf8:	3823      	subs	r0, #35	; 0x23
 8002cfa:	4386      	bics	r6, r0
 8002cfc:	601e      	str	r6, [r3, #0]
    tmpreg = hi2c->Instance->CR1;
 8002cfe:	681e      	ldr	r6, [r3, #0]
    tmpreg &= ~(I2C_CR1_DNF);
 8002d00:	4f05      	ldr	r7, [pc, #20]	; (8002d18 <HAL_I2CEx_ConfigDigitalFilter+0x44>)
    tmpreg |= DigitalFilter << 8U;
 8002d02:	0209      	lsls	r1, r1, #8
    tmpreg &= ~(I2C_CR1_DNF);
 8002d04:	403e      	ands	r6, r7
    tmpreg |= DigitalFilter << 8U;
 8002d06:	4331      	orrs	r1, r6
    hi2c->Instance->CR1 = tmpreg;
 8002d08:	6019      	str	r1, [r3, #0]
    __HAL_I2C_ENABLE(hi2c);
 8002d0a:	6819      	ldr	r1, [r3, #0]
 8002d0c:	4308      	orrs	r0, r1
 8002d0e:	6018      	str	r0, [r3, #0]
    __HAL_UNLOCK(hi2c);
 8002d10:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8002d12:	702a      	strb	r2, [r5, #0]
    __HAL_UNLOCK(hi2c);
 8002d14:	7020      	strb	r0, [r4, #0]
  }
}
 8002d16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002d18:	fffff0ff 	.word	0xfffff0ff

08002d1c <HAL_I2CEx_EnableFastModePlus>:
  * @note  For all I2C2 pins fast mode plus driving capability can be enabled
  *        only by using I2C_FASTMODEPLUS_I2C2 parameter.
  * @retval None
  */
void HAL_I2CEx_EnableFastModePlus(uint32_t ConfigFastModePlus)
{
 8002d1c:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameter */
  assert_param(IS_I2C_FASTMODEPLUS(ConfigFastModePlus));

  /* Enable SYSCFG clock */
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d1e:	2401      	movs	r4, #1
 8002d20:	4a06      	ldr	r2, [pc, #24]	; (8002d3c <HAL_I2CEx_EnableFastModePlus+0x20>)
 8002d22:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8002d24:	4321      	orrs	r1, r4
 8002d26:	6411      	str	r1, [r2, #64]	; 0x40
 8002d28:	6c13      	ldr	r3, [r2, #64]	; 0x40

  /* Enable fast mode plus driving capability for selected pin */
  SET_BIT(SYSCFG->CFGR1, (uint32_t)ConfigFastModePlus);
 8002d2a:	4a05      	ldr	r2, [pc, #20]	; (8002d40 <HAL_I2CEx_EnableFastModePlus+0x24>)
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002d2c:	4023      	ands	r3, r4
 8002d2e:	9301      	str	r3, [sp, #4]
 8002d30:	9b01      	ldr	r3, [sp, #4]
  SET_BIT(SYSCFG->CFGR1, (uint32_t)ConfigFastModePlus);
 8002d32:	6813      	ldr	r3, [r2, #0]
 8002d34:	4318      	orrs	r0, r3
 8002d36:	6010      	str	r0, [r2, #0]
}
 8002d38:	bd13      	pop	{r0, r1, r4, pc}
 8002d3a:	46c0      	nop			; (mov r8, r8)
 8002d3c:	40021000 	.word	0x40021000
 8002d40:	40010000 	.word	0x40010000

08002d44 <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        6 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 8002d44:	b510      	push	{r4, lr}
  uint32_t wait_loop_index;

  assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));

  /* Modify voltage scaling range */
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8002d46:	4c10      	ldr	r4, [pc, #64]	; (8002d88 <HAL_PWREx_ControlVoltageScaling+0x44>)
 8002d48:	4910      	ldr	r1, [pc, #64]	; (8002d8c <HAL_PWREx_ControlVoltageScaling+0x48>)
 8002d4a:	6823      	ldr	r3, [r4, #0]
{
 8002d4c:	0002      	movs	r2, r0
  MODIFY_REG(PWR->CR1, PWR_CR1_VOS, VoltageScaling);
 8002d4e:	400b      	ands	r3, r1
 8002d50:	4303      	orrs	r3, r0
 8002d52:	6023      	str	r3, [r4, #0]

  /* In case of Range 1 selected, we need to ensure that main regulator reaches new value */
  if(VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8002d54:	2380      	movs	r3, #128	; 0x80
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8002d56:	2000      	movs	r0, #0
  if(VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8002d58:	009b      	lsls	r3, r3, #2
 8002d5a:	429a      	cmp	r2, r3
 8002d5c:	d10c      	bne.n	8002d78 <HAL_PWREx_ControlVoltageScaling+0x34>
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock ) / 1000000U) + 1U;
 8002d5e:	4b0c      	ldr	r3, [pc, #48]	; (8002d90 <HAL_PWREx_ControlVoltageScaling+0x4c>)
 8002d60:	490c      	ldr	r1, [pc, #48]	; (8002d94 <HAL_PWREx_ControlVoltageScaling+0x50>)
 8002d62:	6818      	ldr	r0, [r3, #0]
 8002d64:	2306      	movs	r3, #6
 8002d66:	4358      	muls	r0, r3
 8002d68:	f7fd f9e8 	bl	800013c <__udivsi3>
    while(HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8002d6c:	2280      	movs	r2, #128	; 0x80
    wait_loop_index = ((PWR_VOSF_SETTING_DELAY_6_US * SystemCoreClock ) / 1000000U) + 1U;
 8002d6e:	1c43      	adds	r3, r0, #1
    while(HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8002d70:	00d2      	lsls	r2, r2, #3
 8002d72:	6960      	ldr	r0, [r4, #20]
 8002d74:	4010      	ands	r0, r2
 8002d76:	d100      	bne.n	8002d7a <HAL_PWREx_ControlVoltageScaling+0x36>
}
 8002d78:	bd10      	pop	{r4, pc}
      if(wait_loop_index != 0U)
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d001      	beq.n	8002d82 <HAL_PWREx_ControlVoltageScaling+0x3e>
        wait_loop_index--;
 8002d7e:	3b01      	subs	r3, #1
 8002d80:	e7f7      	b.n	8002d72 <HAL_PWREx_ControlVoltageScaling+0x2e>
        return HAL_TIMEOUT;
 8002d82:	2003      	movs	r0, #3
 8002d84:	e7f8      	b.n	8002d78 <HAL_PWREx_ControlVoltageScaling+0x34>
 8002d86:	46c0      	nop			; (mov r8, r8)
 8002d88:	40007000 	.word	0x40007000
 8002d8c:	fffff9ff 	.word	0xfffff9ff
 8002d90:	20000008 	.word	0x20000008
 8002d94:	000f4240 	.word	0x000f4240

08002d98 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to LSE Off
  *         first and then to LSE On or LSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002d98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d9a:	0004      	movs	r4, r0
 8002d9c:	b085      	sub	sp, #20
  uint32_t tickstart;
  uint32_t temp_sysclksrc;
  uint32_t temp_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8002d9e:	2800      	cmp	r0, #0
 8002da0:	d102      	bne.n	8002da8 <HAL_RCC_OscConfig+0x10>
  {
    return HAL_ERROR;
 8002da2:	2001      	movs	r0, #1
        }
      }
    }
  }
  return HAL_OK;
}
 8002da4:	b005      	add	sp, #20
 8002da6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002da8:	6803      	ldr	r3, [r0, #0]
 8002daa:	07db      	lsls	r3, r3, #31
 8002dac:	d410      	bmi.n	8002dd0 <HAL_RCC_OscConfig+0x38>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002dae:	6823      	ldr	r3, [r4, #0]
 8002db0:	079b      	lsls	r3, r3, #30
 8002db2:	d45c      	bmi.n	8002e6e <HAL_RCC_OscConfig+0xd6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002db4:	6823      	ldr	r3, [r4, #0]
 8002db6:	071b      	lsls	r3, r3, #28
 8002db8:	d500      	bpl.n	8002dbc <HAL_RCC_OscConfig+0x24>
 8002dba:	e0c2      	b.n	8002f42 <HAL_RCC_OscConfig+0x1aa>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002dbc:	6823      	ldr	r3, [r4, #0]
 8002dbe:	075b      	lsls	r3, r3, #29
 8002dc0:	d500      	bpl.n	8002dc4 <HAL_RCC_OscConfig+0x2c>
 8002dc2:	e0f4      	b.n	8002fae <HAL_RCC_OscConfig+0x216>
  if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8002dc4:	69e2      	ldr	r2, [r4, #28]
 8002dc6:	2a00      	cmp	r2, #0
 8002dc8:	d000      	beq.n	8002dcc <HAL_RCC_OscConfig+0x34>
 8002dca:	e173      	b.n	80030b4 <HAL_RCC_OscConfig+0x31c>
  return HAL_OK;
 8002dcc:	2000      	movs	r0, #0
 8002dce:	e7e9      	b.n	8002da4 <HAL_RCC_OscConfig+0xc>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002dd0:	2238      	movs	r2, #56	; 0x38
 8002dd2:	4dac      	ldr	r5, [pc, #688]	; (8003084 <HAL_RCC_OscConfig+0x2ec>)
 8002dd4:	68ab      	ldr	r3, [r5, #8]
 8002dd6:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002dd8:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sysclksrc == RCC_CFGR_SWS_HSE))
 8002dda:	2b10      	cmp	r3, #16
 8002ddc:	d109      	bne.n	8002df2 <HAL_RCC_OscConfig+0x5a>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002dde:	43d2      	mvns	r2, r2
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sysclksrc == RCC_CFGR_SWS_HSE))
 8002de0:	0793      	lsls	r3, r2, #30
 8002de2:	d108      	bne.n	8002df6 <HAL_RCC_OscConfig+0x5e>
      if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002de4:	682b      	ldr	r3, [r5, #0]
 8002de6:	039b      	lsls	r3, r3, #14
 8002de8:	d5e1      	bpl.n	8002dae <HAL_RCC_OscConfig+0x16>
 8002dea:	6863      	ldr	r3, [r4, #4]
 8002dec:	2b00      	cmp	r3, #0
 8002dee:	d1de      	bne.n	8002dae <HAL_RCC_OscConfig+0x16>
 8002df0:	e7d7      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sysclksrc == RCC_CFGR_SWS_HSE))
 8002df2:	2b08      	cmp	r3, #8
 8002df4:	d0f6      	beq.n	8002de4 <HAL_RCC_OscConfig+0x4c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002df6:	2280      	movs	r2, #128	; 0x80
 8002df8:	6863      	ldr	r3, [r4, #4]
 8002dfa:	0252      	lsls	r2, r2, #9
 8002dfc:	4293      	cmp	r3, r2
 8002dfe:	d111      	bne.n	8002e24 <HAL_RCC_OscConfig+0x8c>
 8002e00:	682a      	ldr	r2, [r5, #0]
 8002e02:	4313      	orrs	r3, r2
 8002e04:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002e06:	f7ff fa47 	bl	8002298 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002e0a:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 8002e0c:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8002e0e:	02b6      	lsls	r6, r6, #10
 8002e10:	682b      	ldr	r3, [r5, #0]
 8002e12:	4233      	tst	r3, r6
 8002e14:	d1cb      	bne.n	8002dae <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002e16:	f7ff fa3f 	bl	8002298 <HAL_GetTick>
 8002e1a:	1bc0      	subs	r0, r0, r7
 8002e1c:	2864      	cmp	r0, #100	; 0x64
 8002e1e:	d9f7      	bls.n	8002e10 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
 8002e20:	2003      	movs	r0, #3
 8002e22:	e7bf      	b.n	8002da4 <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002e24:	21a0      	movs	r1, #160	; 0xa0
 8002e26:	02c9      	lsls	r1, r1, #11
 8002e28:	428b      	cmp	r3, r1
 8002e2a:	d108      	bne.n	8002e3e <HAL_RCC_OscConfig+0xa6>
 8002e2c:	2380      	movs	r3, #128	; 0x80
 8002e2e:	6829      	ldr	r1, [r5, #0]
 8002e30:	02db      	lsls	r3, r3, #11
 8002e32:	430b      	orrs	r3, r1
 8002e34:	602b      	str	r3, [r5, #0]
 8002e36:	682b      	ldr	r3, [r5, #0]
 8002e38:	431a      	orrs	r2, r3
 8002e3a:	602a      	str	r2, [r5, #0]
 8002e3c:	e7e3      	b.n	8002e06 <HAL_RCC_OscConfig+0x6e>
 8002e3e:	682a      	ldr	r2, [r5, #0]
 8002e40:	4991      	ldr	r1, [pc, #580]	; (8003088 <HAL_RCC_OscConfig+0x2f0>)
 8002e42:	400a      	ands	r2, r1
 8002e44:	602a      	str	r2, [r5, #0]
 8002e46:	682a      	ldr	r2, [r5, #0]
 8002e48:	4990      	ldr	r1, [pc, #576]	; (800308c <HAL_RCC_OscConfig+0x2f4>)
 8002e4a:	400a      	ands	r2, r1
 8002e4c:	602a      	str	r2, [r5, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d1d9      	bne.n	8002e06 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8002e52:	f7ff fa21 	bl	8002298 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002e56:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 8002e58:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8002e5a:	02b6      	lsls	r6, r6, #10
 8002e5c:	682b      	ldr	r3, [r5, #0]
 8002e5e:	4233      	tst	r3, r6
 8002e60:	d0a5      	beq.n	8002dae <HAL_RCC_OscConfig+0x16>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8002e62:	f7ff fa19 	bl	8002298 <HAL_GetTick>
 8002e66:	1bc0      	subs	r0, r0, r7
 8002e68:	2864      	cmp	r0, #100	; 0x64
 8002e6a:	d9f7      	bls.n	8002e5c <HAL_RCC_OscConfig+0xc4>
 8002e6c:	e7d8      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
    temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8002e6e:	2338      	movs	r3, #56	; 0x38
 8002e70:	4d84      	ldr	r5, [pc, #528]	; (8003084 <HAL_RCC_OscConfig+0x2ec>)
 8002e72:	68aa      	ldr	r2, [r5, #8]
 8002e74:	4013      	ands	r3, r2
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002e76:	68ea      	ldr	r2, [r5, #12]
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sysclksrc == RCC_CFGR_SWS_HSI))
 8002e78:	2b10      	cmp	r3, #16
 8002e7a:	d129      	bne.n	8002ed0 <HAL_RCC_OscConfig+0x138>
    temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002e7c:	2103      	movs	r1, #3
 8002e7e:	400a      	ands	r2, r1
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sysclksrc == RCC_CFGR_SWS_HSI))
 8002e80:	2a02      	cmp	r2, #2
 8002e82:	d127      	bne.n	8002ed4 <HAL_RCC_OscConfig+0x13c>
      if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8002e84:	682a      	ldr	r2, [r5, #0]
 8002e86:	0552      	lsls	r2, r2, #21
 8002e88:	d503      	bpl.n	8002e92 <HAL_RCC_OscConfig+0xfa>
 8002e8a:	68e2      	ldr	r2, [r4, #12]
 8002e8c:	2a00      	cmp	r2, #0
 8002e8e:	d100      	bne.n	8002e92 <HAL_RCC_OscConfig+0xfa>
 8002e90:	e787      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002e92:	6869      	ldr	r1, [r5, #4]
 8002e94:	6962      	ldr	r2, [r4, #20]
 8002e96:	487e      	ldr	r0, [pc, #504]	; (8003090 <HAL_RCC_OscConfig+0x2f8>)
 8002e98:	0212      	lsls	r2, r2, #8
 8002e9a:	4001      	ands	r1, r0
 8002e9c:	430a      	orrs	r2, r1
 8002e9e:	606a      	str	r2, [r5, #4]
        if (temp_sysclksrc == RCC_CFGR_SWS_HSI)
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d10d      	bne.n	8002ec0 <HAL_RCC_OscConfig+0x128>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002ea4:	682b      	ldr	r3, [r5, #0]
 8002ea6:	4a7b      	ldr	r2, [pc, #492]	; (8003094 <HAL_RCC_OscConfig+0x2fc>)
 8002ea8:	4013      	ands	r3, r2
 8002eaa:	6922      	ldr	r2, [r4, #16]
 8002eac:	4313      	orrs	r3, r2
 8002eae:	602b      	str	r3, [r5, #0]
          SystemCoreClock = (HSI_VALUE / (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos)));
 8002eb0:	682b      	ldr	r3, [r5, #0]
 8002eb2:	4a79      	ldr	r2, [pc, #484]	; (8003098 <HAL_RCC_OscConfig+0x300>)
 8002eb4:	049b      	lsls	r3, r3, #18
 8002eb6:	0f5b      	lsrs	r3, r3, #29
 8002eb8:	40da      	lsrs	r2, r3
 8002eba:	0013      	movs	r3, r2
 8002ebc:	4a77      	ldr	r2, [pc, #476]	; (800309c <HAL_RCC_OscConfig+0x304>)
 8002ebe:	6013      	str	r3, [r2, #0]
        if (HAL_InitTick(uwTickPrio) != HAL_OK)
 8002ec0:	4b77      	ldr	r3, [pc, #476]	; (80030a0 <HAL_RCC_OscConfig+0x308>)
 8002ec2:	6818      	ldr	r0, [r3, #0]
 8002ec4:	f7ff f9a0 	bl	8002208 <HAL_InitTick>
 8002ec8:	2800      	cmp	r0, #0
 8002eca:	d100      	bne.n	8002ece <HAL_RCC_OscConfig+0x136>
 8002ecc:	e772      	b.n	8002db4 <HAL_RCC_OscConfig+0x1c>
 8002ece:	e768      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
    if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sysclksrc == RCC_CFGR_SWS_HSI))
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d0d7      	beq.n	8002e84 <HAL_RCC_OscConfig+0xec>
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8002ed4:	68e3      	ldr	r3, [r4, #12]
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d020      	beq.n	8002f1c <HAL_RCC_OscConfig+0x184>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002eda:	682b      	ldr	r3, [r5, #0]
 8002edc:	4a6d      	ldr	r2, [pc, #436]	; (8003094 <HAL_RCC_OscConfig+0x2fc>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002ede:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002ee0:	4013      	ands	r3, r2
 8002ee2:	6922      	ldr	r2, [r4, #16]
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002ee4:	00f6      	lsls	r6, r6, #3
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIDiv);
 8002ee6:	4313      	orrs	r3, r2
 8002ee8:	602b      	str	r3, [r5, #0]
        __HAL_RCC_HSI_ENABLE();
 8002eea:	2380      	movs	r3, #128	; 0x80
 8002eec:	682a      	ldr	r2, [r5, #0]
 8002eee:	005b      	lsls	r3, r3, #1
 8002ef0:	4313      	orrs	r3, r2
 8002ef2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002ef4:	f7ff f9d0 	bl	8002298 <HAL_GetTick>
 8002ef8:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8002efa:	682b      	ldr	r3, [r5, #0]
 8002efc:	4233      	tst	r3, r6
 8002efe:	d007      	beq.n	8002f10 <HAL_RCC_OscConfig+0x178>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002f00:	686a      	ldr	r2, [r5, #4]
 8002f02:	6963      	ldr	r3, [r4, #20]
 8002f04:	4962      	ldr	r1, [pc, #392]	; (8003090 <HAL_RCC_OscConfig+0x2f8>)
 8002f06:	021b      	lsls	r3, r3, #8
 8002f08:	400a      	ands	r2, r1
 8002f0a:	4313      	orrs	r3, r2
 8002f0c:	606b      	str	r3, [r5, #4]
 8002f0e:	e751      	b.n	8002db4 <HAL_RCC_OscConfig+0x1c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002f10:	f7ff f9c2 	bl	8002298 <HAL_GetTick>
 8002f14:	1bc0      	subs	r0, r0, r7
 8002f16:	2802      	cmp	r0, #2
 8002f18:	d9ef      	bls.n	8002efa <HAL_RCC_OscConfig+0x162>
 8002f1a:	e781      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
 8002f1c:	682b      	ldr	r3, [r5, #0]
 8002f1e:	4a61      	ldr	r2, [pc, #388]	; (80030a4 <HAL_RCC_OscConfig+0x30c>)
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002f20:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_HSI_DISABLE();
 8002f22:	4013      	ands	r3, r2
 8002f24:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8002f26:	f7ff f9b7 	bl	8002298 <HAL_GetTick>
 8002f2a:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8002f2c:	00f6      	lsls	r6, r6, #3
 8002f2e:	682b      	ldr	r3, [r5, #0]
 8002f30:	4233      	tst	r3, r6
 8002f32:	d100      	bne.n	8002f36 <HAL_RCC_OscConfig+0x19e>
 8002f34:	e73e      	b.n	8002db4 <HAL_RCC_OscConfig+0x1c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8002f36:	f7ff f9af 	bl	8002298 <HAL_GetTick>
 8002f3a:	1bc0      	subs	r0, r0, r7
 8002f3c:	2802      	cmp	r0, #2
 8002f3e:	d9f6      	bls.n	8002f2e <HAL_RCC_OscConfig+0x196>
 8002f40:	e76e      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSI)
 8002f42:	2138      	movs	r1, #56	; 0x38
 8002f44:	4b4f      	ldr	r3, [pc, #316]	; (8003084 <HAL_RCC_OscConfig+0x2ec>)
 8002f46:	689a      	ldr	r2, [r3, #8]
 8002f48:	001d      	movs	r5, r3
 8002f4a:	400a      	ands	r2, r1
 8002f4c:	2a18      	cmp	r2, #24
 8002f4e:	d108      	bne.n	8002f62 <HAL_RCC_OscConfig+0x1ca>
      if ((((RCC->CSR) & RCC_CSR_LSIRDY) != 0U) && (RCC_OscInitStruct->LSIState == RCC_LSI_OFF))
 8002f50:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002f52:	079b      	lsls	r3, r3, #30
 8002f54:	d400      	bmi.n	8002f58 <HAL_RCC_OscConfig+0x1c0>
 8002f56:	e731      	b.n	8002dbc <HAL_RCC_OscConfig+0x24>
 8002f58:	69a3      	ldr	r3, [r4, #24]
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d000      	beq.n	8002f60 <HAL_RCC_OscConfig+0x1c8>
 8002f5e:	e72d      	b.n	8002dbc <HAL_RCC_OscConfig+0x24>
 8002f60:	e71f      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
      if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002f62:	69a2      	ldr	r2, [r4, #24]
 8002f64:	2301      	movs	r3, #1
 8002f66:	2a00      	cmp	r2, #0
 8002f68:	d010      	beq.n	8002f8c <HAL_RCC_OscConfig+0x1f4>
        __HAL_RCC_LSI_ENABLE();
 8002f6a:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8002f6c:	2602      	movs	r6, #2
        __HAL_RCC_LSI_ENABLE();
 8002f6e:	4313      	orrs	r3, r2
 8002f70:	662b      	str	r3, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8002f72:	f7ff f991 	bl	8002298 <HAL_GetTick>
 8002f76:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8002f78:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002f7a:	4233      	tst	r3, r6
 8002f7c:	d000      	beq.n	8002f80 <HAL_RCC_OscConfig+0x1e8>
 8002f7e:	e71d      	b.n	8002dbc <HAL_RCC_OscConfig+0x24>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002f80:	f7ff f98a 	bl	8002298 <HAL_GetTick>
 8002f84:	1bc0      	subs	r0, r0, r7
 8002f86:	2802      	cmp	r0, #2
 8002f88:	d9f6      	bls.n	8002f78 <HAL_RCC_OscConfig+0x1e0>
 8002f8a:	e749      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_LSI_DISABLE();
 8002f8c:	6e2a      	ldr	r2, [r5, #96]	; 0x60
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8002f8e:	2602      	movs	r6, #2
        __HAL_RCC_LSI_DISABLE();
 8002f90:	439a      	bics	r2, r3
 8002f92:	662a      	str	r2, [r5, #96]	; 0x60
        tickstart = HAL_GetTick();
 8002f94:	f7ff f980 	bl	8002298 <HAL_GetTick>
 8002f98:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8002f9a:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002f9c:	4233      	tst	r3, r6
 8002f9e:	d100      	bne.n	8002fa2 <HAL_RCC_OscConfig+0x20a>
 8002fa0:	e70c      	b.n	8002dbc <HAL_RCC_OscConfig+0x24>
          if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8002fa2:	f7ff f979 	bl	8002298 <HAL_GetTick>
 8002fa6:	1bc0      	subs	r0, r0, r7
 8002fa8:	2802      	cmp	r0, #2
 8002faa:	d9f6      	bls.n	8002f9a <HAL_RCC_OscConfig+0x202>
 8002fac:	e738      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSE)
 8002fae:	2138      	movs	r1, #56	; 0x38
 8002fb0:	4b34      	ldr	r3, [pc, #208]	; (8003084 <HAL_RCC_OscConfig+0x2ec>)
 8002fb2:	689a      	ldr	r2, [r3, #8]
 8002fb4:	001d      	movs	r5, r3
 8002fb6:	400a      	ands	r2, r1
 8002fb8:	2a20      	cmp	r2, #32
 8002fba:	d108      	bne.n	8002fce <HAL_RCC_OscConfig+0x236>
      if ((((RCC->BDCR) & RCC_BDCR_LSERDY) != 0U) && (RCC_OscInitStruct->LSEState == RCC_LSE_OFF))
 8002fbc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002fbe:	079b      	lsls	r3, r3, #30
 8002fc0:	d400      	bmi.n	8002fc4 <HAL_RCC_OscConfig+0x22c>
 8002fc2:	e6ff      	b.n	8002dc4 <HAL_RCC_OscConfig+0x2c>
 8002fc4:	68a3      	ldr	r3, [r4, #8]
 8002fc6:	2b00      	cmp	r3, #0
 8002fc8:	d000      	beq.n	8002fcc <HAL_RCC_OscConfig+0x234>
 8002fca:	e6fb      	b.n	8002dc4 <HAL_RCC_OscConfig+0x2c>
 8002fcc:	e6e9      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
      if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8002fce:	2280      	movs	r2, #128	; 0x80
 8002fd0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002fd2:	0552      	lsls	r2, r2, #21
 8002fd4:	4213      	tst	r3, r2
 8002fd6:	d100      	bne.n	8002fda <HAL_RCC_OscConfig+0x242>
 8002fd8:	e0f6      	b.n	80031c8 <HAL_RCC_OscConfig+0x430>
    FlagStatus       pwrclkchanged = RESET;
 8002fda:	2300      	movs	r3, #0
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002fdc:	2780      	movs	r7, #128	; 0x80
 8002fde:	4e32      	ldr	r6, [pc, #200]	; (80030a8 <HAL_RCC_OscConfig+0x310>)
    FlagStatus       pwrclkchanged = RESET;
 8002fe0:	9300      	str	r3, [sp, #0]
      if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8002fe2:	6833      	ldr	r3, [r6, #0]
 8002fe4:	007f      	lsls	r7, r7, #1
 8002fe6:	423b      	tst	r3, r7
 8002fe8:	d015      	beq.n	8003016 <HAL_RCC_OscConfig+0x27e>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002fea:	68a3      	ldr	r3, [r4, #8]
 8002fec:	2b01      	cmp	r3, #1
 8002fee:	d122      	bne.n	8003036 <HAL_RCC_OscConfig+0x29e>
 8002ff0:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8002ff2:	4313      	orrs	r3, r2
 8002ff4:	65eb      	str	r3, [r5, #92]	; 0x5c
        tickstart = HAL_GetTick();
 8002ff6:	f7ff f94f 	bl	8002298 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002ffa:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8002ffc:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8002ffe:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8003000:	423b      	tst	r3, r7
 8003002:	d038      	beq.n	8003076 <HAL_RCC_OscConfig+0x2de>
      if (pwrclkchanged == SET)
 8003004:	9b00      	ldr	r3, [sp, #0]
 8003006:	2b01      	cmp	r3, #1
 8003008:	d000      	beq.n	800300c <HAL_RCC_OscConfig+0x274>
 800300a:	e6db      	b.n	8002dc4 <HAL_RCC_OscConfig+0x2c>
        __HAL_RCC_PWR_CLK_DISABLE();
 800300c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 800300e:	4a27      	ldr	r2, [pc, #156]	; (80030ac <HAL_RCC_OscConfig+0x314>)
 8003010:	4013      	ands	r3, r2
 8003012:	63eb      	str	r3, [r5, #60]	; 0x3c
 8003014:	e6d6      	b.n	8002dc4 <HAL_RCC_OscConfig+0x2c>
        SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8003016:	6833      	ldr	r3, [r6, #0]
 8003018:	433b      	orrs	r3, r7
 800301a:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800301c:	f7ff f93c 	bl	8002298 <HAL_GetTick>
 8003020:	9001      	str	r0, [sp, #4]
        while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8003022:	6833      	ldr	r3, [r6, #0]
 8003024:	423b      	tst	r3, r7
 8003026:	d1e0      	bne.n	8002fea <HAL_RCC_OscConfig+0x252>
          if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003028:	f7ff f936 	bl	8002298 <HAL_GetTick>
 800302c:	9b01      	ldr	r3, [sp, #4]
 800302e:	1ac0      	subs	r0, r0, r3
 8003030:	2802      	cmp	r0, #2
 8003032:	d9f6      	bls.n	8003022 <HAL_RCC_OscConfig+0x28a>
 8003034:	e6f4      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003036:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003038:	2b05      	cmp	r3, #5
 800303a:	d105      	bne.n	8003048 <HAL_RCC_OscConfig+0x2b0>
 800303c:	3b01      	subs	r3, #1
 800303e:	4313      	orrs	r3, r2
 8003040:	65eb      	str	r3, [r5, #92]	; 0x5c
 8003042:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003044:	2301      	movs	r3, #1
 8003046:	e7d4      	b.n	8002ff2 <HAL_RCC_OscConfig+0x25a>
 8003048:	2101      	movs	r1, #1
 800304a:	438a      	bics	r2, r1
 800304c:	65ea      	str	r2, [r5, #92]	; 0x5c
 800304e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003050:	3103      	adds	r1, #3
 8003052:	438a      	bics	r2, r1
 8003054:	65ea      	str	r2, [r5, #92]	; 0x5c
      if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003056:	2b00      	cmp	r3, #0
 8003058:	d1cd      	bne.n	8002ff6 <HAL_RCC_OscConfig+0x25e>
        tickstart = HAL_GetTick();
 800305a:	f7ff f91d 	bl	8002298 <HAL_GetTick>
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 800305e:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8003060:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8003062:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8003064:	423b      	tst	r3, r7
 8003066:	d0cd      	beq.n	8003004 <HAL_RCC_OscConfig+0x26c>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8003068:	f7ff f916 	bl	8002298 <HAL_GetTick>
 800306c:	4b10      	ldr	r3, [pc, #64]	; (80030b0 <HAL_RCC_OscConfig+0x318>)
 800306e:	1b80      	subs	r0, r0, r6
 8003070:	4298      	cmp	r0, r3
 8003072:	d9f6      	bls.n	8003062 <HAL_RCC_OscConfig+0x2ca>
 8003074:	e6d4      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8003076:	f7ff f90f 	bl	8002298 <HAL_GetTick>
 800307a:	4b0d      	ldr	r3, [pc, #52]	; (80030b0 <HAL_RCC_OscConfig+0x318>)
 800307c:	1b80      	subs	r0, r0, r6
 800307e:	4298      	cmp	r0, r3
 8003080:	d9bd      	bls.n	8002ffe <HAL_RCC_OscConfig+0x266>
 8003082:	e6cd      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
 8003084:	40021000 	.word	0x40021000
 8003088:	fffeffff 	.word	0xfffeffff
 800308c:	fffbffff 	.word	0xfffbffff
 8003090:	ffff80ff 	.word	0xffff80ff
 8003094:	ffffc7ff 	.word	0xffffc7ff
 8003098:	00f42400 	.word	0x00f42400
 800309c:	20000008 	.word	0x20000008
 80030a0:	20000004 	.word	0x20000004
 80030a4:	fffffeff 	.word	0xfffffeff
 80030a8:	40007000 	.word	0x40007000
 80030ac:	efffffff 	.word	0xefffffff
 80030b0:	00001388 	.word	0x00001388
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80030b4:	2038      	movs	r0, #56	; 0x38
 80030b6:	4b49      	ldr	r3, [pc, #292]	; (80031dc <HAL_RCC_OscConfig+0x444>)
 80030b8:	6899      	ldr	r1, [r3, #8]
 80030ba:	001d      	movs	r5, r3
 80030bc:	4001      	ands	r1, r0
 80030be:	2910      	cmp	r1, #16
 80030c0:	d054      	beq.n	800316c <HAL_RCC_OscConfig+0x3d4>
        __HAL_RCC_PLL_DISABLE();
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	4946      	ldr	r1, [pc, #280]	; (80031e0 <HAL_RCC_OscConfig+0x448>)
 80030c6:	400b      	ands	r3, r1
 80030c8:	602b      	str	r3, [r5, #0]
      if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80030ca:	2a02      	cmp	r2, #2
 80030cc:	d137      	bne.n	800313e <HAL_RCC_OscConfig+0x3a6>
        tickstart = HAL_GetTick();
 80030ce:	f7ff f8e3 	bl	8002298 <HAL_GetTick>
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80030d2:	2680      	movs	r6, #128	; 0x80
        tickstart = HAL_GetTick();
 80030d4:	0007      	movs	r7, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 80030d6:	04b6      	lsls	r6, r6, #18
 80030d8:	682b      	ldr	r3, [r5, #0]
 80030da:	4233      	tst	r3, r6
 80030dc:	d129      	bne.n	8003132 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030de:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80030e0:	6a23      	ldr	r3, [r4, #32]
 80030e2:	68ea      	ldr	r2, [r5, #12]
 80030e4:	430b      	orrs	r3, r1
 80030e6:	493f      	ldr	r1, [pc, #252]	; (80031e4 <HAL_RCC_OscConfig+0x44c>)
 80030e8:	400a      	ands	r2, r1
 80030ea:	4313      	orrs	r3, r2
 80030ec:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80030ee:	4313      	orrs	r3, r2
 80030f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80030f2:	4313      	orrs	r3, r2
 80030f4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80030f6:	4313      	orrs	r3, r2
 80030f8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 80030fa:	2480      	movs	r4, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80030fc:	0212      	lsls	r2, r2, #8
 80030fe:	4313      	orrs	r3, r2
 8003100:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLL_ENABLE();
 8003102:	2380      	movs	r3, #128	; 0x80
 8003104:	682a      	ldr	r2, [r5, #0]
 8003106:	045b      	lsls	r3, r3, #17
 8003108:	4313      	orrs	r3, r2
 800310a:	602b      	str	r3, [r5, #0]
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLRCLK);
 800310c:	2380      	movs	r3, #128	; 0x80
 800310e:	68ea      	ldr	r2, [r5, #12]
 8003110:	055b      	lsls	r3, r3, #21
 8003112:	4313      	orrs	r3, r2
 8003114:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 8003116:	f7ff f8bf 	bl	8002298 <HAL_GetTick>
 800311a:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800311c:	04a4      	lsls	r4, r4, #18
 800311e:	682b      	ldr	r3, [r5, #0]
 8003120:	4223      	tst	r3, r4
 8003122:	d000      	beq.n	8003126 <HAL_RCC_OscConfig+0x38e>
 8003124:	e652      	b.n	8002dcc <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003126:	f7ff f8b7 	bl	8002298 <HAL_GetTick>
 800312a:	1b80      	subs	r0, r0, r6
 800312c:	2802      	cmp	r0, #2
 800312e:	d9f6      	bls.n	800311e <HAL_RCC_OscConfig+0x386>
 8003130:	e676      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003132:	f7ff f8b1 	bl	8002298 <HAL_GetTick>
 8003136:	1bc0      	subs	r0, r0, r7
 8003138:	2802      	cmp	r0, #2
 800313a:	d9cd      	bls.n	80030d8 <HAL_RCC_OscConfig+0x340>
 800313c:	e670      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
        MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PLLSOURCE_NONE);
 800313e:	2203      	movs	r2, #3
 8003140:	68eb      	ldr	r3, [r5, #12]
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8003142:	2480      	movs	r4, #128	; 0x80
        MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PLLSOURCE_NONE);
 8003144:	4393      	bics	r3, r2
 8003146:	60eb      	str	r3, [r5, #12]
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLQEN | RCC_PLLCFGR_PLLREN);
 8003148:	68eb      	ldr	r3, [r5, #12]
 800314a:	4a27      	ldr	r2, [pc, #156]	; (80031e8 <HAL_RCC_OscConfig+0x450>)
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 800314c:	04a4      	lsls	r4, r4, #18
        __HAL_RCC_PLLCLKOUT_DISABLE(RCC_PLLCFGR_PLLPEN | RCC_PLLCFGR_PLLQEN | RCC_PLLCFGR_PLLREN);
 800314e:	4013      	ands	r3, r2
 8003150:	60eb      	str	r3, [r5, #12]
        tickstart = HAL_GetTick();
 8003152:	f7ff f8a1 	bl	8002298 <HAL_GetTick>
 8003156:	0006      	movs	r6, r0
        while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8003158:	682b      	ldr	r3, [r5, #0]
 800315a:	4223      	tst	r3, r4
 800315c:	d100      	bne.n	8003160 <HAL_RCC_OscConfig+0x3c8>
 800315e:	e635      	b.n	8002dcc <HAL_RCC_OscConfig+0x34>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8003160:	f7ff f89a 	bl	8002298 <HAL_GetTick>
 8003164:	1b80      	subs	r0, r0, r6
 8003166:	2802      	cmp	r0, #2
 8003168:	d9f6      	bls.n	8003158 <HAL_RCC_OscConfig+0x3c0>
 800316a:	e659      	b.n	8002e20 <HAL_RCC_OscConfig+0x88>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800316c:	2a01      	cmp	r2, #1
 800316e:	d100      	bne.n	8003172 <HAL_RCC_OscConfig+0x3da>
 8003170:	e617      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
        temp_pllckcfg = RCC->PLLCFGR;
 8003172:	68d8      	ldr	r0, [r3, #12]
        if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003174:	2303      	movs	r3, #3
 8003176:	6a22      	ldr	r2, [r4, #32]
 8003178:	4003      	ands	r3, r0
 800317a:	4293      	cmp	r3, r2
 800317c:	d000      	beq.n	8003180 <HAL_RCC_OscConfig+0x3e8>
 800317e:	e610      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003180:	2370      	movs	r3, #112	; 0x70
        if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003182:	6a62      	ldr	r2, [r4, #36]	; 0x24
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003184:	4003      	ands	r3, r0
        if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003186:	4293      	cmp	r3, r2
 8003188:	d000      	beq.n	800318c <HAL_RCC_OscConfig+0x3f4>
 800318a:	e60a      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800318c:	22fe      	movs	r2, #254	; 0xfe
 800318e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8003190:	01d2      	lsls	r2, r2, #7
 8003192:	4002      	ands	r2, r0
 8003194:	021b      	lsls	r3, r3, #8
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8003196:	429a      	cmp	r2, r3
 8003198:	d000      	beq.n	800319c <HAL_RCC_OscConfig+0x404>
 800319a:	e602      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800319c:	23f8      	movs	r3, #248	; 0xf8
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800319e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80031a0:	039b      	lsls	r3, r3, #14
 80031a2:	4003      	ands	r3, r0
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80031a4:	4293      	cmp	r3, r2
 80031a6:	d000      	beq.n	80031aa <HAL_RCC_OscConfig+0x412>
 80031a8:	e5fb      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80031aa:	23e0      	movs	r3, #224	; 0xe0
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80031ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80031ae:	051b      	lsls	r3, r3, #20
 80031b0:	4003      	ands	r3, r0
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80031b2:	4293      	cmp	r3, r2
 80031b4:	d000      	beq.n	80031b8 <HAL_RCC_OscConfig+0x420>
 80031b6:	e5f4      	b.n	8002da2 <HAL_RCC_OscConfig+0xa>
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80031b8:	6b63      	ldr	r3, [r4, #52]	; 0x34
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != RCC_OscInitStruct->PLL.PLLR))
 80031ba:	0f40      	lsrs	r0, r0, #29
 80031bc:	0740      	lsls	r0, r0, #29
           (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ) ||
 80031be:	1ac0      	subs	r0, r0, r3
 80031c0:	1e43      	subs	r3, r0, #1
 80031c2:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 80031c4:	b2c0      	uxtb	r0, r0
 80031c6:	e5ed      	b.n	8002da4 <HAL_RCC_OscConfig+0xc>
        __HAL_RCC_PWR_CLK_ENABLE();
 80031c8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80031ca:	4313      	orrs	r3, r2
 80031cc:	63eb      	str	r3, [r5, #60]	; 0x3c
 80031ce:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 80031d0:	4013      	ands	r3, r2
 80031d2:	9303      	str	r3, [sp, #12]
 80031d4:	9b03      	ldr	r3, [sp, #12]
        pwrclkchanged = SET;
 80031d6:	2301      	movs	r3, #1
 80031d8:	e700      	b.n	8002fdc <HAL_RCC_OscConfig+0x244>
 80031da:	46c0      	nop			; (mov r8, r8)
 80031dc:	40021000 	.word	0x40021000
 80031e0:	feffffff 	.word	0xfeffffff
 80031e4:	11c1808c 	.word	0x11c1808c
 80031e8:	eefeffff 	.word	0xeefeffff

080031ec <HAL_RCC_GetSysClockFreq>:
uint32_t HAL_RCC_GetSysClockFreq(void)
{
  uint32_t pllvco, pllsource, pllr, pllm, hsidiv;
  uint32_t sysclockfreq;

  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 80031ec:	2338      	movs	r3, #56	; 0x38
 80031ee:	4a1f      	ldr	r2, [pc, #124]	; (800326c <HAL_RCC_GetSysClockFreq+0x80>)
{
 80031f0:	b570      	push	{r4, r5, r6, lr}
  if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 80031f2:	6891      	ldr	r1, [r2, #8]
 80031f4:	0014      	movs	r4, r2
 80031f6:	4219      	tst	r1, r3
 80031f8:	d108      	bne.n	800320c <HAL_RCC_GetSysClockFreq+0x20>
  {
    /* HSISYS can be derived for HSI16 */
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 80031fa:	2101      	movs	r1, #1
 80031fc:	6813      	ldr	r3, [r2, #0]

    /* HSI used as system clock source */
    sysclockfreq = (HSI_VALUE / hsidiv);
 80031fe:	481c      	ldr	r0, [pc, #112]	; (8003270 <HAL_RCC_GetSysClockFreq+0x84>)
    hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV)) >> RCC_CR_HSIDIV_Pos));
 8003200:	049b      	lsls	r3, r3, #18
 8003202:	0f5b      	lsrs	r3, r3, #29
 8003204:	4099      	lsls	r1, r3
      default:                 /* HSI16 used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
        break;
    }
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
    sysclockfreq = pllvco / pllr;
 8003206:	f7fc ff99 	bl	800013c <__udivsi3>
  {
    sysclockfreq = 0U;
  }

  return sysclockfreq;
}
 800320a:	bd70      	pop	{r4, r5, r6, pc}
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 800320c:	6891      	ldr	r1, [r2, #8]
 800320e:	4019      	ands	r1, r3
 8003210:	2908      	cmp	r1, #8
 8003212:	d025      	beq.n	8003260 <HAL_RCC_GetSysClockFreq+0x74>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
 8003214:	6891      	ldr	r1, [r2, #8]
 8003216:	4019      	ands	r1, r3
 8003218:	2910      	cmp	r1, #16
 800321a:	d115      	bne.n	8003248 <HAL_RCC_GetSysClockFreq+0x5c>
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 800321c:	68d3      	ldr	r3, [r2, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 800321e:	68d1      	ldr	r1, [r2, #12]
    pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 8003220:	43db      	mvns	r3, r3
 8003222:	227f      	movs	r2, #127	; 0x7f
        pllvco =  (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8003224:	68e5      	ldr	r5, [r4, #12]
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8003226:	0649      	lsls	r1, r1, #25
 8003228:	0f49      	lsrs	r1, r1, #29
        pllvco =  (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 800322a:	0a2d      	lsrs	r5, r5, #8
    pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 800322c:	3101      	adds	r1, #1
        pllvco =  (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 800322e:	4015      	ands	r5, r2
    switch (pllsource)
 8003230:	079b      	lsls	r3, r3, #30
 8003232:	d107      	bne.n	8003244 <HAL_RCC_GetSysClockFreq+0x58>
        pllvco =  (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 8003234:	480f      	ldr	r0, [pc, #60]	; (8003274 <HAL_RCC_GetSysClockFreq+0x88>)
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8003236:	f7fc ff81 	bl	800013c <__udivsi3>
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 800323a:	68e1      	ldr	r1, [r4, #12]
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 800323c:	4368      	muls	r0, r5
    pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U);
 800323e:	0f49      	lsrs	r1, r1, #29
 8003240:	3101      	adds	r1, #1
 8003242:	e7e0      	b.n	8003206 <HAL_RCC_GetSysClockFreq+0x1a>
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) ;
 8003244:	480a      	ldr	r0, [pc, #40]	; (8003270 <HAL_RCC_GetSysClockFreq+0x84>)
 8003246:	e7f6      	b.n	8003236 <HAL_RCC_GetSysClockFreq+0x4a>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSE)
 8003248:	6891      	ldr	r1, [r2, #8]
 800324a:	4019      	ands	r1, r3
 800324c:	2920      	cmp	r1, #32
 800324e:	d009      	beq.n	8003264 <HAL_RCC_GetSysClockFreq+0x78>
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSI)
 8003250:	6892      	ldr	r2, [r2, #8]
    sysclockfreq = 0U;
 8003252:	2000      	movs	r0, #0
  else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_LSI)
 8003254:	4013      	ands	r3, r2
 8003256:	2b18      	cmp	r3, #24
 8003258:	d1d7      	bne.n	800320a <HAL_RCC_GetSysClockFreq+0x1e>
    sysclockfreq = LSI_VALUE;
 800325a:	20fa      	movs	r0, #250	; 0xfa
 800325c:	01c0      	lsls	r0, r0, #7
  return sysclockfreq;
 800325e:	e7d4      	b.n	800320a <HAL_RCC_GetSysClockFreq+0x1e>
    sysclockfreq = HSE_VALUE;
 8003260:	4804      	ldr	r0, [pc, #16]	; (8003274 <HAL_RCC_GetSysClockFreq+0x88>)
 8003262:	e7d2      	b.n	800320a <HAL_RCC_GetSysClockFreq+0x1e>
    sysclockfreq = LSE_VALUE;
 8003264:	2080      	movs	r0, #128	; 0x80
 8003266:	0200      	lsls	r0, r0, #8
 8003268:	e7cf      	b.n	800320a <HAL_RCC_GetSysClockFreq+0x1e>
 800326a:	46c0      	nop			; (mov r8, r8)
 800326c:	40021000 	.word	0x40021000
 8003270:	00f42400 	.word	0x00f42400
 8003274:	007a1200 	.word	0x007a1200

08003278 <HAL_RCC_ClockConfig>:
{
 8003278:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800327a:	0005      	movs	r5, r0
 800327c:	000e      	movs	r6, r1
  if (RCC_ClkInitStruct == NULL)
 800327e:	2800      	cmp	r0, #0
 8003280:	d101      	bne.n	8003286 <HAL_RCC_ClockConfig+0xe>
    return HAL_ERROR;
 8003282:	2001      	movs	r0, #1
}
 8003284:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8003286:	2707      	movs	r7, #7
 8003288:	4c4a      	ldr	r4, [pc, #296]	; (80033b4 <HAL_RCC_ClockConfig+0x13c>)
 800328a:	6823      	ldr	r3, [r4, #0]
 800328c:	403b      	ands	r3, r7
 800328e:	428b      	cmp	r3, r1
 8003290:	d32a      	bcc.n	80032e8 <HAL_RCC_ClockConfig+0x70>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003292:	6829      	ldr	r1, [r5, #0]
 8003294:	078b      	lsls	r3, r1, #30
 8003296:	d43b      	bmi.n	8003310 <HAL_RCC_ClockConfig+0x98>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003298:	07cb      	lsls	r3, r1, #31
 800329a:	d448      	bmi.n	800332e <HAL_RCC_ClockConfig+0xb6>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800329c:	2707      	movs	r7, #7
 800329e:	6823      	ldr	r3, [r4, #0]
 80032a0:	403b      	ands	r3, r7
 80032a2:	429e      	cmp	r6, r3
 80032a4:	d20a      	bcs.n	80032bc <HAL_RCC_ClockConfig+0x44>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80032a6:	6823      	ldr	r3, [r4, #0]
 80032a8:	43bb      	bics	r3, r7
 80032aa:	4333      	orrs	r3, r6
 80032ac:	6023      	str	r3, [r4, #0]
    tickstart = HAL_GetTick();
 80032ae:	f7fe fff3 	bl	8002298 <HAL_GetTick>
 80032b2:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80032b4:	6823      	ldr	r3, [r4, #0]
 80032b6:	403b      	ands	r3, r7
 80032b8:	429e      	cmp	r6, r3
 80032ba:	d16b      	bne.n	8003394 <HAL_RCC_ClockConfig+0x11c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80032bc:	682b      	ldr	r3, [r5, #0]
 80032be:	4c3e      	ldr	r4, [pc, #248]	; (80033b8 <HAL_RCC_ClockConfig+0x140>)
 80032c0:	075b      	lsls	r3, r3, #29
 80032c2:	d46f      	bmi.n	80033a4 <HAL_RCC_ClockConfig+0x12c>
  SystemCoreClock = (HAL_RCC_GetSysClockFreq() >> ((AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos]) & 0x1FU));
 80032c4:	f7ff ff92 	bl	80031ec <HAL_RCC_GetSysClockFreq>
 80032c8:	68a3      	ldr	r3, [r4, #8]
 80032ca:	4a3c      	ldr	r2, [pc, #240]	; (80033bc <HAL_RCC_ClockConfig+0x144>)
 80032cc:	051b      	lsls	r3, r3, #20
 80032ce:	0f1b      	lsrs	r3, r3, #28
 80032d0:	009b      	lsls	r3, r3, #2
 80032d2:	589b      	ldr	r3, [r3, r2]
 80032d4:	221f      	movs	r2, #31
 80032d6:	4013      	ands	r3, r2
 80032d8:	40d8      	lsrs	r0, r3
 80032da:	4b39      	ldr	r3, [pc, #228]	; (80033c0 <HAL_RCC_ClockConfig+0x148>)
 80032dc:	6018      	str	r0, [r3, #0]
  return HAL_InitTick(uwTickPrio);
 80032de:	4b39      	ldr	r3, [pc, #228]	; (80033c4 <HAL_RCC_ClockConfig+0x14c>)
 80032e0:	6818      	ldr	r0, [r3, #0]
 80032e2:	f7fe ff91 	bl	8002208 <HAL_InitTick>
 80032e6:	e7cd      	b.n	8003284 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80032e8:	6823      	ldr	r3, [r4, #0]
 80032ea:	43bb      	bics	r3, r7
 80032ec:	430b      	orrs	r3, r1
 80032ee:	6023      	str	r3, [r4, #0]
    tickstart = HAL_GetTick();
 80032f0:	f7fe ffd2 	bl	8002298 <HAL_GetTick>
 80032f4:	9001      	str	r0, [sp, #4]
    while ((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 80032f6:	6823      	ldr	r3, [r4, #0]
 80032f8:	403b      	ands	r3, r7
 80032fa:	429e      	cmp	r6, r3
 80032fc:	d0c9      	beq.n	8003292 <HAL_RCC_ClockConfig+0x1a>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80032fe:	f7fe ffcb 	bl	8002298 <HAL_GetTick>
 8003302:	9b01      	ldr	r3, [sp, #4]
 8003304:	1ac0      	subs	r0, r0, r3
 8003306:	4b30      	ldr	r3, [pc, #192]	; (80033c8 <HAL_RCC_ClockConfig+0x150>)
 8003308:	4298      	cmp	r0, r3
 800330a:	d9f4      	bls.n	80032f6 <HAL_RCC_ClockConfig+0x7e>
        return HAL_TIMEOUT;
 800330c:	2003      	movs	r0, #3
 800330e:	e7b9      	b.n	8003284 <HAL_RCC_ClockConfig+0xc>
 8003310:	4a29      	ldr	r2, [pc, #164]	; (80033b8 <HAL_RCC_ClockConfig+0x140>)
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003312:	074b      	lsls	r3, r1, #29
 8003314:	d504      	bpl.n	8003320 <HAL_RCC_ClockConfig+0xa8>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8003316:	23e0      	movs	r3, #224	; 0xe0
 8003318:	6890      	ldr	r0, [r2, #8]
 800331a:	01db      	lsls	r3, r3, #7
 800331c:	4303      	orrs	r3, r0
 800331e:	6093      	str	r3, [r2, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003320:	6893      	ldr	r3, [r2, #8]
 8003322:	482a      	ldr	r0, [pc, #168]	; (80033cc <HAL_RCC_ClockConfig+0x154>)
 8003324:	4003      	ands	r3, r0
 8003326:	68a8      	ldr	r0, [r5, #8]
 8003328:	4303      	orrs	r3, r0
 800332a:	6093      	str	r3, [r2, #8]
 800332c:	e7b4      	b.n	8003298 <HAL_RCC_ClockConfig+0x20>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800332e:	686a      	ldr	r2, [r5, #4]
 8003330:	4f21      	ldr	r7, [pc, #132]	; (80033b8 <HAL_RCC_ClockConfig+0x140>)
 8003332:	2a01      	cmp	r2, #1
 8003334:	d119      	bne.n	800336a <HAL_RCC_ClockConfig+0xf2>
      if (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8003336:	683b      	ldr	r3, [r7, #0]
 8003338:	039b      	lsls	r3, r3, #14
 800333a:	d5a2      	bpl.n	8003282 <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800333c:	2107      	movs	r1, #7
 800333e:	68bb      	ldr	r3, [r7, #8]
 8003340:	438b      	bics	r3, r1
 8003342:	4313      	orrs	r3, r2
 8003344:	60bb      	str	r3, [r7, #8]
    tickstart = HAL_GetTick();
 8003346:	f7fe ffa7 	bl	8002298 <HAL_GetTick>
 800334a:	9001      	str	r0, [sp, #4]
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800334c:	2338      	movs	r3, #56	; 0x38
 800334e:	68ba      	ldr	r2, [r7, #8]
 8003350:	401a      	ands	r2, r3
 8003352:	686b      	ldr	r3, [r5, #4]
 8003354:	00db      	lsls	r3, r3, #3
 8003356:	429a      	cmp	r2, r3
 8003358:	d0a0      	beq.n	800329c <HAL_RCC_ClockConfig+0x24>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800335a:	f7fe ff9d 	bl	8002298 <HAL_GetTick>
 800335e:	9b01      	ldr	r3, [sp, #4]
 8003360:	1ac0      	subs	r0, r0, r3
 8003362:	4b19      	ldr	r3, [pc, #100]	; (80033c8 <HAL_RCC_ClockConfig+0x150>)
 8003364:	4298      	cmp	r0, r3
 8003366:	d9f1      	bls.n	800334c <HAL_RCC_ClockConfig+0xd4>
 8003368:	e7d0      	b.n	800330c <HAL_RCC_ClockConfig+0x94>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800336a:	2a02      	cmp	r2, #2
 800336c:	d103      	bne.n	8003376 <HAL_RCC_ClockConfig+0xfe>
      if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800336e:	683b      	ldr	r3, [r7, #0]
 8003370:	019b      	lsls	r3, r3, #6
 8003372:	d4e3      	bmi.n	800333c <HAL_RCC_ClockConfig+0xc4>
 8003374:	e785      	b.n	8003282 <HAL_RCC_ClockConfig+0xa>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003376:	2a00      	cmp	r2, #0
 8003378:	d103      	bne.n	8003382 <HAL_RCC_ClockConfig+0x10a>
      if (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800337a:	683b      	ldr	r3, [r7, #0]
 800337c:	055b      	lsls	r3, r3, #21
 800337e:	d4dd      	bmi.n	800333c <HAL_RCC_ClockConfig+0xc4>
 8003380:	e77f      	b.n	8003282 <HAL_RCC_ClockConfig+0xa>
 8003382:	2302      	movs	r3, #2
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_LSI)
 8003384:	2a03      	cmp	r2, #3
 8003386:	d103      	bne.n	8003390 <HAL_RCC_ClockConfig+0x118>
      if (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8003388:	6e39      	ldr	r1, [r7, #96]	; 0x60
      if (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 800338a:	4219      	tst	r1, r3
 800338c:	d1d6      	bne.n	800333c <HAL_RCC_ClockConfig+0xc4>
 800338e:	e778      	b.n	8003282 <HAL_RCC_ClockConfig+0xa>
 8003390:	6df9      	ldr	r1, [r7, #92]	; 0x5c
 8003392:	e7fa      	b.n	800338a <HAL_RCC_ClockConfig+0x112>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003394:	f7fe ff80 	bl	8002298 <HAL_GetTick>
 8003398:	9b01      	ldr	r3, [sp, #4]
 800339a:	1ac0      	subs	r0, r0, r3
 800339c:	4b0a      	ldr	r3, [pc, #40]	; (80033c8 <HAL_RCC_ClockConfig+0x150>)
 800339e:	4298      	cmp	r0, r3
 80033a0:	d988      	bls.n	80032b4 <HAL_RCC_ClockConfig+0x3c>
 80033a2:	e7b3      	b.n	800330c <HAL_RCC_ClockConfig+0x94>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 80033a4:	68a3      	ldr	r3, [r4, #8]
 80033a6:	4a0a      	ldr	r2, [pc, #40]	; (80033d0 <HAL_RCC_ClockConfig+0x158>)
 80033a8:	4013      	ands	r3, r2
 80033aa:	68ea      	ldr	r2, [r5, #12]
 80033ac:	4313      	orrs	r3, r2
 80033ae:	60a3      	str	r3, [r4, #8]
 80033b0:	e788      	b.n	80032c4 <HAL_RCC_ClockConfig+0x4c>
 80033b2:	46c0      	nop			; (mov r8, r8)
 80033b4:	40022000 	.word	0x40022000
 80033b8:	40021000 	.word	0x40021000
 80033bc:	08007270 	.word	0x08007270
 80033c0:	20000008 	.word	0x20000008
 80033c4:	20000004 	.word	0x20000004
 80033c8:	00001388 	.word	0x00001388
 80033cc:	fffff0ff 	.word	0xfffff0ff
 80033d0:	ffff8fff 	.word	0xffff8fff

080033d4 <HAL_RCC_GetPCLK1Freq>:
  *         @arg @ref LL_RCC_APB1_DIV_8
  *         @arg @ref LL_RCC_APB1_DIV_16
  */
__STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
{
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE));
 80033d4:	4b06      	ldr	r3, [pc, #24]	; (80033f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return ((uint32_t)(__LL_RCC_CALC_PCLK1_FREQ(HAL_RCC_GetHCLKFreq(), LL_RCC_GetAPB1Prescaler())));
 80033d6:	4a07      	ldr	r2, [pc, #28]	; (80033f4 <HAL_RCC_GetPCLK1Freq+0x20>)
 80033d8:	689b      	ldr	r3, [r3, #8]
 80033da:	045b      	lsls	r3, r3, #17
 80033dc:	0f5b      	lsrs	r3, r3, #29
 80033de:	009b      	lsls	r3, r3, #2
 80033e0:	589b      	ldr	r3, [r3, r2]
 80033e2:	221f      	movs	r2, #31
 80033e4:	4013      	ands	r3, r2
 80033e6:	4a04      	ldr	r2, [pc, #16]	; (80033f8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80033e8:	6810      	ldr	r0, [r2, #0]
 80033ea:	40d8      	lsrs	r0, r3
}
 80033ec:	4770      	bx	lr
 80033ee:	46c0      	nop			; (mov r8, r8)
 80033f0:	40021000 	.word	0x40021000
 80033f4:	080072b0 	.word	0x080072b0
 80033f8:	20000008 	.word	0x20000008

080033fc <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80033fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80033fe:	0005      	movs	r5, r0

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*-------------------------- RTC clock source configuration ----------------------*/
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8003400:	682b      	ldr	r3, [r5, #0]
{
 8003402:	b085      	sub	sp, #20
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8003404:	2000      	movs	r0, #0
  if ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8003406:	039b      	lsls	r3, r3, #14
 8003408:	d550      	bpl.n	80034ac <HAL_RCCEx_PeriphCLKConfig+0xb0>

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800340a:	2280      	movs	r2, #128	; 0x80
 800340c:	4c6f      	ldr	r4, [pc, #444]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800340e:	0552      	lsls	r2, r2, #21
 8003410:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    FlagStatus       pwrclkchanged = RESET;
 8003412:	9000      	str	r0, [sp, #0]
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003414:	4213      	tst	r3, r2
 8003416:	d108      	bne.n	800342a <HAL_RCCEx_PeriphCLKConfig+0x2e>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003418:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800341a:	4313      	orrs	r3, r2
 800341c:	63e3      	str	r3, [r4, #60]	; 0x3c
 800341e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003420:	4013      	ands	r3, r2
 8003422:	9303      	str	r3, [sp, #12]
 8003424:	9b03      	ldr	r3, [sp, #12]
      pwrclkchanged = SET;
 8003426:	2301      	movs	r3, #1
 8003428:	9300      	str	r3, [sp, #0]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 800342a:	2780      	movs	r7, #128	; 0x80
 800342c:	4e68      	ldr	r6, [pc, #416]	; (80035d0 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 800342e:	007f      	lsls	r7, r7, #1
 8003430:	6833      	ldr	r3, [r6, #0]
 8003432:	433b      	orrs	r3, r7
 8003434:	6033      	str	r3, [r6, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8003436:	f7fe ff2f 	bl	8002298 <HAL_GetTick>
 800343a:	9001      	str	r0, [sp, #4]

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 800343c:	6833      	ldr	r3, [r6, #0]
 800343e:	423b      	tst	r3, r7
 8003440:	d026      	beq.n	8003490 <HAL_RCCEx_PeriphCLKConfig+0x94>
    }

    if (ret == HAL_OK)
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 8003442:	23c0      	movs	r3, #192	; 0xc0
 8003444:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003446:	009b      	lsls	r3, r3, #2
 8003448:	4013      	ands	r3, r2

      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 800344a:	d00f      	beq.n	800346c <HAL_RCCEx_PeriphCLKConfig+0x70>
 800344c:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800344e:	4293      	cmp	r3, r2
 8003450:	d00c      	beq.n	800346c <HAL_RCCEx_PeriphCLKConfig+0x70>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8003452:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003454:	4b5f      	ldr	r3, [pc, #380]	; (80035d4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8003456:	6de1      	ldr	r1, [r4, #92]	; 0x5c
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 8003458:	4013      	ands	r3, r2
        __HAL_RCC_BACKUPRESET_FORCE();
 800345a:	2280      	movs	r2, #128	; 0x80
 800345c:	0252      	lsls	r2, r2, #9
 800345e:	430a      	orrs	r2, r1
 8003460:	65e2      	str	r2, [r4, #92]	; 0x5c
        __HAL_RCC_BACKUPRESET_RELEASE();
 8003462:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8003464:	495c      	ldr	r1, [pc, #368]	; (80035d8 <HAL_RCCEx_PeriphCLKConfig+0x1dc>)
 8003466:	400a      	ands	r2, r1
 8003468:	65e2      	str	r2, [r4, #92]	; 0x5c
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 800346a:	65e3      	str	r3, [r4, #92]	; 0x5c
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 800346c:	07db      	lsls	r3, r3, #31
 800346e:	d507      	bpl.n	8003480 <HAL_RCCEx_PeriphCLKConfig+0x84>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003470:	f7fe ff12 	bl	8002298 <HAL_GetTick>

        /* Wait till LSE is ready */
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8003474:	2702      	movs	r7, #2
        tickstart = HAL_GetTick();
 8003476:	0006      	movs	r6, r0
        while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8003478:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 800347a:	423b      	tst	r3, r7
 800347c:	d100      	bne.n	8003480 <HAL_RCCEx_PeriphCLKConfig+0x84>
 800347e:	e09d      	b.n	80035bc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
      }

      if (ret == HAL_OK)
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003480:	6de3      	ldr	r3, [r4, #92]	; 0x5c
 8003482:	4a54      	ldr	r2, [pc, #336]	; (80035d4 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 8003484:	2000      	movs	r0, #0
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8003486:	4013      	ands	r3, r2
 8003488:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 800348a:	4313      	orrs	r3, r2
 800348c:	65e3      	str	r3, [r4, #92]	; 0x5c
 800348e:	e006      	b.n	800349e <HAL_RCCEx_PeriphCLKConfig+0xa2>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003490:	f7fe ff02 	bl	8002298 <HAL_GetTick>
 8003494:	9b01      	ldr	r3, [sp, #4]
 8003496:	1ac0      	subs	r0, r0, r3
 8003498:	2802      	cmp	r0, #2
 800349a:	d9cf      	bls.n	800343c <HAL_RCCEx_PeriphCLKConfig+0x40>
        ret = HAL_TIMEOUT;
 800349c:	2003      	movs	r0, #3
      /* set overall return value */
      status = ret;
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 800349e:	9b00      	ldr	r3, [sp, #0]
 80034a0:	2b01      	cmp	r3, #1
 80034a2:	d103      	bne.n	80034ac <HAL_RCCEx_PeriphCLKConfig+0xb0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80034a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80034a6:	4a4d      	ldr	r2, [pc, #308]	; (80035dc <HAL_RCCEx_PeriphCLKConfig+0x1e0>)
 80034a8:	4013      	ands	r3, r2
 80034aa:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80034ac:	682b      	ldr	r3, [r5, #0]
 80034ae:	07da      	lsls	r2, r3, #31
 80034b0:	d506      	bpl.n	80034c0 <HAL_RCCEx_PeriphCLKConfig+0xc4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 80034b2:	2403      	movs	r4, #3
 80034b4:	4945      	ldr	r1, [pc, #276]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80034b6:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 80034b8:	43a2      	bics	r2, r4
 80034ba:	686c      	ldr	r4, [r5, #4]
 80034bc:	4322      	orrs	r2, r4
 80034be:	654a      	str	r2, [r1, #84]	; 0x54
  }

#if defined(RCC_CCIPR_USART2SEL)
  /*-------------------------- USART2 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80034c0:	079a      	lsls	r2, r3, #30
 80034c2:	d506      	bpl.n	80034d2 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 80034c4:	240c      	movs	r4, #12
 80034c6:	4941      	ldr	r1, [pc, #260]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80034c8:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 80034ca:	43a2      	bics	r2, r4
 80034cc:	68ac      	ldr	r4, [r5, #8]
 80034ce:	4322      	orrs	r2, r4
 80034d0:	654a      	str	r2, [r1, #84]	; 0x54
  }
#endif /* RCC_CCIPR_USART2SEL */

#if defined(RCC_CCIPR_LPUART1SEL)
  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80034d2:	069a      	lsls	r2, r3, #26
 80034d4:	d506      	bpl.n	80034e4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUAR1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80034d6:	493d      	ldr	r1, [pc, #244]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80034d8:	4c41      	ldr	r4, [pc, #260]	; (80035e0 <HAL_RCCEx_PeriphCLKConfig+0x1e4>)
 80034da:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 80034dc:	4022      	ands	r2, r4
 80034de:	68ec      	ldr	r4, [r5, #12]
 80034e0:	4322      	orrs	r2, r4
 80034e2:	654a      	str	r2, [r1, #84]	; 0x54
  }
#endif /* RCC_CCIPR_LPUART1SEL */

#if defined(RCC_CCIPR_LPTIM1SEL)
  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80034e4:	059a      	lsls	r2, r3, #22
 80034e6:	d506      	bpl.n	80034f6 <HAL_RCCEx_PeriphCLKConfig+0xfa>
  {
    assert_param(IS_RCC_LPTIM1CLKSOURCE(PeriphClkInit->Lptim1ClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80034e8:	4938      	ldr	r1, [pc, #224]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80034ea:	4c3e      	ldr	r4, [pc, #248]	; (80035e4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>)
 80034ec:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 80034ee:	4022      	ands	r2, r4
 80034f0:	69ac      	ldr	r4, [r5, #24]
 80034f2:	4322      	orrs	r2, r4
 80034f4:	654a      	str	r2, [r1, #84]	; 0x54
  }
#endif /* RCC_CCIPR_LPTIM1SEL */

#if defined(RCC_CCIPR_LPTIM2SEL)
  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 80034f6:	055a      	lsls	r2, r3, #21
 80034f8:	d506      	bpl.n	8003508 <HAL_RCCEx_PeriphCLKConfig+0x10c>
  {
    assert_param(IS_RCC_LPTIM2CLKSOURCE(PeriphClkInit->Lptim2ClockSelection));
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 80034fa:	4934      	ldr	r1, [pc, #208]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80034fc:	4c3a      	ldr	r4, [pc, #232]	; (80035e8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>)
 80034fe:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 8003500:	4022      	ands	r2, r4
 8003502:	69ec      	ldr	r4, [r5, #28]
 8003504:	4322      	orrs	r2, r4
 8003506:	654a      	str	r2, [r1, #84]	; 0x54
  }
#endif /* RCC_CCIPR_LPTIM2SEL */

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003508:	065a      	lsls	r2, r3, #25
 800350a:	d506      	bpl.n	800351a <HAL_RCCEx_PeriphCLKConfig+0x11e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800350c:	492f      	ldr	r1, [pc, #188]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800350e:	4c37      	ldr	r4, [pc, #220]	; (80035ec <HAL_RCCEx_PeriphCLKConfig+0x1f0>)
 8003510:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 8003512:	4022      	ands	r2, r4
 8003514:	692c      	ldr	r4, [r5, #16]
 8003516:	4322      	orrs	r2, r4
 8003518:	654a      	str	r2, [r1, #84]	; 0x54
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
    }
  }
#endif /* RCC_CCIPR_RNGSEL */
  /*-------------------------- ADC clock source configuration ----------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 800351a:	045a      	lsls	r2, r3, #17
 800351c:	d50f      	bpl.n	800353e <HAL_RCCEx_PeriphCLKConfig+0x142>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 800351e:	492b      	ldr	r1, [pc, #172]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8003520:	6a2c      	ldr	r4, [r5, #32]
 8003522:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 8003524:	0092      	lsls	r2, r2, #2
 8003526:	0892      	lsrs	r2, r2, #2
 8003528:	4322      	orrs	r2, r4
 800352a:	654a      	str	r2, [r1, #84]	; 0x54

    if (PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLADC)
 800352c:	2280      	movs	r2, #128	; 0x80
 800352e:	05d2      	lsls	r2, r2, #23
 8003530:	4294      	cmp	r4, r2
 8003532:	d104      	bne.n	800353e <HAL_RCCEx_PeriphCLKConfig+0x142>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 8003534:	2280      	movs	r2, #128	; 0x80
 8003536:	68cc      	ldr	r4, [r1, #12]
 8003538:	0252      	lsls	r2, r2, #9
 800353a:	4322      	orrs	r2, r4
 800353c:	60ca      	str	r2, [r1, #12]
    }
  }

#if defined(RCC_CCIPR_CECSEL)
  /*-------------------------- CEC clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 800353e:	031a      	lsls	r2, r3, #12
 8003540:	d506      	bpl.n	8003550 <HAL_RCCEx_PeriphCLKConfig+0x154>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8003542:	2440      	movs	r4, #64	; 0x40
 8003544:	4921      	ldr	r1, [pc, #132]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8003546:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 8003548:	43a2      	bics	r2, r4
 800354a:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800354c:	4322      	orrs	r2, r4
 800354e:	654a      	str	r2, [r1, #84]	; 0x54
  }
#endif /* RCC_CCIPR_CECSEL */

#if defined(RCC_CCIPR_TIM1SEL)
  /*-------------------------- TIM1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM1) == RCC_PERIPHCLK_TIM1)
 8003550:	029a      	lsls	r2, r3, #10
 8003552:	d50f      	bpl.n	8003574 <HAL_RCCEx_PeriphCLKConfig+0x178>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM1CLKSOURCE(PeriphClkInit->Tim1ClockSelection));

    /* Configure the TIM1 clock source */
    __HAL_RCC_TIM1_CONFIG(PeriphClkInit->Tim1ClockSelection);
 8003554:	491d      	ldr	r1, [pc, #116]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8003556:	4e26      	ldr	r6, [pc, #152]	; (80035f0 <HAL_RCCEx_PeriphCLKConfig+0x1f4>)
 8003558:	6d4a      	ldr	r2, [r1, #84]	; 0x54
 800355a:	6aac      	ldr	r4, [r5, #40]	; 0x28
 800355c:	4032      	ands	r2, r6
 800355e:	4322      	orrs	r2, r4
 8003560:	654a      	str	r2, [r1, #84]	; 0x54

    if (PeriphClkInit->Tim1ClockSelection == RCC_TIM1CLKSOURCE_PLL)
 8003562:	2280      	movs	r2, #128	; 0x80
 8003564:	03d2      	lsls	r2, r2, #15
 8003566:	4294      	cmp	r4, r2
 8003568:	d104      	bne.n	8003574 <HAL_RCCEx_PeriphCLKConfig+0x178>
    {
      /* Enable PLLQCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 800356a:	2280      	movs	r2, #128	; 0x80
 800356c:	68cc      	ldr	r4, [r1, #12]
 800356e:	0452      	lsls	r2, r2, #17
 8003570:	4322      	orrs	r2, r4
 8003572:	60ca      	str	r2, [r1, #12]
  }
#endif /* RCC_CCIPR_TIM1SEL */

#if defined(RCC_CCIPR_TIM15SEL)
  /*-------------------------- TIM15 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM15) == RCC_PERIPHCLK_TIM15)
 8003574:	025a      	lsls	r2, r3, #9
 8003576:	d50d      	bpl.n	8003594 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIM15CLKSOURCE(PeriphClkInit->Tim15ClockSelection));

    /* Configure the TIM15 clock source */
    __HAL_RCC_TIM15_CONFIG(PeriphClkInit->Tim15ClockSelection);
 8003578:	4c14      	ldr	r4, [pc, #80]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800357a:	4e1e      	ldr	r6, [pc, #120]	; (80035f4 <HAL_RCCEx_PeriphCLKConfig+0x1f8>)
 800357c:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800357e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8003580:	4031      	ands	r1, r6
 8003582:	4311      	orrs	r1, r2
 8003584:	6561      	str	r1, [r4, #84]	; 0x54

    if (PeriphClkInit->Tim15ClockSelection == RCC_TIM15CLKSOURCE_PLL)
 8003586:	2180      	movs	r1, #128	; 0x80
 8003588:	0449      	lsls	r1, r1, #17
 800358a:	428a      	cmp	r2, r1
 800358c:	d102      	bne.n	8003594 <HAL_RCCEx_PeriphCLKConfig+0x198>
    {
      /* Enable PLLQCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLQCLK);
 800358e:	68e1      	ldr	r1, [r4, #12]
 8003590:	430a      	orrs	r2, r1
 8003592:	60e2      	str	r2, [r4, #12]
    }
  }
#endif /* RCC_CCIPR_TIM15SEL */

  /*-------------------------- I2S1 clock source configuration ---------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S1) == RCC_PERIPHCLK_I2S1)
 8003594:	051b      	lsls	r3, r3, #20
 8003596:	d50f      	bpl.n	80035b8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2S1CLKSOURCE(PeriphClkInit->I2s1ClockSelection));

    /* Configure the I2S1 clock source */
    __HAL_RCC_I2S1_CONFIG(PeriphClkInit->I2s1ClockSelection);
 8003598:	490c      	ldr	r1, [pc, #48]	; (80035cc <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800359a:	4c17      	ldr	r4, [pc, #92]	; (80035f8 <HAL_RCCEx_PeriphCLKConfig+0x1fc>)
 800359c:	6d4b      	ldr	r3, [r1, #84]	; 0x54
 800359e:	696a      	ldr	r2, [r5, #20]
 80035a0:	4023      	ands	r3, r4
 80035a2:	4313      	orrs	r3, r2
 80035a4:	654b      	str	r3, [r1, #84]	; 0x54

    if (PeriphClkInit->I2s1ClockSelection == RCC_I2S1CLKSOURCE_PLL)
 80035a6:	2380      	movs	r3, #128	; 0x80
 80035a8:	01db      	lsls	r3, r3, #7
 80035aa:	429a      	cmp	r2, r3
 80035ac:	d104      	bne.n	80035b8 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
    {
      /* Enable PLLPCLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLLPCLK);
 80035ae:	2380      	movs	r3, #128	; 0x80
 80035b0:	68ca      	ldr	r2, [r1, #12]
 80035b2:	025b      	lsls	r3, r3, #9
 80035b4:	4313      	orrs	r3, r2
 80035b6:	60cb      	str	r3, [r1, #12]
    }
  }

  return status;
}
 80035b8:	b005      	add	sp, #20
 80035ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80035bc:	f7fe fe6c 	bl	8002298 <HAL_GetTick>
 80035c0:	4b0e      	ldr	r3, [pc, #56]	; (80035fc <HAL_RCCEx_PeriphCLKConfig+0x200>)
 80035c2:	1b80      	subs	r0, r0, r6
 80035c4:	4298      	cmp	r0, r3
 80035c6:	d800      	bhi.n	80035ca <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 80035c8:	e756      	b.n	8003478 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 80035ca:	e767      	b.n	800349c <HAL_RCCEx_PeriphCLKConfig+0xa0>
 80035cc:	40021000 	.word	0x40021000
 80035d0:	40007000 	.word	0x40007000
 80035d4:	fffffcff 	.word	0xfffffcff
 80035d8:	fffeffff 	.word	0xfffeffff
 80035dc:	efffffff 	.word	0xefffffff
 80035e0:	fffff3ff 	.word	0xfffff3ff
 80035e4:	fff3ffff 	.word	0xfff3ffff
 80035e8:	ffcfffff 	.word	0xffcfffff
 80035ec:	ffffcfff 	.word	0xffffcfff
 80035f0:	ffbfffff 	.word	0xffbfffff
 80035f4:	feffffff 	.word	0xfeffffff
 80035f8:	ffff3fff 	.word	0xffff3fff
 80035fc:	00001388 	.word	0x00001388

08003600 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8003600:	6803      	ldr	r3, [r0, #0]
 8003602:	4907      	ldr	r1, [pc, #28]	; (8003620 <UART_EndRxTransfer+0x20>)
 8003604:	681a      	ldr	r2, [r3, #0]
 8003606:	400a      	ands	r2, r1
 8003608:	601a      	str	r2, [r3, #0]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800360a:	689a      	ldr	r2, [r3, #8]
 800360c:	4905      	ldr	r1, [pc, #20]	; (8003624 <UART_EndRxTransfer+0x24>)
 800360e:	400a      	ands	r2, r1
 8003610:	609a      	str	r2, [r3, #8]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8003612:	0003      	movs	r3, r0
 8003614:	2220      	movs	r2, #32
 8003616:	3308      	adds	r3, #8
 8003618:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800361a:	2300      	movs	r3, #0
 800361c:	66c3      	str	r3, [r0, #108]	; 0x6c
}
 800361e:	4770      	bx	lr
 8003620:	fffffedf 	.word	0xfffffedf
 8003624:	effffffe 	.word	0xeffffffe

08003628 <HAL_UART_TxCpltCallback>:
 8003628:	4770      	bx	lr

0800362a <HAL_UART_ErrorCallback>:
 800362a:	4770      	bx	lr

0800362c <HAL_UART_IRQHandler>:
{
 800362c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 800362e:	6802      	ldr	r2, [r0, #0]
{
 8003630:	0004      	movs	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 8003632:	69d3      	ldr	r3, [r2, #28]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8003634:	6811      	ldr	r1, [r2, #0]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8003636:	6890      	ldr	r0, [r2, #8]
  if (errorflags == 0U)
 8003638:	071d      	lsls	r5, r3, #28
 800363a:	d10d      	bne.n	8003658 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 800363c:	2520      	movs	r5, #32
 800363e:	422b      	tst	r3, r5
 8003640:	d100      	bne.n	8003644 <HAL_UART_IRQHandler+0x18>
 8003642:	e080      	b.n	8003746 <HAL_UART_IRQHandler+0x11a>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 8003644:	4229      	tst	r1, r5
 8003646:	d102      	bne.n	800364e <HAL_UART_IRQHandler+0x22>
            || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 8003648:	00c5      	lsls	r5, r0, #3
 800364a:	d400      	bmi.n	800364e <HAL_UART_IRQHandler+0x22>
 800364c:	e07b      	b.n	8003746 <HAL_UART_IRQHandler+0x11a>
      if (huart->RxISR != NULL)
 800364e:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
      huart->TxISR(huart);
 8003650:	0020      	movs	r0, r4
    if (huart->TxISR != NULL)
 8003652:	2b00      	cmp	r3, #0
 8003654:	d16d      	bne.n	8003732 <HAL_UART_IRQHandler+0x106>
 8003656:	e06d      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
      && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 8003658:	4d55      	ldr	r5, [pc, #340]	; (80037b0 <HAL_UART_IRQHandler+0x184>)
 800365a:	4005      	ands	r5, r0
 800365c:	9500      	str	r5, [sp, #0]
 800365e:	d104      	bne.n	800366a <HAL_UART_IRQHandler+0x3e>
           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
 8003660:	3521      	adds	r5, #33	; 0x21
 8003662:	35ff      	adds	r5, #255	; 0xff
 8003664:	4229      	tst	r1, r5
 8003666:	d100      	bne.n	800366a <HAL_UART_IRQHandler+0x3e>
 8003668:	e06d      	b.n	8003746 <HAL_UART_IRQHandler+0x11a>
 800366a:	0025      	movs	r5, r4
    if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 800366c:	2601      	movs	r6, #1
 800366e:	3588      	adds	r5, #136	; 0x88
 8003670:	4233      	tst	r3, r6
 8003672:	d005      	beq.n	8003680 <HAL_UART_IRQHandler+0x54>
 8003674:	05cf      	lsls	r7, r1, #23
 8003676:	d503      	bpl.n	8003680 <HAL_UART_IRQHandler+0x54>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 8003678:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 800367a:	682f      	ldr	r7, [r5, #0]
 800367c:	433e      	orrs	r6, r7
 800367e:	602e      	str	r6, [r5, #0]
    if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 8003680:	2602      	movs	r6, #2
 8003682:	4233      	tst	r3, r6
 8003684:	d00c      	beq.n	80036a0 <HAL_UART_IRQHandler+0x74>
 8003686:	07c7      	lsls	r7, r0, #31
 8003688:	d50a      	bpl.n	80036a0 <HAL_UART_IRQHandler+0x74>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800368a:	0027      	movs	r7, r4
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 800368c:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 800368e:	3788      	adds	r7, #136	; 0x88
 8003690:	683e      	ldr	r6, [r7, #0]
 8003692:	9701      	str	r7, [sp, #4]
 8003694:	46b4      	mov	ip, r6
 8003696:	2604      	movs	r6, #4
 8003698:	4667      	mov	r7, ip
 800369a:	433e      	orrs	r6, r7
 800369c:	9f01      	ldr	r7, [sp, #4]
 800369e:	603e      	str	r6, [r7, #0]
    if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 80036a0:	2604      	movs	r6, #4
 80036a2:	4233      	tst	r3, r6
 80036a4:	d00c      	beq.n	80036c0 <HAL_UART_IRQHandler+0x94>
 80036a6:	07c7      	lsls	r7, r0, #31
 80036a8:	d50a      	bpl.n	80036c0 <HAL_UART_IRQHandler+0x94>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80036aa:	0027      	movs	r7, r4
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 80036ac:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 80036ae:	3788      	adds	r7, #136	; 0x88
 80036b0:	683e      	ldr	r6, [r7, #0]
 80036b2:	9701      	str	r7, [sp, #4]
 80036b4:	46b4      	mov	ip, r6
 80036b6:	2602      	movs	r6, #2
 80036b8:	4667      	mov	r7, ip
 80036ba:	433e      	orrs	r6, r7
 80036bc:	9f01      	ldr	r7, [sp, #4]
 80036be:	603e      	str	r6, [r7, #0]
    if (((isrflags & USART_ISR_ORE) != 0U)
 80036c0:	071e      	lsls	r6, r3, #28
 80036c2:	d509      	bpl.n	80036d8 <HAL_UART_IRQHandler+0xac>
        && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 80036c4:	068e      	lsls	r6, r1, #26
 80036c6:	d402      	bmi.n	80036ce <HAL_UART_IRQHandler+0xa2>
 80036c8:	9e00      	ldr	r6, [sp, #0]
 80036ca:	2e00      	cmp	r6, #0
 80036cc:	d004      	beq.n	80036d8 <HAL_UART_IRQHandler+0xac>
      __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 80036ce:	2608      	movs	r6, #8
 80036d0:	6216      	str	r6, [r2, #32]
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80036d2:	682a      	ldr	r2, [r5, #0]
 80036d4:	4316      	orrs	r6, r2
 80036d6:	602e      	str	r6, [r5, #0]
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80036d8:	682a      	ldr	r2, [r5, #0]
 80036da:	2a00      	cmp	r2, #0
 80036dc:	d02a      	beq.n	8003734 <HAL_UART_IRQHandler+0x108>
      if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 80036de:	2220      	movs	r2, #32
 80036e0:	4213      	tst	r3, r2
 80036e2:	d008      	beq.n	80036f6 <HAL_UART_IRQHandler+0xca>
          && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 80036e4:	4211      	tst	r1, r2
 80036e6:	d101      	bne.n	80036ec <HAL_UART_IRQHandler+0xc0>
              || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 80036e8:	00c3      	lsls	r3, r0, #3
 80036ea:	d504      	bpl.n	80036f6 <HAL_UART_IRQHandler+0xca>
        if (huart->RxISR != NULL)
 80036ec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80036ee:	2b00      	cmp	r3, #0
 80036f0:	d001      	beq.n	80036f6 <HAL_UART_IRQHandler+0xca>
          huart->RxISR(huart);
 80036f2:	0020      	movs	r0, r4
 80036f4:	4798      	blx	r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80036f6:	6823      	ldr	r3, [r4, #0]
      errorcode = huart->ErrorCode;
 80036f8:	682e      	ldr	r6, [r5, #0]
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80036fa:	689b      	ldr	r3, [r3, #8]
        UART_EndRxTransfer(huart);
 80036fc:	0020      	movs	r0, r4
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 80036fe:	065b      	lsls	r3, r3, #25
 8003700:	d402      	bmi.n	8003708 <HAL_UART_IRQHandler+0xdc>
          ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 8003702:	2308      	movs	r3, #8
 8003704:	401e      	ands	r6, r3
      if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 8003706:	d01a      	beq.n	800373e <HAL_UART_IRQHandler+0x112>
        UART_EndRxTransfer(huart);
 8003708:	f7ff ff7a 	bl	8003600 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800370c:	2140      	movs	r1, #64	; 0x40
 800370e:	6823      	ldr	r3, [r4, #0]
 8003710:	689a      	ldr	r2, [r3, #8]
 8003712:	420a      	tst	r2, r1
 8003714:	d00f      	beq.n	8003736 <HAL_UART_IRQHandler+0x10a>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8003716:	689a      	ldr	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 8003718:	6fa0      	ldr	r0, [r4, #120]	; 0x78
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 800371a:	438a      	bics	r2, r1
 800371c:	609a      	str	r2, [r3, #8]
          if (huart->hdmarx != NULL)
 800371e:	2800      	cmp	r0, #0
 8003720:	d009      	beq.n	8003736 <HAL_UART_IRQHandler+0x10a>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8003722:	4b24      	ldr	r3, [pc, #144]	; (80037b4 <HAL_UART_IRQHandler+0x188>)
 8003724:	6383      	str	r3, [r0, #56]	; 0x38
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8003726:	f7fe fe25 	bl	8002374 <HAL_DMA_Abort_IT>
 800372a:	2800      	cmp	r0, #0
 800372c:	d002      	beq.n	8003734 <HAL_UART_IRQHandler+0x108>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 800372e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8003730:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8003732:	4798      	blx	r3
}
 8003734:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
            HAL_UART_ErrorCallback(huart);
 8003736:	0020      	movs	r0, r4
 8003738:	f7ff ff77 	bl	800362a <HAL_UART_ErrorCallback>
 800373c:	e7fa      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
        HAL_UART_ErrorCallback(huart);
 800373e:	f7ff ff74 	bl	800362a <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003742:	602e      	str	r6, [r5, #0]
 8003744:	e7f6      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
  if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 8003746:	2580      	movs	r5, #128	; 0x80
 8003748:	036d      	lsls	r5, r5, #13
 800374a:	422b      	tst	r3, r5
 800374c:	d006      	beq.n	800375c <HAL_UART_IRQHandler+0x130>
 800374e:	0246      	lsls	r6, r0, #9
 8003750:	d504      	bpl.n	800375c <HAL_UART_IRQHandler+0x130>
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 8003752:	6215      	str	r5, [r2, #32]
    HAL_UARTEx_WakeupCallback(huart);
 8003754:	0020      	movs	r0, r4
 8003756:	f000 fe01 	bl	800435c <HAL_UARTEx_WakeupCallback>
    return;
 800375a:	e7eb      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
  if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 800375c:	2580      	movs	r5, #128	; 0x80
 800375e:	422b      	tst	r3, r5
 8003760:	d005      	beq.n	800376e <HAL_UART_IRQHandler+0x142>
      && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 8003762:	4229      	tst	r1, r5
 8003764:	d101      	bne.n	800376a <HAL_UART_IRQHandler+0x13e>
          || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 8003766:	0200      	lsls	r0, r0, #8
 8003768:	d501      	bpl.n	800376e <HAL_UART_IRQHandler+0x142>
    if (huart->TxISR != NULL)
 800376a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800376c:	e770      	b.n	8003650 <HAL_UART_IRQHandler+0x24>
  if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 800376e:	2040      	movs	r0, #64	; 0x40
 8003770:	4203      	tst	r3, r0
 8003772:	d00d      	beq.n	8003790 <HAL_UART_IRQHandler+0x164>
 8003774:	4201      	tst	r1, r0
 8003776:	d00b      	beq.n	8003790 <HAL_UART_IRQHandler+0x164>
  * @retval None
  */
static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
{
  /* Disable the UART Transmit Complete Interrupt */
  CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 8003778:	6813      	ldr	r3, [r2, #0]
 800377a:	4383      	bics	r3, r0
 800377c:	6013      	str	r3, [r2, #0]

  /* Tx process is ended, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 800377e:	2220      	movs	r2, #32
 8003780:	1d23      	adds	r3, r4, #4
 8003782:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Cleat TxISR function pointer */
  huart->TxISR = NULL;
 8003784:	2300      	movs	r3, #0
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx complete callback*/
  huart->TxCpltCallback(huart);
#else
  /*Call legacy weak Tx complete callback*/
  HAL_UART_TxCpltCallback(huart);
 8003786:	0020      	movs	r0, r4
  huart->TxISR = NULL;
 8003788:	6723      	str	r3, [r4, #112]	; 0x70
  HAL_UART_TxCpltCallback(huart);
 800378a:	f7ff ff4d 	bl	8003628 <HAL_UART_TxCpltCallback>
 800378e:	e7d1      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
  if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 8003790:	021a      	lsls	r2, r3, #8
 8003792:	d505      	bpl.n	80037a0 <HAL_UART_IRQHandler+0x174>
 8003794:	004a      	lsls	r2, r1, #1
 8003796:	d503      	bpl.n	80037a0 <HAL_UART_IRQHandler+0x174>
    HAL_UARTEx_TxFifoEmptyCallback(huart);
 8003798:	0020      	movs	r0, r4
 800379a:	f000 fde1 	bl	8004360 <HAL_UARTEx_TxFifoEmptyCallback>
    return;
 800379e:	e7c9      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
  if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 80037a0:	01db      	lsls	r3, r3, #7
 80037a2:	d5c7      	bpl.n	8003734 <HAL_UART_IRQHandler+0x108>
 80037a4:	2900      	cmp	r1, #0
 80037a6:	dac5      	bge.n	8003734 <HAL_UART_IRQHandler+0x108>
    HAL_UARTEx_RxFifoFullCallback(huart);
 80037a8:	0020      	movs	r0, r4
 80037aa:	f000 fdd8 	bl	800435e <HAL_UARTEx_RxFifoFullCallback>
    return;
 80037ae:	e7c1      	b.n	8003734 <HAL_UART_IRQHandler+0x108>
 80037b0:	10000001 	.word	0x10000001
 80037b4:	080037b9 	.word	0x080037b9

080037b8 <UART_DMAAbortOnError>:
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 80037b8:	6a80      	ldr	r0, [r0, #40]	; 0x28
  huart->RxXferCount = 0U;
 80037ba:	2300      	movs	r3, #0
 80037bc:	0002      	movs	r2, r0
{
 80037be:	b510      	push	{r4, lr}
  huart->RxXferCount = 0U;
 80037c0:	325e      	adds	r2, #94	; 0x5e
 80037c2:	8013      	strh	r3, [r2, #0]
  huart->TxXferCount = 0U;
 80037c4:	3a08      	subs	r2, #8
 80037c6:	8013      	strh	r3, [r2, #0]
  HAL_UART_ErrorCallback(huart);
 80037c8:	f7ff ff2f 	bl	800362a <HAL_UART_ErrorCallback>
}
 80037cc:	bd10      	pop	{r4, pc}
	...

080037d0 <UART_SetConfig>:
{
 80037d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037d2:	0004      	movs	r4, r0
  if (UART_INSTANCE_LOWPOWER(huart))
 80037d4:	6802      	ldr	r2, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80037d6:	69c1      	ldr	r1, [r0, #28]
 80037d8:	6883      	ldr	r3, [r0, #8]
 80037da:	6900      	ldr	r0, [r0, #16]
  tmpreg |= (uint32_t)huart->FifoMode;
 80037dc:	6e65      	ldr	r5, [r4, #100]	; 0x64
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80037de:	4303      	orrs	r3, r0
 80037e0:	6960      	ldr	r0, [r4, #20]
 80037e2:	4303      	orrs	r3, r0
 80037e4:	430b      	orrs	r3, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80037e6:	6810      	ldr	r0, [r2, #0]
  tmpreg |= (uint32_t)huart->FifoMode;
 80037e8:	432b      	orrs	r3, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80037ea:	4da4      	ldr	r5, [pc, #656]	; (8003a7c <UART_SetConfig+0x2ac>)
 80037ec:	4028      	ands	r0, r5
 80037ee:	4303      	orrs	r3, r0
 80037f0:	6013      	str	r3, [r2, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80037f2:	6853      	ldr	r3, [r2, #4]
 80037f4:	48a2      	ldr	r0, [pc, #648]	; (8003a80 <UART_SetConfig+0x2b0>)
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 80037f6:	4da3      	ldr	r5, [pc, #652]	; (8003a84 <UART_SetConfig+0x2b4>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80037f8:	4003      	ands	r3, r0
 80037fa:	68e0      	ldr	r0, [r4, #12]
 80037fc:	4303      	orrs	r3, r0
 80037fe:	6053      	str	r3, [r2, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003800:	69a0      	ldr	r0, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8003802:	42aa      	cmp	r2, r5
 8003804:	d001      	beq.n	800380a <UART_SetConfig+0x3a>
    tmpreg |= huart->Init.OneBitSampling;
 8003806:	6a23      	ldr	r3, [r4, #32]
 8003808:	4318      	orrs	r0, r3
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800380a:	6893      	ldr	r3, [r2, #8]
 800380c:	4e9e      	ldr	r6, [pc, #632]	; (8003a88 <UART_SetConfig+0x2b8>)
 800380e:	4033      	ands	r3, r6
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 8003810:	260f      	movs	r6, #15
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003812:	4303      	orrs	r3, r0
 8003814:	6093      	str	r3, [r2, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 8003816:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8003818:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800381a:	43b0      	bics	r0, r6
 800381c:	4318      	orrs	r0, r3
 800381e:	62d0      	str	r0, [r2, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003820:	489a      	ldr	r0, [pc, #616]	; (8003a8c <UART_SetConfig+0x2bc>)
 8003822:	4282      	cmp	r2, r0
 8003824:	d117      	bne.n	8003856 <UART_SetConfig+0x86>
 8003826:	2003      	movs	r0, #3
 8003828:	4a99      	ldr	r2, [pc, #612]	; (8003a90 <UART_SetConfig+0x2c0>)
 800382a:	6d52      	ldr	r2, [r2, #84]	; 0x54
 800382c:	4002      	ands	r2, r0
 800382e:	4899      	ldr	r0, [pc, #612]	; (8003a94 <UART_SetConfig+0x2c4>)
 8003830:	5c80      	ldrb	r0, [r0, r2]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003832:	2280      	movs	r2, #128	; 0x80
 8003834:	0212      	lsls	r2, r2, #8
 8003836:	4291      	cmp	r1, r2
 8003838:	d000      	beq.n	800383c <UART_SetConfig+0x6c>
 800383a:	e289      	b.n	8003d50 <UART_SetConfig+0x580>
    switch (clocksource)
 800383c:	2808      	cmp	r0, #8
 800383e:	d82b      	bhi.n	8003898 <UART_SetConfig+0xc8>
 8003840:	f7fc fc72 	bl	8000128 <__gnu_thumb1_case_uhi>
 8003844:	002a037d 	.word	0x002a037d
 8003848:	002a021a 	.word	0x002a021a
 800384c:	002a024e 	.word	0x002a024e
 8003850:	002a002a 	.word	0x002a002a
 8003854:	0251      	.short	0x0251
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003856:	4890      	ldr	r0, [pc, #576]	; (8003a98 <UART_SetConfig+0x2c8>)
 8003858:	4282      	cmp	r2, r0
 800385a:	d105      	bne.n	8003868 <UART_SetConfig+0x98>
 800385c:	200c      	movs	r0, #12
 800385e:	4a8c      	ldr	r2, [pc, #560]	; (8003a90 <UART_SetConfig+0x2c0>)
 8003860:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8003862:	4002      	ands	r2, r0
 8003864:	488d      	ldr	r0, [pc, #564]	; (8003a9c <UART_SetConfig+0x2cc>)
 8003866:	e7e3      	b.n	8003830 <UART_SetConfig+0x60>
 8003868:	488d      	ldr	r0, [pc, #564]	; (8003aa0 <UART_SetConfig+0x2d0>)
 800386a:	4282      	cmp	r2, r0
 800386c:	d100      	bne.n	8003870 <UART_SetConfig+0xa0>
 800386e:	e361      	b.n	8003f34 <UART_SetConfig+0x764>
 8003870:	488c      	ldr	r0, [pc, #560]	; (8003aa4 <UART_SetConfig+0x2d4>)
 8003872:	4282      	cmp	r2, r0
 8003874:	d100      	bne.n	8003878 <UART_SetConfig+0xa8>
 8003876:	e35d      	b.n	8003f34 <UART_SetConfig+0x764>
 8003878:	2010      	movs	r0, #16
 800387a:	42aa      	cmp	r2, r5
 800387c:	d1d9      	bne.n	8003832 <UART_SetConfig+0x62>
 800387e:	21c0      	movs	r1, #192	; 0xc0
 8003880:	2080      	movs	r0, #128	; 0x80
 8003882:	4a83      	ldr	r2, [pc, #524]	; (8003a90 <UART_SetConfig+0x2c0>)
 8003884:	0109      	lsls	r1, r1, #4
 8003886:	6d52      	ldr	r2, [r2, #84]	; 0x54
 8003888:	00c0      	lsls	r0, r0, #3
 800388a:	400a      	ands	r2, r1
 800388c:	4282      	cmp	r2, r0
 800388e:	d100      	bne.n	8003892 <UART_SetConfig+0xc2>
 8003890:	e09c      	b.n	80039cc <UART_SetConfig+0x1fc>
 8003892:	d80d      	bhi.n	80038b0 <UART_SetConfig+0xe0>
 8003894:	2a00      	cmp	r2, #0
 8003896:	d04e      	beq.n	8003936 <UART_SetConfig+0x166>
        ret = HAL_ERROR;
 8003898:	2201      	movs	r2, #1
  huart->NbTxDataToProcess = 1;
 800389a:	0021      	movs	r1, r4
 800389c:	2301      	movs	r3, #1
 800389e:	316a      	adds	r1, #106	; 0x6a
 80038a0:	800b      	strh	r3, [r1, #0]
  huart->NbRxDataToProcess = 1;
 80038a2:	3902      	subs	r1, #2
 80038a4:	800b      	strh	r3, [r1, #0]
  huart->RxISR = NULL;
 80038a6:	2300      	movs	r3, #0
}
 80038a8:	0010      	movs	r0, r2
  huart->RxISR = NULL;
 80038aa:	66e3      	str	r3, [r4, #108]	; 0x6c
  huart->TxISR = NULL;
 80038ac:	6723      	str	r3, [r4, #112]	; 0x70
}
 80038ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
 80038b0:	2080      	movs	r0, #128	; 0x80
 80038b2:	0100      	lsls	r0, r0, #4
 80038b4:	4282      	cmp	r2, r0
 80038b6:	d06e      	beq.n	8003996 <UART_SetConfig+0x1c6>
 80038b8:	428a      	cmp	r2, r1
 80038ba:	d1ed      	bne.n	8003898 <UART_SetConfig+0xc8>
        lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 80038bc:	2b00      	cmp	r3, #0
 80038be:	d100      	bne.n	80038c2 <UART_SetConfig+0xf2>
 80038c0:	e0c7      	b.n	8003a52 <UART_SetConfig+0x282>
 80038c2:	2b01      	cmp	r3, #1
 80038c4:	d100      	bne.n	80038c8 <UART_SetConfig+0xf8>
 80038c6:	e0c7      	b.n	8003a58 <UART_SetConfig+0x288>
 80038c8:	2b02      	cmp	r3, #2
 80038ca:	d100      	bne.n	80038ce <UART_SetConfig+0xfe>
 80038cc:	e0c8      	b.n	8003a60 <UART_SetConfig+0x290>
 80038ce:	2b03      	cmp	r3, #3
 80038d0:	d100      	bne.n	80038d4 <UART_SetConfig+0x104>
 80038d2:	e0c8      	b.n	8003a66 <UART_SetConfig+0x296>
 80038d4:	2b04      	cmp	r3, #4
 80038d6:	d100      	bne.n	80038da <UART_SetConfig+0x10a>
 80038d8:	e0c7      	b.n	8003a6a <UART_SetConfig+0x29a>
 80038da:	2b05      	cmp	r3, #5
 80038dc:	d100      	bne.n	80038e0 <UART_SetConfig+0x110>
 80038de:	e0c7      	b.n	8003a70 <UART_SetConfig+0x2a0>
 80038e0:	2b06      	cmp	r3, #6
 80038e2:	d100      	bne.n	80038e6 <UART_SetConfig+0x116>
 80038e4:	e0c6      	b.n	8003a74 <UART_SetConfig+0x2a4>
 80038e6:	2180      	movs	r1, #128	; 0x80
 80038e8:	2b07      	cmp	r3, #7
 80038ea:	d100      	bne.n	80038ee <UART_SetConfig+0x11e>
 80038ec:	e0c4      	b.n	8003a78 <UART_SetConfig+0x2a8>
 80038ee:	2b08      	cmp	r3, #8
 80038f0:	d100      	bne.n	80038f4 <UART_SetConfig+0x124>
 80038f2:	e0f7      	b.n	8003ae4 <UART_SetConfig+0x314>
 80038f4:	2b09      	cmp	r3, #9
 80038f6:	d100      	bne.n	80038fa <UART_SetConfig+0x12a>
 80038f8:	e0f6      	b.n	8003ae8 <UART_SetConfig+0x318>
 80038fa:	2b0a      	cmp	r3, #10
 80038fc:	d100      	bne.n	8003900 <UART_SetConfig+0x130>
 80038fe:	e0f5      	b.n	8003aec <UART_SetConfig+0x31c>
 8003900:	2b0b      	cmp	r3, #11
 8003902:	d000      	beq.n	8003906 <UART_SetConfig+0x136>
 8003904:	e0a6      	b.n	8003a54 <UART_SetConfig+0x284>
 8003906:	3b03      	subs	r3, #3
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003908:	2003      	movs	r0, #3
 800390a:	6862      	ldr	r2, [r4, #4]
 800390c:	4350      	muls	r0, r2
 800390e:	4288      	cmp	r0, r1
 8003910:	d8c2      	bhi.n	8003898 <UART_SetConfig+0xc8>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8003912:	0310      	lsls	r0, r2, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003914:	4288      	cmp	r0, r1
 8003916:	d3bf      	bcc.n	8003898 <UART_SetConfig+0xc8>
        switch (clocksource)
 8003918:	2b08      	cmp	r3, #8
 800391a:	d900      	bls.n	800391e <UART_SetConfig+0x14e>
 800391c:	e1a9      	b.n	8003c72 <UART_SetConfig+0x4a2>
 800391e:	0018      	movs	r0, r3
 8003920:	f7fc fc02 	bl	8000128 <__gnu_thumb1_case_uhi>
 8003924:	01a700e6 	.word	0x01a700e6
 8003928:	01a70138 	.word	0x01a70138
 800392c:	01a7016e 	.word	0x01a7016e
 8003930:	01a701a7 	.word	0x01a701a7
 8003934:	0171      	.short	0x0171
        lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 8003936:	f7ff fd4d 	bl	80033d4 <HAL_RCC_GetPCLK1Freq>
 800393a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800393c:	2101      	movs	r1, #1
 800393e:	2b00      	cmp	r3, #0
 8003940:	d021      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003942:	1849      	adds	r1, r1, r1
 8003944:	2b01      	cmp	r3, #1
 8003946:	d01e      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003948:	3102      	adds	r1, #2
 800394a:	2b02      	cmp	r3, #2
 800394c:	d01b      	beq.n	8003986 <UART_SetConfig+0x1b6>
 800394e:	3102      	adds	r1, #2
 8003950:	2b03      	cmp	r3, #3
 8003952:	d018      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003954:	3102      	adds	r1, #2
 8003956:	2b04      	cmp	r3, #4
 8003958:	d015      	beq.n	8003986 <UART_SetConfig+0x1b6>
 800395a:	3102      	adds	r1, #2
 800395c:	2b05      	cmp	r3, #5
 800395e:	d012      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003960:	3102      	adds	r1, #2
 8003962:	2b06      	cmp	r3, #6
 8003964:	d00f      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003966:	3104      	adds	r1, #4
 8003968:	2b07      	cmp	r3, #7
 800396a:	d00c      	beq.n	8003986 <UART_SetConfig+0x1b6>
 800396c:	3110      	adds	r1, #16
 800396e:	2b08      	cmp	r3, #8
 8003970:	d009      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003972:	3120      	adds	r1, #32
 8003974:	2b09      	cmp	r3, #9
 8003976:	d006      	beq.n	8003986 <UART_SetConfig+0x1b6>
 8003978:	3140      	adds	r1, #64	; 0x40
 800397a:	2b0a      	cmp	r3, #10
 800397c:	d003      	beq.n	8003986 <UART_SetConfig+0x1b6>
 800397e:	397f      	subs	r1, #127	; 0x7f
 8003980:	2b0b      	cmp	r3, #11
 8003982:	d100      	bne.n	8003986 <UART_SetConfig+0x1b6>
 8003984:	31ff      	adds	r1, #255	; 0xff
 8003986:	f7fc fbd9 	bl	800013c <__udivsi3>
        break;
 800398a:	2300      	movs	r3, #0
        lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 800398c:	0001      	movs	r1, r0
 800398e:	2200      	movs	r2, #0
    if (lpuart_ker_ck_pres != 0U)
 8003990:	4291      	cmp	r1, r2
 8003992:	d1b9      	bne.n	8003908 <UART_SetConfig+0x138>
 8003994:	e781      	b.n	800389a <UART_SetConfig+0xca>
        lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 8003996:	2b00      	cmp	r3, #0
 8003998:	d059      	beq.n	8003a4e <UART_SetConfig+0x27e>
 800399a:	2b01      	cmp	r3, #1
 800399c:	d043      	beq.n	8003a26 <UART_SetConfig+0x256>
 800399e:	2b02      	cmp	r3, #2
 80039a0:	d043      	beq.n	8003a2a <UART_SetConfig+0x25a>
 80039a2:	2b03      	cmp	r3, #3
 80039a4:	d043      	beq.n	8003a2e <UART_SetConfig+0x25e>
 80039a6:	2b04      	cmp	r3, #4
 80039a8:	d043      	beq.n	8003a32 <UART_SetConfig+0x262>
 80039aa:	2b05      	cmp	r3, #5
 80039ac:	d043      	beq.n	8003a36 <UART_SetConfig+0x266>
 80039ae:	2b06      	cmp	r3, #6
 80039b0:	d043      	beq.n	8003a3a <UART_SetConfig+0x26a>
 80039b2:	2b07      	cmp	r3, #7
 80039b4:	d043      	beq.n	8003a3e <UART_SetConfig+0x26e>
 80039b6:	2b08      	cmp	r3, #8
 80039b8:	d043      	beq.n	8003a42 <UART_SetConfig+0x272>
 80039ba:	2b09      	cmp	r3, #9
 80039bc:	d043      	beq.n	8003a46 <UART_SetConfig+0x276>
 80039be:	2b0a      	cmp	r3, #10
 80039c0:	d043      	beq.n	8003a4a <UART_SetConfig+0x27a>
 80039c2:	2b0b      	cmp	r3, #11
 80039c4:	d143      	bne.n	8003a4e <UART_SetConfig+0x27e>
 80039c6:	4938      	ldr	r1, [pc, #224]	; (8003aa8 <UART_SetConfig+0x2d8>)
 80039c8:	2302      	movs	r3, #2
 80039ca:	e79d      	b.n	8003908 <UART_SetConfig+0x138>
        lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 80039cc:	f7ff fc0e 	bl	80031ec <HAL_RCC_GetSysClockFreq>
 80039d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80039d2:	2101      	movs	r1, #1
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	d021      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039d8:	1849      	adds	r1, r1, r1
 80039da:	2b01      	cmp	r3, #1
 80039dc:	d01e      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039de:	3102      	adds	r1, #2
 80039e0:	2b02      	cmp	r3, #2
 80039e2:	d01b      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039e4:	3102      	adds	r1, #2
 80039e6:	2b03      	cmp	r3, #3
 80039e8:	d018      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039ea:	3102      	adds	r1, #2
 80039ec:	2b04      	cmp	r3, #4
 80039ee:	d015      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039f0:	3102      	adds	r1, #2
 80039f2:	2b05      	cmp	r3, #5
 80039f4:	d012      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039f6:	3102      	adds	r1, #2
 80039f8:	2b06      	cmp	r3, #6
 80039fa:	d00f      	beq.n	8003a1c <UART_SetConfig+0x24c>
 80039fc:	3104      	adds	r1, #4
 80039fe:	2b07      	cmp	r3, #7
 8003a00:	d00c      	beq.n	8003a1c <UART_SetConfig+0x24c>
 8003a02:	3110      	adds	r1, #16
 8003a04:	2b08      	cmp	r3, #8
 8003a06:	d009      	beq.n	8003a1c <UART_SetConfig+0x24c>
 8003a08:	3120      	adds	r1, #32
 8003a0a:	2b09      	cmp	r3, #9
 8003a0c:	d006      	beq.n	8003a1c <UART_SetConfig+0x24c>
 8003a0e:	3140      	adds	r1, #64	; 0x40
 8003a10:	2b0a      	cmp	r3, #10
 8003a12:	d003      	beq.n	8003a1c <UART_SetConfig+0x24c>
 8003a14:	397f      	subs	r1, #127	; 0x7f
 8003a16:	2b0b      	cmp	r3, #11
 8003a18:	d100      	bne.n	8003a1c <UART_SetConfig+0x24c>
 8003a1a:	31ff      	adds	r1, #255	; 0xff
 8003a1c:	f7fc fb8e 	bl	800013c <__udivsi3>
        break;
 8003a20:	2304      	movs	r3, #4
        lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 8003a22:	0001      	movs	r1, r0
        break;
 8003a24:	e7b3      	b.n	800398e <UART_SetConfig+0x1be>
        lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 8003a26:	4921      	ldr	r1, [pc, #132]	; (8003aac <UART_SetConfig+0x2dc>)
 8003a28:	e7ce      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a2a:	4921      	ldr	r1, [pc, #132]	; (8003ab0 <UART_SetConfig+0x2e0>)
 8003a2c:	e76c      	b.n	8003908 <UART_SetConfig+0x138>
 8003a2e:	4921      	ldr	r1, [pc, #132]	; (8003ab4 <UART_SetConfig+0x2e4>)
 8003a30:	e7ca      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a32:	4921      	ldr	r1, [pc, #132]	; (8003ab8 <UART_SetConfig+0x2e8>)
 8003a34:	e7c8      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a36:	4921      	ldr	r1, [pc, #132]	; (8003abc <UART_SetConfig+0x2ec>)
 8003a38:	e7c6      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a3a:	4921      	ldr	r1, [pc, #132]	; (8003ac0 <UART_SetConfig+0x2f0>)
 8003a3c:	e7c4      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a3e:	4921      	ldr	r1, [pc, #132]	; (8003ac4 <UART_SetConfig+0x2f4>)
 8003a40:	e7c2      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a42:	4921      	ldr	r1, [pc, #132]	; (8003ac8 <UART_SetConfig+0x2f8>)
 8003a44:	e7c0      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a46:	4921      	ldr	r1, [pc, #132]	; (8003acc <UART_SetConfig+0x2fc>)
 8003a48:	e7be      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a4a:	4921      	ldr	r1, [pc, #132]	; (8003ad0 <UART_SetConfig+0x300>)
 8003a4c:	e7bc      	b.n	80039c8 <UART_SetConfig+0x1f8>
 8003a4e:	4921      	ldr	r1, [pc, #132]	; (8003ad4 <UART_SetConfig+0x304>)
 8003a50:	e7ba      	b.n	80039c8 <UART_SetConfig+0x1f8>
        lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler));
 8003a52:	2180      	movs	r1, #128	; 0x80
 8003a54:	0209      	lsls	r1, r1, #8
 8003a56:	e001      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a58:	2180      	movs	r1, #128	; 0x80
 8003a5a:	01c9      	lsls	r1, r1, #7
 8003a5c:	2308      	movs	r3, #8
 8003a5e:	e753      	b.n	8003908 <UART_SetConfig+0x138>
 8003a60:	2180      	movs	r1, #128	; 0x80
 8003a62:	0189      	lsls	r1, r1, #6
 8003a64:	e7fa      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a66:	491c      	ldr	r1, [pc, #112]	; (8003ad8 <UART_SetConfig+0x308>)
 8003a68:	e7f8      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a6a:	2180      	movs	r1, #128	; 0x80
 8003a6c:	0149      	lsls	r1, r1, #5
 8003a6e:	e7f5      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a70:	491a      	ldr	r1, [pc, #104]	; (8003adc <UART_SetConfig+0x30c>)
 8003a72:	e7f3      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a74:	491a      	ldr	r1, [pc, #104]	; (8003ae0 <UART_SetConfig+0x310>)
 8003a76:	e7f1      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a78:	0109      	lsls	r1, r1, #4
 8003a7a:	e7ef      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003a7c:	cfff69f3 	.word	0xcfff69f3
 8003a80:	ffffcfff 	.word	0xffffcfff
 8003a84:	40008000 	.word	0x40008000
 8003a88:	11fff4ff 	.word	0x11fff4ff
 8003a8c:	40013800 	.word	0x40013800
 8003a90:	40021000 	.word	0x40021000
 8003a94:	080071f0 	.word	0x080071f0
 8003a98:	40004400 	.word	0x40004400
 8003a9c:	080071f4 	.word	0x080071f4
 8003aa0:	40004800 	.word	0x40004800
 8003aa4:	40004c00 	.word	0x40004c00
 8003aa8:	0000f424 	.word	0x0000f424
 8003aac:	007a1200 	.word	0x007a1200
 8003ab0:	003d0900 	.word	0x003d0900
 8003ab4:	0028b0aa 	.word	0x0028b0aa
 8003ab8:	001e8480 	.word	0x001e8480
 8003abc:	00186a00 	.word	0x00186a00
 8003ac0:	00145855 	.word	0x00145855
 8003ac4:	000f4240 	.word	0x000f4240
 8003ac8:	0007a120 	.word	0x0007a120
 8003acc:	0003d090 	.word	0x0003d090
 8003ad0:	0001e848 	.word	0x0001e848
 8003ad4:	00f42400 	.word	0x00f42400
 8003ad8:	00001555 	.word	0x00001555
 8003adc:	00000ccc 	.word	0x00000ccc
 8003ae0:	00000aaa 	.word	0x00000aaa
 8003ae4:	00c9      	lsls	r1, r1, #3
 8003ae6:	e70f      	b.n	8003908 <UART_SetConfig+0x138>
 8003ae8:	0089      	lsls	r1, r1, #2
 8003aea:	e7b7      	b.n	8003a5c <UART_SetConfig+0x28c>
 8003aec:	0049      	lsls	r1, r1, #1
 8003aee:	e7b5      	b.n	8003a5c <UART_SetConfig+0x28c>
            pclk = HAL_RCC_GetPCLK1Freq();
 8003af0:	f7ff fc70 	bl	80033d4 <HAL_RCC_GetPCLK1Freq>
            usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003af4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8003af6:	2201      	movs	r2, #1
 8003af8:	2300      	movs	r3, #0
 8003afa:	2900      	cmp	r1, #0
 8003afc:	d02e      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003afe:	2202      	movs	r2, #2
 8003b00:	2300      	movs	r3, #0
 8003b02:	2901      	cmp	r1, #1
 8003b04:	d02a      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b06:	2204      	movs	r2, #4
 8003b08:	2300      	movs	r3, #0
 8003b0a:	2902      	cmp	r1, #2
 8003b0c:	d026      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b0e:	2206      	movs	r2, #6
 8003b10:	2300      	movs	r3, #0
 8003b12:	2903      	cmp	r1, #3
 8003b14:	d022      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b16:	2208      	movs	r2, #8
 8003b18:	2300      	movs	r3, #0
 8003b1a:	2904      	cmp	r1, #4
 8003b1c:	d01e      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b1e:	220a      	movs	r2, #10
 8003b20:	2300      	movs	r3, #0
 8003b22:	2905      	cmp	r1, #5
 8003b24:	d01a      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b26:	220c      	movs	r2, #12
 8003b28:	2300      	movs	r3, #0
 8003b2a:	2906      	cmp	r1, #6
 8003b2c:	d016      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b2e:	2210      	movs	r2, #16
 8003b30:	2300      	movs	r3, #0
 8003b32:	2907      	cmp	r1, #7
 8003b34:	d012      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b36:	2220      	movs	r2, #32
 8003b38:	2300      	movs	r3, #0
 8003b3a:	2908      	cmp	r1, #8
 8003b3c:	d00e      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b3e:	2240      	movs	r2, #64	; 0x40
 8003b40:	2300      	movs	r3, #0
 8003b42:	2909      	cmp	r1, #9
 8003b44:	d00a      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b46:	2280      	movs	r2, #128	; 0x80
 8003b48:	2300      	movs	r3, #0
 8003b4a:	290a      	cmp	r1, #10
 8003b4c:	d006      	beq.n	8003b5c <UART_SetConfig+0x38c>
 8003b4e:	2201      	movs	r2, #1
 8003b50:	2300      	movs	r3, #0
 8003b52:	290b      	cmp	r1, #11
 8003b54:	d102      	bne.n	8003b5c <UART_SetConfig+0x38c>
 8003b56:	2280      	movs	r2, #128	; 0x80
 8003b58:	2300      	movs	r3, #0
 8003b5a:	0052      	lsls	r2, r2, #1
 8003b5c:	2100      	movs	r1, #0
 8003b5e:	f7fc fca1 	bl	80004a4 <__aeabi_uldivmod>
 8003b62:	2700      	movs	r7, #0
 8003b64:	6865      	ldr	r5, [r4, #4]
 8003b66:	0e06      	lsrs	r6, r0, #24
 8003b68:	020b      	lsls	r3, r1, #8
 8003b6a:	4333      	orrs	r3, r6
 8003b6c:	0202      	lsls	r2, r0, #8
 8003b6e:	086e      	lsrs	r6, r5, #1
 8003b70:	1992      	adds	r2, r2, r6
 8003b72:	417b      	adcs	r3, r7
 8003b74:	0010      	movs	r0, r2
 8003b76:	0019      	movs	r1, r3
 8003b78:	002a      	movs	r2, r5
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003b7a:	003b      	movs	r3, r7
 8003b7c:	f7fc fc92 	bl	80004a4 <__aeabi_uldivmod>
            break;
 8003b80:	003a      	movs	r2, r7
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8003b82:	4b96      	ldr	r3, [pc, #600]	; (8003ddc <UART_SetConfig+0x60c>)
 8003b84:	4996      	ldr	r1, [pc, #600]	; (8003de0 <UART_SetConfig+0x610>)
 8003b86:	18c3      	adds	r3, r0, r3
 8003b88:	428b      	cmp	r3, r1
 8003b8a:	d900      	bls.n	8003b8e <UART_SetConfig+0x3be>
 8003b8c:	e684      	b.n	8003898 <UART_SetConfig+0xc8>
          huart->Instance->BRR = usartdiv;
 8003b8e:	6823      	ldr	r3, [r4, #0]
 8003b90:	60d8      	str	r0, [r3, #12]
 8003b92:	e682      	b.n	800389a <UART_SetConfig+0xca>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003b94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d030      	beq.n	8003bfc <UART_SetConfig+0x42c>
 8003b9a:	2b01      	cmp	r3, #1
 8003b9c:	d01a      	beq.n	8003bd4 <UART_SetConfig+0x404>
 8003b9e:	2b02      	cmp	r3, #2
 8003ba0:	d01a      	beq.n	8003bd8 <UART_SetConfig+0x408>
 8003ba2:	2b03      	cmp	r3, #3
 8003ba4:	d01a      	beq.n	8003bdc <UART_SetConfig+0x40c>
 8003ba6:	2b04      	cmp	r3, #4
 8003ba8:	d01a      	beq.n	8003be0 <UART_SetConfig+0x410>
 8003baa:	2b05      	cmp	r3, #5
 8003bac:	d01a      	beq.n	8003be4 <UART_SetConfig+0x414>
 8003bae:	2b06      	cmp	r3, #6
 8003bb0:	d01a      	beq.n	8003be8 <UART_SetConfig+0x418>
 8003bb2:	2b07      	cmp	r3, #7
 8003bb4:	d01a      	beq.n	8003bec <UART_SetConfig+0x41c>
 8003bb6:	2b08      	cmp	r3, #8
 8003bb8:	d01a      	beq.n	8003bf0 <UART_SetConfig+0x420>
 8003bba:	2b09      	cmp	r3, #9
 8003bbc:	d01a      	beq.n	8003bf4 <UART_SetConfig+0x424>
 8003bbe:	2b0a      	cmp	r3, #10
 8003bc0:	d01a      	beq.n	8003bf8 <UART_SetConfig+0x428>
 8003bc2:	2b0b      	cmp	r3, #11
 8003bc4:	d11a      	bne.n	8003bfc <UART_SetConfig+0x42c>
 8003bc6:	4887      	ldr	r0, [pc, #540]	; (8003de4 <UART_SetConfig+0x614>)
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003bc8:	2100      	movs	r1, #0
 8003bca:	2700      	movs	r7, #0
 8003bcc:	0856      	lsrs	r6, r2, #1
 8003bce:	1980      	adds	r0, r0, r6
 8003bd0:	4179      	adcs	r1, r7
 8003bd2:	e7d2      	b.n	8003b7a <UART_SetConfig+0x3aa>
            usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003bd4:	4884      	ldr	r0, [pc, #528]	; (8003de8 <UART_SetConfig+0x618>)
 8003bd6:	e7f7      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bd8:	4884      	ldr	r0, [pc, #528]	; (8003dec <UART_SetConfig+0x61c>)
 8003bda:	e7f5      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bdc:	4884      	ldr	r0, [pc, #528]	; (8003df0 <UART_SetConfig+0x620>)
 8003bde:	e7f3      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003be0:	4884      	ldr	r0, [pc, #528]	; (8003df4 <UART_SetConfig+0x624>)
 8003be2:	e7f1      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003be4:	4884      	ldr	r0, [pc, #528]	; (8003df8 <UART_SetConfig+0x628>)
 8003be6:	e7ef      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003be8:	4884      	ldr	r0, [pc, #528]	; (8003dfc <UART_SetConfig+0x62c>)
 8003bea:	e7ed      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bec:	4884      	ldr	r0, [pc, #528]	; (8003e00 <UART_SetConfig+0x630>)
 8003bee:	e7eb      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bf0:	4884      	ldr	r0, [pc, #528]	; (8003e04 <UART_SetConfig+0x634>)
 8003bf2:	e7e9      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bf4:	4884      	ldr	r0, [pc, #528]	; (8003e08 <UART_SetConfig+0x638>)
 8003bf6:	e7e7      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bf8:	4884      	ldr	r0, [pc, #528]	; (8003e0c <UART_SetConfig+0x63c>)
 8003bfa:	e7e5      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003bfc:	4884      	ldr	r0, [pc, #528]	; (8003e10 <UART_SetConfig+0x640>)
 8003bfe:	e7e3      	b.n	8003bc8 <UART_SetConfig+0x3f8>
            pclk = HAL_RCC_GetSysClockFreq();
 8003c00:	f7ff faf4 	bl	80031ec <HAL_RCC_GetSysClockFreq>
 8003c04:	e776      	b.n	8003af4 <UART_SetConfig+0x324>
            usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003c06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	d018      	beq.n	8003c3e <UART_SetConfig+0x46e>
 8003c0c:	2b01      	cmp	r3, #1
 8003c0e:	d019      	beq.n	8003c44 <UART_SetConfig+0x474>
 8003c10:	2b02      	cmp	r3, #2
 8003c12:	d01a      	beq.n	8003c4a <UART_SetConfig+0x47a>
 8003c14:	2b03      	cmp	r3, #3
 8003c16:	d01b      	beq.n	8003c50 <UART_SetConfig+0x480>
 8003c18:	2b04      	cmp	r3, #4
 8003c1a:	d01b      	beq.n	8003c54 <UART_SetConfig+0x484>
 8003c1c:	2b05      	cmp	r3, #5
 8003c1e:	d01c      	beq.n	8003c5a <UART_SetConfig+0x48a>
 8003c20:	2b06      	cmp	r3, #6
 8003c22:	d01c      	beq.n	8003c5e <UART_SetConfig+0x48e>
 8003c24:	2080      	movs	r0, #128	; 0x80
 8003c26:	2b07      	cmp	r3, #7
 8003c28:	d01b      	beq.n	8003c62 <UART_SetConfig+0x492>
 8003c2a:	2b08      	cmp	r3, #8
 8003c2c:	d01b      	beq.n	8003c66 <UART_SetConfig+0x496>
 8003c2e:	2b09      	cmp	r3, #9
 8003c30:	d01b      	beq.n	8003c6a <UART_SetConfig+0x49a>
 8003c32:	2b0a      	cmp	r3, #10
 8003c34:	d01b      	beq.n	8003c6e <UART_SetConfig+0x49e>
 8003c36:	2b0b      	cmp	r3, #11
 8003c38:	d102      	bne.n	8003c40 <UART_SetConfig+0x470>
 8003c3a:	0200      	lsls	r0, r0, #8
 8003c3c:	e7c4      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c3e:	2080      	movs	r0, #128	; 0x80
 8003c40:	0400      	lsls	r0, r0, #16
 8003c42:	e7c1      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c44:	2080      	movs	r0, #128	; 0x80
 8003c46:	03c0      	lsls	r0, r0, #15
 8003c48:	e7be      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c4a:	2080      	movs	r0, #128	; 0x80
 8003c4c:	0380      	lsls	r0, r0, #14
 8003c4e:	e7bb      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c50:	4870      	ldr	r0, [pc, #448]	; (8003e14 <UART_SetConfig+0x644>)
 8003c52:	e7b9      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c54:	2080      	movs	r0, #128	; 0x80
 8003c56:	0340      	lsls	r0, r0, #13
 8003c58:	e7b6      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c5a:	486f      	ldr	r0, [pc, #444]	; (8003e18 <UART_SetConfig+0x648>)
 8003c5c:	e7b4      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c5e:	486f      	ldr	r0, [pc, #444]	; (8003e1c <UART_SetConfig+0x64c>)
 8003c60:	e7b2      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c62:	0300      	lsls	r0, r0, #12
 8003c64:	e7b0      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c66:	02c0      	lsls	r0, r0, #11
 8003c68:	e7ae      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c6a:	0280      	lsls	r0, r0, #10
 8003c6c:	e7ac      	b.n	8003bc8 <UART_SetConfig+0x3f8>
 8003c6e:	0240      	lsls	r0, r0, #9
 8003c70:	e7aa      	b.n	8003bc8 <UART_SetConfig+0x3f8>
            ret = HAL_ERROR;
 8003c72:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8003c74:	2000      	movs	r0, #0
 8003c76:	e784      	b.n	8003b82 <UART_SetConfig+0x3b2>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	d02f      	beq.n	8003cdc <UART_SetConfig+0x50c>
 8003c7c:	2b01      	cmp	r3, #1
 8003c7e:	d019      	beq.n	8003cb4 <UART_SetConfig+0x4e4>
 8003c80:	2b02      	cmp	r3, #2
 8003c82:	d019      	beq.n	8003cb8 <UART_SetConfig+0x4e8>
 8003c84:	2b03      	cmp	r3, #3
 8003c86:	d019      	beq.n	8003cbc <UART_SetConfig+0x4ec>
 8003c88:	2b04      	cmp	r3, #4
 8003c8a:	d019      	beq.n	8003cc0 <UART_SetConfig+0x4f0>
 8003c8c:	2b05      	cmp	r3, #5
 8003c8e:	d019      	beq.n	8003cc4 <UART_SetConfig+0x4f4>
 8003c90:	2b06      	cmp	r3, #6
 8003c92:	d019      	beq.n	8003cc8 <UART_SetConfig+0x4f8>
 8003c94:	2b07      	cmp	r3, #7
 8003c96:	d019      	beq.n	8003ccc <UART_SetConfig+0x4fc>
 8003c98:	2b08      	cmp	r3, #8
 8003c9a:	d019      	beq.n	8003cd0 <UART_SetConfig+0x500>
 8003c9c:	2b09      	cmp	r3, #9
 8003c9e:	d019      	beq.n	8003cd4 <UART_SetConfig+0x504>
 8003ca0:	2b0a      	cmp	r3, #10
 8003ca2:	d019      	beq.n	8003cd8 <UART_SetConfig+0x508>
 8003ca4:	2b0b      	cmp	r3, #11
 8003ca6:	d119      	bne.n	8003cdc <UART_SetConfig+0x50c>
 8003ca8:	485d      	ldr	r0, [pc, #372]	; (8003e20 <UART_SetConfig+0x650>)
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003caa:	6863      	ldr	r3, [r4, #4]
 8003cac:	6861      	ldr	r1, [r4, #4]
 8003cae:	085b      	lsrs	r3, r3, #1
 8003cb0:	1818      	adds	r0, r3, r0
 8003cb2:	e173      	b.n	8003f9c <UART_SetConfig+0x7cc>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003cb4:	484b      	ldr	r0, [pc, #300]	; (8003de4 <UART_SetConfig+0x614>)
 8003cb6:	e7f8      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cb8:	485a      	ldr	r0, [pc, #360]	; (8003e24 <UART_SetConfig+0x654>)
 8003cba:	e7f6      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cbc:	485a      	ldr	r0, [pc, #360]	; (8003e28 <UART_SetConfig+0x658>)
 8003cbe:	e7f4      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cc0:	485a      	ldr	r0, [pc, #360]	; (8003e2c <UART_SetConfig+0x65c>)
 8003cc2:	e7f2      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cc4:	485a      	ldr	r0, [pc, #360]	; (8003e30 <UART_SetConfig+0x660>)
 8003cc6:	e7f0      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cc8:	485a      	ldr	r0, [pc, #360]	; (8003e34 <UART_SetConfig+0x664>)
 8003cca:	e7ee      	b.n	8003caa <UART_SetConfig+0x4da>
 8003ccc:	485a      	ldr	r0, [pc, #360]	; (8003e38 <UART_SetConfig+0x668>)
 8003cce:	e7ec      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cd0:	485a      	ldr	r0, [pc, #360]	; (8003e3c <UART_SetConfig+0x66c>)
 8003cd2:	e7ea      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cd4:	485a      	ldr	r0, [pc, #360]	; (8003e40 <UART_SetConfig+0x670>)
 8003cd6:	e7e8      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cd8:	485a      	ldr	r0, [pc, #360]	; (8003e44 <UART_SetConfig+0x674>)
 8003cda:	e7e6      	b.n	8003caa <UART_SetConfig+0x4da>
 8003cdc:	484b      	ldr	r0, [pc, #300]	; (8003e0c <UART_SetConfig+0x63c>)
 8003cde:	e7e4      	b.n	8003caa <UART_SetConfig+0x4da>
        pclk = HAL_RCC_GetSysClockFreq();
 8003ce0:	f7ff fa84 	bl	80031ec <HAL_RCC_GetSysClockFreq>
 8003ce4:	e12d      	b.n	8003f42 <UART_SetConfig+0x772>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d018      	beq.n	8003d1c <UART_SetConfig+0x54c>
 8003cea:	2b01      	cmp	r3, #1
 8003cec:	d019      	beq.n	8003d22 <UART_SetConfig+0x552>
 8003cee:	2b02      	cmp	r3, #2
 8003cf0:	d01a      	beq.n	8003d28 <UART_SetConfig+0x558>
 8003cf2:	2b03      	cmp	r3, #3
 8003cf4:	d01b      	beq.n	8003d2e <UART_SetConfig+0x55e>
 8003cf6:	2b04      	cmp	r3, #4
 8003cf8:	d01b      	beq.n	8003d32 <UART_SetConfig+0x562>
 8003cfa:	2b05      	cmp	r3, #5
 8003cfc:	d01c      	beq.n	8003d38 <UART_SetConfig+0x568>
 8003cfe:	2b06      	cmp	r3, #6
 8003d00:	d01c      	beq.n	8003d3c <UART_SetConfig+0x56c>
 8003d02:	2080      	movs	r0, #128	; 0x80
 8003d04:	2b07      	cmp	r3, #7
 8003d06:	d01b      	beq.n	8003d40 <UART_SetConfig+0x570>
 8003d08:	2b08      	cmp	r3, #8
 8003d0a:	d01b      	beq.n	8003d44 <UART_SetConfig+0x574>
 8003d0c:	2b09      	cmp	r3, #9
 8003d0e:	d01b      	beq.n	8003d48 <UART_SetConfig+0x578>
 8003d10:	2b0a      	cmp	r3, #10
 8003d12:	d01b      	beq.n	8003d4c <UART_SetConfig+0x57c>
 8003d14:	2b0b      	cmp	r3, #11
 8003d16:	d102      	bne.n	8003d1e <UART_SetConfig+0x54e>
 8003d18:	0040      	lsls	r0, r0, #1
 8003d1a:	e7c6      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d1c:	2080      	movs	r0, #128	; 0x80
 8003d1e:	0240      	lsls	r0, r0, #9
 8003d20:	e7c3      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d22:	2080      	movs	r0, #128	; 0x80
 8003d24:	0200      	lsls	r0, r0, #8
 8003d26:	e7c0      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d28:	2080      	movs	r0, #128	; 0x80
 8003d2a:	01c0      	lsls	r0, r0, #7
 8003d2c:	e7bd      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d2e:	4846      	ldr	r0, [pc, #280]	; (8003e48 <UART_SetConfig+0x678>)
 8003d30:	e7bb      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d32:	2080      	movs	r0, #128	; 0x80
 8003d34:	0180      	lsls	r0, r0, #6
 8003d36:	e7b8      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d38:	4844      	ldr	r0, [pc, #272]	; (8003e4c <UART_SetConfig+0x67c>)
 8003d3a:	e7b6      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d3c:	4844      	ldr	r0, [pc, #272]	; (8003e50 <UART_SetConfig+0x680>)
 8003d3e:	e7b4      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d40:	0140      	lsls	r0, r0, #5
 8003d42:	e7b2      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d44:	0100      	lsls	r0, r0, #4
 8003d46:	e7b0      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d48:	00c0      	lsls	r0, r0, #3
 8003d4a:	e7ae      	b.n	8003caa <UART_SetConfig+0x4da>
 8003d4c:	0080      	lsls	r0, r0, #2
 8003d4e:	e7ac      	b.n	8003caa <UART_SetConfig+0x4da>
    switch (clocksource)
 8003d50:	2808      	cmp	r0, #8
 8003d52:	d900      	bls.n	8003d56 <UART_SetConfig+0x586>
 8003d54:	e0eb      	b.n	8003f2e <UART_SetConfig+0x75e>
 8003d56:	f7fc f9dd 	bl	8000114 <__gnu_thumb1_case_uqi>
 8003d5a:	ea05      	.short	0xea05
 8003d5c:	eab3ea7f 	.word	0xeab3ea7f
 8003d60:	eaea      	.short	0xeaea
 8003d62:	b6          	.byte	0xb6
 8003d63:	00          	.byte	0x00
        pclk = HAL_RCC_GetPCLK1Freq();
 8003d64:	f7ff fb36 	bl	80033d4 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003d68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003d6a:	2101      	movs	r1, #1
 8003d6c:	2b00      	cmp	r3, #0
 8003d6e:	d021      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d70:	1849      	adds	r1, r1, r1
 8003d72:	2b01      	cmp	r3, #1
 8003d74:	d01e      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d76:	3102      	adds	r1, #2
 8003d78:	2b02      	cmp	r3, #2
 8003d7a:	d01b      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d7c:	3102      	adds	r1, #2
 8003d7e:	2b03      	cmp	r3, #3
 8003d80:	d018      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d82:	3102      	adds	r1, #2
 8003d84:	2b04      	cmp	r3, #4
 8003d86:	d015      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d88:	3102      	adds	r1, #2
 8003d8a:	2b05      	cmp	r3, #5
 8003d8c:	d012      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d8e:	3102      	adds	r1, #2
 8003d90:	2b06      	cmp	r3, #6
 8003d92:	d00f      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d94:	3104      	adds	r1, #4
 8003d96:	2b07      	cmp	r3, #7
 8003d98:	d00c      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003d9a:	3110      	adds	r1, #16
 8003d9c:	2b08      	cmp	r3, #8
 8003d9e:	d009      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003da0:	3120      	adds	r1, #32
 8003da2:	2b09      	cmp	r3, #9
 8003da4:	d006      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003da6:	3140      	adds	r1, #64	; 0x40
 8003da8:	2b0a      	cmp	r3, #10
 8003daa:	d003      	beq.n	8003db4 <UART_SetConfig+0x5e4>
 8003dac:	397f      	subs	r1, #127	; 0x7f
 8003dae:	2b0b      	cmp	r3, #11
 8003db0:	d100      	bne.n	8003db4 <UART_SetConfig+0x5e4>
 8003db2:	31ff      	adds	r1, #255	; 0xff
 8003db4:	6865      	ldr	r5, [r4, #4]
 8003db6:	f7fc f9c1 	bl	800013c <__udivsi3>
 8003dba:	0029      	movs	r1, r5
 8003dbc:	086b      	lsrs	r3, r5, #1
 8003dbe:	18c0      	adds	r0, r0, r3
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003dc0:	f7fc f9bc 	bl	800013c <__udivsi3>
  HAL_StatusTypeDef ret               = HAL_OK;
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	b283      	uxth	r3, r0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003dc8:	0019      	movs	r1, r3
 8003dca:	4822      	ldr	r0, [pc, #136]	; (8003e54 <UART_SetConfig+0x684>)
 8003dcc:	3910      	subs	r1, #16
 8003dce:	4281      	cmp	r1, r0
 8003dd0:	d900      	bls.n	8003dd4 <UART_SetConfig+0x604>
 8003dd2:	e561      	b.n	8003898 <UART_SetConfig+0xc8>
      huart->Instance->BRR = usartdiv;
 8003dd4:	6821      	ldr	r1, [r4, #0]
 8003dd6:	60cb      	str	r3, [r1, #12]
 8003dd8:	e55f      	b.n	800389a <UART_SetConfig+0xca>
 8003dda:	46c0      	nop			; (mov r8, r8)
 8003ddc:	fffffd00 	.word	0xfffffd00
 8003de0:	000ffcff 	.word	0x000ffcff
 8003de4:	00f42400 	.word	0x00f42400
 8003de8:	7a120000 	.word	0x7a120000
 8003dec:	3d090000 	.word	0x3d090000
 8003df0:	28b0aa00 	.word	0x28b0aa00
 8003df4:	1e848000 	.word	0x1e848000
 8003df8:	186a0000 	.word	0x186a0000
 8003dfc:	14585500 	.word	0x14585500
 8003e00:	0f424000 	.word	0x0f424000
 8003e04:	07a12000 	.word	0x07a12000
 8003e08:	03d09000 	.word	0x03d09000
 8003e0c:	01e84800 	.word	0x01e84800
 8003e10:	f4240000 	.word	0xf4240000
 8003e14:	00155500 	.word	0x00155500
 8003e18:	000ccc00 	.word	0x000ccc00
 8003e1c:	000aaa00 	.word	0x000aaa00
 8003e20:	0001e848 	.word	0x0001e848
 8003e24:	007a1200 	.word	0x007a1200
 8003e28:	00516154 	.word	0x00516154
 8003e2c:	003d0900 	.word	0x003d0900
 8003e30:	0030d400 	.word	0x0030d400
 8003e34:	0028b0aa 	.word	0x0028b0aa
 8003e38:	001e8480 	.word	0x001e8480
 8003e3c:	000f4240 	.word	0x000f4240
 8003e40:	0007a120 	.word	0x0007a120
 8003e44:	0003d090 	.word	0x0003d090
 8003e48:	00002aaa 	.word	0x00002aaa
 8003e4c:	00001998 	.word	0x00001998
 8003e50:	00001554 	.word	0x00001554
 8003e54:	0000ffef 	.word	0x0000ffef
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003e58:	2b00      	cmp	r3, #0
 8003e5a:	d02f      	beq.n	8003ebc <UART_SetConfig+0x6ec>
 8003e5c:	2b01      	cmp	r3, #1
 8003e5e:	d019      	beq.n	8003e94 <UART_SetConfig+0x6c4>
 8003e60:	2b02      	cmp	r3, #2
 8003e62:	d019      	beq.n	8003e98 <UART_SetConfig+0x6c8>
 8003e64:	2b03      	cmp	r3, #3
 8003e66:	d019      	beq.n	8003e9c <UART_SetConfig+0x6cc>
 8003e68:	2b04      	cmp	r3, #4
 8003e6a:	d019      	beq.n	8003ea0 <UART_SetConfig+0x6d0>
 8003e6c:	2b05      	cmp	r3, #5
 8003e6e:	d019      	beq.n	8003ea4 <UART_SetConfig+0x6d4>
 8003e70:	2b06      	cmp	r3, #6
 8003e72:	d019      	beq.n	8003ea8 <UART_SetConfig+0x6d8>
 8003e74:	2b07      	cmp	r3, #7
 8003e76:	d019      	beq.n	8003eac <UART_SetConfig+0x6dc>
 8003e78:	2b08      	cmp	r3, #8
 8003e7a:	d019      	beq.n	8003eb0 <UART_SetConfig+0x6e0>
 8003e7c:	2b09      	cmp	r3, #9
 8003e7e:	d019      	beq.n	8003eb4 <UART_SetConfig+0x6e4>
 8003e80:	2b0a      	cmp	r3, #10
 8003e82:	d019      	beq.n	8003eb8 <UART_SetConfig+0x6e8>
 8003e84:	2b0b      	cmp	r3, #11
 8003e86:	d119      	bne.n	8003ebc <UART_SetConfig+0x6ec>
 8003e88:	484e      	ldr	r0, [pc, #312]	; (8003fc4 <UART_SetConfig+0x7f4>)
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003e8a:	6863      	ldr	r3, [r4, #4]
 8003e8c:	6861      	ldr	r1, [r4, #4]
 8003e8e:	085b      	lsrs	r3, r3, #1
 8003e90:	1818      	adds	r0, r3, r0
 8003e92:	e795      	b.n	8003dc0 <UART_SetConfig+0x5f0>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003e94:	484c      	ldr	r0, [pc, #304]	; (8003fc8 <UART_SetConfig+0x7f8>)
 8003e96:	e7f8      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003e98:	484c      	ldr	r0, [pc, #304]	; (8003fcc <UART_SetConfig+0x7fc>)
 8003e9a:	e7f6      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003e9c:	484c      	ldr	r0, [pc, #304]	; (8003fd0 <UART_SetConfig+0x800>)
 8003e9e:	e7f4      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003ea0:	484c      	ldr	r0, [pc, #304]	; (8003fd4 <UART_SetConfig+0x804>)
 8003ea2:	e7f2      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003ea4:	484c      	ldr	r0, [pc, #304]	; (8003fd8 <UART_SetConfig+0x808>)
 8003ea6:	e7f0      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003ea8:	484c      	ldr	r0, [pc, #304]	; (8003fdc <UART_SetConfig+0x80c>)
 8003eaa:	e7ee      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003eac:	484c      	ldr	r0, [pc, #304]	; (8003fe0 <UART_SetConfig+0x810>)
 8003eae:	e7ec      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003eb0:	484c      	ldr	r0, [pc, #304]	; (8003fe4 <UART_SetConfig+0x814>)
 8003eb2:	e7ea      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003eb4:	484c      	ldr	r0, [pc, #304]	; (8003fe8 <UART_SetConfig+0x818>)
 8003eb6:	e7e8      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003eb8:	484c      	ldr	r0, [pc, #304]	; (8003fec <UART_SetConfig+0x81c>)
 8003eba:	e7e6      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003ebc:	484c      	ldr	r0, [pc, #304]	; (8003ff0 <UART_SetConfig+0x820>)
 8003ebe:	e7e4      	b.n	8003e8a <UART_SetConfig+0x6ba>
        pclk = HAL_RCC_GetSysClockFreq();
 8003ec0:	f7ff f994 	bl	80031ec <HAL_RCC_GetSysClockFreq>
 8003ec4:	e750      	b.n	8003d68 <UART_SetConfig+0x598>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003ec6:	2b00      	cmp	r3, #0
 8003ec8:	d018      	beq.n	8003efc <UART_SetConfig+0x72c>
 8003eca:	2b01      	cmp	r3, #1
 8003ecc:	d018      	beq.n	8003f00 <UART_SetConfig+0x730>
 8003ece:	2b02      	cmp	r3, #2
 8003ed0:	d019      	beq.n	8003f06 <UART_SetConfig+0x736>
 8003ed2:	2b03      	cmp	r3, #3
 8003ed4:	d01a      	beq.n	8003f0c <UART_SetConfig+0x73c>
 8003ed6:	2b04      	cmp	r3, #4
 8003ed8:	d01a      	beq.n	8003f10 <UART_SetConfig+0x740>
 8003eda:	2b05      	cmp	r3, #5
 8003edc:	d01b      	beq.n	8003f16 <UART_SetConfig+0x746>
 8003ede:	2b06      	cmp	r3, #6
 8003ee0:	d01b      	beq.n	8003f1a <UART_SetConfig+0x74a>
 8003ee2:	2080      	movs	r0, #128	; 0x80
 8003ee4:	2b07      	cmp	r3, #7
 8003ee6:	d01a      	beq.n	8003f1e <UART_SetConfig+0x74e>
 8003ee8:	2b08      	cmp	r3, #8
 8003eea:	d01a      	beq.n	8003f22 <UART_SetConfig+0x752>
 8003eec:	2b09      	cmp	r3, #9
 8003eee:	d01a      	beq.n	8003f26 <UART_SetConfig+0x756>
 8003ef0:	2b0a      	cmp	r3, #10
 8003ef2:	d01a      	beq.n	8003f2a <UART_SetConfig+0x75a>
 8003ef4:	2b0b      	cmp	r3, #11
 8003ef6:	d0c8      	beq.n	8003e8a <UART_SetConfig+0x6ba>
 8003ef8:	0200      	lsls	r0, r0, #8
 8003efa:	e7c6      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003efc:	2080      	movs	r0, #128	; 0x80
 8003efe:	e7fb      	b.n	8003ef8 <UART_SetConfig+0x728>
 8003f00:	2080      	movs	r0, #128	; 0x80
 8003f02:	01c0      	lsls	r0, r0, #7
 8003f04:	e7c1      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f06:	2080      	movs	r0, #128	; 0x80
 8003f08:	0180      	lsls	r0, r0, #6
 8003f0a:	e7be      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f0c:	4839      	ldr	r0, [pc, #228]	; (8003ff4 <UART_SetConfig+0x824>)
 8003f0e:	e7bc      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f10:	2080      	movs	r0, #128	; 0x80
 8003f12:	0140      	lsls	r0, r0, #5
 8003f14:	e7b9      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f16:	4838      	ldr	r0, [pc, #224]	; (8003ff8 <UART_SetConfig+0x828>)
 8003f18:	e7b7      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f1a:	4838      	ldr	r0, [pc, #224]	; (8003ffc <UART_SetConfig+0x82c>)
 8003f1c:	e7b5      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f1e:	0100      	lsls	r0, r0, #4
 8003f20:	e7b3      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f22:	00c0      	lsls	r0, r0, #3
 8003f24:	e7b1      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f26:	0080      	lsls	r0, r0, #2
 8003f28:	e7af      	b.n	8003e8a <UART_SetConfig+0x6ba>
 8003f2a:	0040      	lsls	r0, r0, #1
 8003f2c:	e7ad      	b.n	8003e8a <UART_SetConfig+0x6ba>
        ret = HAL_ERROR;
 8003f2e:	2201      	movs	r2, #1
  uint32_t usartdiv                   = 0x00000000U;
 8003f30:	2300      	movs	r3, #0
 8003f32:	e749      	b.n	8003dc8 <UART_SetConfig+0x5f8>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003f34:	2380      	movs	r3, #128	; 0x80
 8003f36:	021b      	lsls	r3, r3, #8
 8003f38:	4299      	cmp	r1, r3
 8003f3a:	d000      	beq.n	8003f3e <UART_SetConfig+0x76e>
 8003f3c:	e712      	b.n	8003d64 <UART_SetConfig+0x594>
        pclk = HAL_RCC_GetPCLK1Freq();
 8003f3e:	f7ff fa49 	bl	80033d4 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003f42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003f44:	2101      	movs	r1, #1
 8003f46:	2b00      	cmp	r3, #0
 8003f48:	d021      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f4a:	1849      	adds	r1, r1, r1
 8003f4c:	2b01      	cmp	r3, #1
 8003f4e:	d01e      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f50:	3102      	adds	r1, #2
 8003f52:	2b02      	cmp	r3, #2
 8003f54:	d01b      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f56:	3102      	adds	r1, #2
 8003f58:	2b03      	cmp	r3, #3
 8003f5a:	d018      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f5c:	3102      	adds	r1, #2
 8003f5e:	2b04      	cmp	r3, #4
 8003f60:	d015      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f62:	3102      	adds	r1, #2
 8003f64:	2b05      	cmp	r3, #5
 8003f66:	d012      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f68:	3102      	adds	r1, #2
 8003f6a:	2b06      	cmp	r3, #6
 8003f6c:	d00f      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f6e:	3104      	adds	r1, #4
 8003f70:	2b07      	cmp	r3, #7
 8003f72:	d00c      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f74:	3110      	adds	r1, #16
 8003f76:	2b08      	cmp	r3, #8
 8003f78:	d009      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f7a:	3120      	adds	r1, #32
 8003f7c:	2b09      	cmp	r3, #9
 8003f7e:	d006      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f80:	3140      	adds	r1, #64	; 0x40
 8003f82:	2b0a      	cmp	r3, #10
 8003f84:	d003      	beq.n	8003f8e <UART_SetConfig+0x7be>
 8003f86:	397f      	subs	r1, #127	; 0x7f
 8003f88:	2b0b      	cmp	r3, #11
 8003f8a:	d100      	bne.n	8003f8e <UART_SetConfig+0x7be>
 8003f8c:	31ff      	adds	r1, #255	; 0xff
 8003f8e:	f7fc f8d5 	bl	800013c <__udivsi3>
 8003f92:	6865      	ldr	r5, [r4, #4]
 8003f94:	0040      	lsls	r0, r0, #1
 8003f96:	0029      	movs	r1, r5
 8003f98:	086b      	lsrs	r3, r5, #1
 8003f9a:	18c0      	adds	r0, r0, r3
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 8003f9c:	f7fc f8ce 	bl	800013c <__udivsi3>
 8003fa0:	b280      	uxth	r0, r0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003fa2:	0003      	movs	r3, r0
 8003fa4:	4a16      	ldr	r2, [pc, #88]	; (8004000 <UART_SetConfig+0x830>)
 8003fa6:	3b10      	subs	r3, #16
 8003fa8:	4293      	cmp	r3, r2
 8003faa:	d900      	bls.n	8003fae <UART_SetConfig+0x7de>
 8003fac:	e474      	b.n	8003898 <UART_SetConfig+0xc8>
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003fae:	230f      	movs	r3, #15
 8003fb0:	0002      	movs	r2, r0
 8003fb2:	439a      	bics	r2, r3
 8003fb4:	0013      	movs	r3, r2
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003fb6:	0700      	lsls	r0, r0, #28
      huart->Instance->BRR = brrtemp;
 8003fb8:	6822      	ldr	r2, [r4, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003fba:	0f40      	lsrs	r0, r0, #29
      huart->Instance->BRR = brrtemp;
 8003fbc:	4318      	orrs	r0, r3
 8003fbe:	60d0      	str	r0, [r2, #12]
 8003fc0:	2200      	movs	r2, #0
 8003fc2:	e46a      	b.n	800389a <UART_SetConfig+0xca>
 8003fc4:	0000f424 	.word	0x0000f424
 8003fc8:	007a1200 	.word	0x007a1200
 8003fcc:	003d0900 	.word	0x003d0900
 8003fd0:	0028b0aa 	.word	0x0028b0aa
 8003fd4:	001e8480 	.word	0x001e8480
 8003fd8:	00186a00 	.word	0x00186a00
 8003fdc:	00145855 	.word	0x00145855
 8003fe0:	000f4240 	.word	0x000f4240
 8003fe4:	0007a120 	.word	0x0007a120
 8003fe8:	0003d090 	.word	0x0003d090
 8003fec:	0001e848 	.word	0x0001e848
 8003ff0:	00f42400 	.word	0x00f42400
 8003ff4:	00001555 	.word	0x00001555
 8003ff8:	00000ccc 	.word	0x00000ccc
 8003ffc:	00000aaa 	.word	0x00000aaa
 8004000:	0000ffef 	.word	0x0000ffef

08004004 <UART_AdvFeatureConfig>:
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8004004:	6a83      	ldr	r3, [r0, #40]	; 0x28
{
 8004006:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8004008:	07da      	lsls	r2, r3, #31
 800400a:	d506      	bpl.n	800401a <UART_AdvFeatureConfig+0x16>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800400c:	6801      	ldr	r1, [r0, #0]
 800400e:	4c28      	ldr	r4, [pc, #160]	; (80040b0 <UART_AdvFeatureConfig+0xac>)
 8004010:	684a      	ldr	r2, [r1, #4]
 8004012:	4022      	ands	r2, r4
 8004014:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8004016:	4322      	orrs	r2, r4
 8004018:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800401a:	079a      	lsls	r2, r3, #30
 800401c:	d506      	bpl.n	800402c <UART_AdvFeatureConfig+0x28>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800401e:	6801      	ldr	r1, [r0, #0]
 8004020:	4c24      	ldr	r4, [pc, #144]	; (80040b4 <UART_AdvFeatureConfig+0xb0>)
 8004022:	684a      	ldr	r2, [r1, #4]
 8004024:	4022      	ands	r2, r4
 8004026:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8004028:	4322      	orrs	r2, r4
 800402a:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800402c:	075a      	lsls	r2, r3, #29
 800402e:	d506      	bpl.n	800403e <UART_AdvFeatureConfig+0x3a>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8004030:	6801      	ldr	r1, [r0, #0]
 8004032:	4c21      	ldr	r4, [pc, #132]	; (80040b8 <UART_AdvFeatureConfig+0xb4>)
 8004034:	684a      	ldr	r2, [r1, #4]
 8004036:	4022      	ands	r2, r4
 8004038:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800403a:	4322      	orrs	r2, r4
 800403c:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800403e:	071a      	lsls	r2, r3, #28
 8004040:	d506      	bpl.n	8004050 <UART_AdvFeatureConfig+0x4c>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8004042:	6801      	ldr	r1, [r0, #0]
 8004044:	4c1d      	ldr	r4, [pc, #116]	; (80040bc <UART_AdvFeatureConfig+0xb8>)
 8004046:	684a      	ldr	r2, [r1, #4]
 8004048:	4022      	ands	r2, r4
 800404a:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800404c:	4322      	orrs	r2, r4
 800404e:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8004050:	06da      	lsls	r2, r3, #27
 8004052:	d506      	bpl.n	8004062 <UART_AdvFeatureConfig+0x5e>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8004054:	6801      	ldr	r1, [r0, #0]
 8004056:	4c1a      	ldr	r4, [pc, #104]	; (80040c0 <UART_AdvFeatureConfig+0xbc>)
 8004058:	688a      	ldr	r2, [r1, #8]
 800405a:	4022      	ands	r2, r4
 800405c:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800405e:	4322      	orrs	r2, r4
 8004060:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8004062:	069a      	lsls	r2, r3, #26
 8004064:	d506      	bpl.n	8004074 <UART_AdvFeatureConfig+0x70>
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8004066:	6801      	ldr	r1, [r0, #0]
 8004068:	4c16      	ldr	r4, [pc, #88]	; (80040c4 <UART_AdvFeatureConfig+0xc0>)
 800406a:	688a      	ldr	r2, [r1, #8]
 800406c:	4022      	ands	r2, r4
 800406e:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8004070:	4322      	orrs	r2, r4
 8004072:	608a      	str	r2, [r1, #8]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8004074:	065a      	lsls	r2, r3, #25
 8004076:	d510      	bpl.n	800409a <UART_AdvFeatureConfig+0x96>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8004078:	6801      	ldr	r1, [r0, #0]
 800407a:	4d13      	ldr	r5, [pc, #76]	; (80040c8 <UART_AdvFeatureConfig+0xc4>)
 800407c:	684a      	ldr	r2, [r1, #4]
 800407e:	6c44      	ldr	r4, [r0, #68]	; 0x44
 8004080:	402a      	ands	r2, r5
 8004082:	4322      	orrs	r2, r4
 8004084:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8004086:	2280      	movs	r2, #128	; 0x80
 8004088:	0352      	lsls	r2, r2, #13
 800408a:	4294      	cmp	r4, r2
 800408c:	d105      	bne.n	800409a <UART_AdvFeatureConfig+0x96>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800408e:	684a      	ldr	r2, [r1, #4]
 8004090:	4c0e      	ldr	r4, [pc, #56]	; (80040cc <UART_AdvFeatureConfig+0xc8>)
 8004092:	4022      	ands	r2, r4
 8004094:	6c84      	ldr	r4, [r0, #72]	; 0x48
 8004096:	4322      	orrs	r2, r4
 8004098:	604a      	str	r2, [r1, #4]
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800409a:	061b      	lsls	r3, r3, #24
 800409c:	d506      	bpl.n	80040ac <UART_AdvFeatureConfig+0xa8>
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800409e:	6802      	ldr	r2, [r0, #0]
 80040a0:	490b      	ldr	r1, [pc, #44]	; (80040d0 <UART_AdvFeatureConfig+0xcc>)
 80040a2:	6853      	ldr	r3, [r2, #4]
 80040a4:	400b      	ands	r3, r1
 80040a6:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 80040a8:	430b      	orrs	r3, r1
 80040aa:	6053      	str	r3, [r2, #4]
}
 80040ac:	bd30      	pop	{r4, r5, pc}
 80040ae:	46c0      	nop			; (mov r8, r8)
 80040b0:	fffdffff 	.word	0xfffdffff
 80040b4:	fffeffff 	.word	0xfffeffff
 80040b8:	fffbffff 	.word	0xfffbffff
 80040bc:	ffff7fff 	.word	0xffff7fff
 80040c0:	ffffefff 	.word	0xffffefff
 80040c4:	ffffdfff 	.word	0xffffdfff
 80040c8:	ffefffff 	.word	0xffefffff
 80040cc:	ff9fffff 	.word	0xff9fffff
 80040d0:	fff7ffff 	.word	0xfff7ffff

080040d4 <UART_WaitOnFlagUntilTimeout>:
{
 80040d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040d6:	0004      	movs	r4, r0
 80040d8:	000e      	movs	r6, r1
 80040da:	0015      	movs	r5, r2
 80040dc:	001f      	movs	r7, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80040de:	6822      	ldr	r2, [r4, #0]
 80040e0:	69d3      	ldr	r3, [r2, #28]
 80040e2:	4033      	ands	r3, r6
 80040e4:	1b9b      	subs	r3, r3, r6
 80040e6:	4259      	negs	r1, r3
 80040e8:	414b      	adcs	r3, r1
 80040ea:	42ab      	cmp	r3, r5
 80040ec:	d001      	beq.n	80040f2 <UART_WaitOnFlagUntilTimeout+0x1e>
  return HAL_OK;
 80040ee:	2000      	movs	r0, #0
 80040f0:	e01e      	b.n	8004130 <UART_WaitOnFlagUntilTimeout+0x5c>
    if (Timeout != HAL_MAX_DELAY)
 80040f2:	9b06      	ldr	r3, [sp, #24]
 80040f4:	3301      	adds	r3, #1
 80040f6:	d0f3      	beq.n	80040e0 <UART_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040f8:	f7fe f8ce 	bl	8002298 <HAL_GetTick>
 80040fc:	9b06      	ldr	r3, [sp, #24]
 80040fe:	1bc0      	subs	r0, r0, r7
 8004100:	4283      	cmp	r3, r0
 8004102:	d301      	bcc.n	8004108 <UART_WaitOnFlagUntilTimeout+0x34>
 8004104:	2b00      	cmp	r3, #0
 8004106:	d1ea      	bne.n	80040de <UART_WaitOnFlagUntilTimeout+0xa>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
 8004108:	0022      	movs	r2, r4
 800410a:	ca08      	ldmia	r2!, {r3}
 800410c:	4809      	ldr	r0, [pc, #36]	; (8004134 <UART_WaitOnFlagUntilTimeout+0x60>)
 800410e:	6819      	ldr	r1, [r3, #0]
 8004110:	4001      	ands	r1, r0
 8004112:	6019      	str	r1, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004114:	6899      	ldr	r1, [r3, #8]
 8004116:	30a3      	adds	r0, #163	; 0xa3
 8004118:	30ff      	adds	r0, #255	; 0xff
 800411a:	4381      	bics	r1, r0
 800411c:	6099      	str	r1, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 800411e:	2320      	movs	r3, #32
 8004120:	67d3      	str	r3, [r2, #124]	; 0x7c
        huart->RxState = HAL_UART_STATE_READY;
 8004122:	0022      	movs	r2, r4
 8004124:	3208      	adds	r2, #8
 8004126:	67d3      	str	r3, [r2, #124]	; 0x7c
        __HAL_UNLOCK(huart);
 8004128:	2300      	movs	r3, #0
 800412a:	347c      	adds	r4, #124	; 0x7c
 800412c:	7023      	strb	r3, [r4, #0]
 800412e:	3002      	adds	r0, #2
}
 8004130:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004132:	46c0      	nop			; (mov r8, r8)
 8004134:	fffffe5f 	.word	0xfffffe5f

08004138 <HAL_UART_Transmit>:
{
 8004138:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (huart->gState == HAL_UART_STATE_READY)
 800413a:	1d07      	adds	r7, r0, #4
{
 800413c:	b087      	sub	sp, #28
 800413e:	9305      	str	r3, [sp, #20]
  if (huart->gState == HAL_UART_STATE_READY)
 8004140:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
{
 8004142:	0004      	movs	r4, r0
 8004144:	000d      	movs	r5, r1
 8004146:	0016      	movs	r6, r2
    return HAL_BUSY;
 8004148:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 800414a:	2b20      	cmp	r3, #32
 800414c:	d14a      	bne.n	80041e4 <HAL_UART_Transmit+0xac>
      return  HAL_ERROR;
 800414e:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 8004150:	2900      	cmp	r1, #0
 8004152:	d047      	beq.n	80041e4 <HAL_UART_Transmit+0xac>
 8004154:	2a00      	cmp	r2, #0
 8004156:	d045      	beq.n	80041e4 <HAL_UART_Transmit+0xac>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004158:	2380      	movs	r3, #128	; 0x80
 800415a:	68a2      	ldr	r2, [r4, #8]
 800415c:	015b      	lsls	r3, r3, #5
 800415e:	429a      	cmp	r2, r3
 8004160:	d104      	bne.n	800416c <HAL_UART_Transmit+0x34>
 8004162:	6923      	ldr	r3, [r4, #16]
 8004164:	2b00      	cmp	r3, #0
 8004166:	d101      	bne.n	800416c <HAL_UART_Transmit+0x34>
      if ((((uint32_t)pData) & 1U) != 0U)
 8004168:	4201      	tst	r1, r0
 800416a:	d13b      	bne.n	80041e4 <HAL_UART_Transmit+0xac>
    __HAL_LOCK(huart);
 800416c:	0023      	movs	r3, r4
 800416e:	337c      	adds	r3, #124	; 0x7c
 8004170:	781a      	ldrb	r2, [r3, #0]
    return HAL_BUSY;
 8004172:	2002      	movs	r0, #2
    __HAL_LOCK(huart);
 8004174:	2a01      	cmp	r2, #1
 8004176:	d035      	beq.n	80041e4 <HAL_UART_Transmit+0xac>
 8004178:	2201      	movs	r2, #1
 800417a:	701a      	strb	r2, [r3, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800417c:	2200      	movs	r2, #0
 800417e:	60da      	str	r2, [r3, #12]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004180:	2321      	movs	r3, #33	; 0x21
 8004182:	67fb      	str	r3, [r7, #124]	; 0x7c
    tickstart = HAL_GetTick();
 8004184:	f7fe f888 	bl	8002298 <HAL_GetTick>
    huart->TxXferSize  = Size;
 8004188:	0023      	movs	r3, r4
 800418a:	3354      	adds	r3, #84	; 0x54
 800418c:	801e      	strh	r6, [r3, #0]
    huart->TxXferCount = Size;
 800418e:	3302      	adds	r3, #2
 8004190:	801e      	strh	r6, [r3, #0]
 8004192:	9303      	str	r3, [sp, #12]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004194:	2380      	movs	r3, #128	; 0x80
 8004196:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8004198:	9004      	str	r0, [sp, #16]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800419a:	015b      	lsls	r3, r3, #5
      pdata16bits = NULL;
 800419c:	2600      	movs	r6, #0
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800419e:	429a      	cmp	r2, r3
 80041a0:	d104      	bne.n	80041ac <HAL_UART_Transmit+0x74>
 80041a2:	6923      	ldr	r3, [r4, #16]
 80041a4:	42b3      	cmp	r3, r6
 80041a6:	d101      	bne.n	80041ac <HAL_UART_Transmit+0x74>
 80041a8:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 80041aa:	001d      	movs	r5, r3
    while (huart->TxXferCount > 0U)
 80041ac:	0023      	movs	r3, r4
 80041ae:	3356      	adds	r3, #86	; 0x56
 80041b0:	881a      	ldrh	r2, [r3, #0]
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80041b2:	9b05      	ldr	r3, [sp, #20]
    while (huart->TxXferCount > 0U)
 80041b4:	b292      	uxth	r2, r2
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80041b6:	9300      	str	r3, [sp, #0]
 80041b8:	9b04      	ldr	r3, [sp, #16]
    while (huart->TxXferCount > 0U)
 80041ba:	2a00      	cmp	r2, #0
 80041bc:	d10a      	bne.n	80041d4 <HAL_UART_Transmit+0x9c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80041be:	2140      	movs	r1, #64	; 0x40
 80041c0:	0020      	movs	r0, r4
 80041c2:	f7ff ff87 	bl	80040d4 <UART_WaitOnFlagUntilTimeout>
 80041c6:	2800      	cmp	r0, #0
 80041c8:	d10b      	bne.n	80041e2 <HAL_UART_Transmit+0xaa>
    huart->gState = HAL_UART_STATE_READY;
 80041ca:	2320      	movs	r3, #32
    __HAL_UNLOCK(huart);
 80041cc:	347c      	adds	r4, #124	; 0x7c
    huart->gState = HAL_UART_STATE_READY;
 80041ce:	67fb      	str	r3, [r7, #124]	; 0x7c
    __HAL_UNLOCK(huart);
 80041d0:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80041d2:	e007      	b.n	80041e4 <HAL_UART_Transmit+0xac>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80041d4:	2200      	movs	r2, #0
 80041d6:	2180      	movs	r1, #128	; 0x80
 80041d8:	0020      	movs	r0, r4
 80041da:	f7ff ff7b 	bl	80040d4 <UART_WaitOnFlagUntilTimeout>
 80041de:	2800      	cmp	r0, #0
 80041e0:	d002      	beq.n	80041e8 <HAL_UART_Transmit+0xb0>
        return HAL_TIMEOUT;
 80041e2:	2003      	movs	r0, #3
}
 80041e4:	b007      	add	sp, #28
 80041e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041e8:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80041ea:	2d00      	cmp	r5, #0
 80041ec:	d10b      	bne.n	8004206 <HAL_UART_Transmit+0xce>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80041ee:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 80041f0:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80041f2:	05db      	lsls	r3, r3, #23
 80041f4:	0ddb      	lsrs	r3, r3, #23
 80041f6:	6293      	str	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 80041f8:	9b03      	ldr	r3, [sp, #12]
 80041fa:	9a03      	ldr	r2, [sp, #12]
 80041fc:	881b      	ldrh	r3, [r3, #0]
 80041fe:	3b01      	subs	r3, #1
 8004200:	b29b      	uxth	r3, r3
 8004202:	8013      	strh	r3, [r2, #0]
 8004204:	e7d2      	b.n	80041ac <HAL_UART_Transmit+0x74>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004206:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 8004208:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800420a:	6293      	str	r3, [r2, #40]	; 0x28
 800420c:	e7f4      	b.n	80041f8 <HAL_UART_Transmit+0xc0>
	...

08004210 <UART_CheckIdleState>:
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004210:	0003      	movs	r3, r0
{
 8004212:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004214:	2600      	movs	r6, #0
{
 8004216:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004218:	3388      	adds	r3, #136	; 0x88
 800421a:	601e      	str	r6, [r3, #0]
  tickstart = HAL_GetTick();
 800421c:	f7fe f83c 	bl	8002298 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004220:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 8004222:	0005      	movs	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8004224:	681b      	ldr	r3, [r3, #0]
 8004226:	071b      	lsls	r3, r3, #28
 8004228:	d417      	bmi.n	800425a <UART_CheckIdleState+0x4a>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800422a:	6823      	ldr	r3, [r4, #0]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	075b      	lsls	r3, r3, #29
 8004230:	d50a      	bpl.n	8004248 <UART_CheckIdleState+0x38>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8004232:	2180      	movs	r1, #128	; 0x80
 8004234:	4b0f      	ldr	r3, [pc, #60]	; (8004274 <UART_CheckIdleState+0x64>)
 8004236:	2200      	movs	r2, #0
 8004238:	9300      	str	r3, [sp, #0]
 800423a:	03c9      	lsls	r1, r1, #15
 800423c:	002b      	movs	r3, r5
 800423e:	0020      	movs	r0, r4
 8004240:	f7ff ff48 	bl	80040d4 <UART_WaitOnFlagUntilTimeout>
 8004244:	2800      	cmp	r0, #0
 8004246:	d113      	bne.n	8004270 <UART_CheckIdleState+0x60>
  huart->gState = HAL_UART_STATE_READY;
 8004248:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 800424a:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 800424c:	1d22      	adds	r2, r4, #4
 800424e:	67d3      	str	r3, [r2, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 8004250:	347c      	adds	r4, #124	; 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 8004252:	3204      	adds	r2, #4
 8004254:	67d3      	str	r3, [r2, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 8004256:	7020      	strb	r0, [r4, #0]
  return HAL_OK;
 8004258:	e00b      	b.n	8004272 <UART_CheckIdleState+0x62>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800425a:	2180      	movs	r1, #128	; 0x80
 800425c:	4b05      	ldr	r3, [pc, #20]	; (8004274 <UART_CheckIdleState+0x64>)
 800425e:	0032      	movs	r2, r6
 8004260:	9300      	str	r3, [sp, #0]
 8004262:	0389      	lsls	r1, r1, #14
 8004264:	0003      	movs	r3, r0
 8004266:	0020      	movs	r0, r4
 8004268:	f7ff ff34 	bl	80040d4 <UART_WaitOnFlagUntilTimeout>
 800426c:	2800      	cmp	r0, #0
 800426e:	d0dc      	beq.n	800422a <UART_CheckIdleState+0x1a>
      return HAL_TIMEOUT;
 8004270:	2003      	movs	r0, #3
}
 8004272:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 8004274:	01ffffff 	.word	0x01ffffff

08004278 <HAL_UART_Init>:
{
 8004278:	b570      	push	{r4, r5, r6, lr}
 800427a:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 800427c:	d101      	bne.n	8004282 <HAL_UART_Init+0xa>
    return HAL_ERROR;
 800427e:	2001      	movs	r0, #1
}
 8004280:	bd70      	pop	{r4, r5, r6, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 8004282:	1d05      	adds	r5, r0, #4
 8004284:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8004286:	2b00      	cmp	r3, #0
 8004288:	d104      	bne.n	8004294 <HAL_UART_Init+0x1c>
    huart->Lock = HAL_UNLOCKED;
 800428a:	0002      	movs	r2, r0
 800428c:	327c      	adds	r2, #124	; 0x7c
 800428e:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 8004290:	f000 fa66 	bl	8004760 <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 8004294:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 8004296:	2101      	movs	r1, #1
 8004298:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800429a:	67eb      	str	r3, [r5, #124]	; 0x7c
  __HAL_UART_DISABLE(huart);
 800429c:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 800429e:	0020      	movs	r0, r4
  __HAL_UART_DISABLE(huart);
 80042a0:	438b      	bics	r3, r1
 80042a2:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 80042a4:	f7ff fa94 	bl	80037d0 <UART_SetConfig>
 80042a8:	2801      	cmp	r0, #1
 80042aa:	d0e8      	beq.n	800427e <HAL_UART_Init+0x6>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80042ac:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	d002      	beq.n	80042b8 <HAL_UART_Init+0x40>
    UART_AdvFeatureConfig(huart);
 80042b2:	0020      	movs	r0, r4
 80042b4:	f7ff fea6 	bl	8004004 <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80042b8:	6823      	ldr	r3, [r4, #0]
 80042ba:	4908      	ldr	r1, [pc, #32]	; (80042dc <HAL_UART_Init+0x64>)
 80042bc:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 80042be:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80042c0:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80042c2:	212a      	movs	r1, #42	; 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80042c4:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80042c6:	689a      	ldr	r2, [r3, #8]
 80042c8:	438a      	bics	r2, r1
 80042ca:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80042cc:	2201      	movs	r2, #1
 80042ce:	6819      	ldr	r1, [r3, #0]
 80042d0:	430a      	orrs	r2, r1
 80042d2:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 80042d4:	f7ff ff9c 	bl	8004210 <UART_CheckIdleState>
 80042d8:	e7d2      	b.n	8004280 <HAL_UART_Init+0x8>
 80042da:	46c0      	nop			; (mov r8, r8)
 80042dc:	ffffb7ff 	.word	0xffffb7ff

080042e0 <UARTEx_SetNbDataToProcess>:
{
  uint8_t rx_fifo_depth;
  uint8_t tx_fifo_depth;
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 80042e0:	2301      	movs	r3, #1
{
 80042e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80042e4:	b087      	sub	sp, #28
  uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 80042e6:	aa02      	add	r2, sp, #8
 80042e8:	7013      	strb	r3, [r2, #0]
 80042ea:	7053      	strb	r3, [r2, #1]
 80042ec:	7093      	strb	r3, [r2, #2]
 80042ee:	2203      	movs	r2, #3
 80042f0:	a902      	add	r1, sp, #8
 80042f2:	70ca      	strb	r2, [r1, #3]
  uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 80042f4:	2502      	movs	r5, #2
  uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 80042f6:	2200      	movs	r2, #0
 80042f8:	2607      	movs	r6, #7
  uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 80042fa:	ac04      	add	r4, sp, #16
  uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
 80042fc:	718a      	strb	r2, [r1, #6]
 80042fe:	71ca      	strb	r2, [r1, #7]
 8004300:	710e      	strb	r6, [r1, #4]
 8004302:	714b      	strb	r3, [r1, #5]
  uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 8004304:	70a5      	strb	r5, [r4, #2]
 8004306:	2104      	movs	r1, #4
 8004308:	0007      	movs	r7, r0
 800430a:	0005      	movs	r5, r0
 800430c:	3208      	adds	r2, #8
 800430e:	7022      	strb	r2, [r4, #0]
 8004310:	7122      	strb	r2, [r4, #4]

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 8004312:	6e42      	ldr	r2, [r0, #100]	; 0x64
  uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};
 8004314:	7061      	strb	r1, [r4, #1]
 8004316:	70e1      	strb	r1, [r4, #3]
 8004318:	7163      	strb	r3, [r4, #5]
 800431a:	71a3      	strb	r3, [r4, #6]
 800431c:	71e3      	strb	r3, [r4, #7]
 800431e:	376a      	adds	r7, #106	; 0x6a
 8004320:	3568      	adds	r5, #104	; 0x68
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 8004322:	2a00      	cmp	r2, #0
 8004324:	d103      	bne.n	800432e <UARTEx_SetNbDataToProcess+0x4e>
  {
    huart->NbTxDataToProcess = 1U;
 8004326:	803b      	strh	r3, [r7, #0]
    huart->NbRxDataToProcess = 1U;
 8004328:	802b      	strh	r3, [r5, #0]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800432a:	b007      	add	sp, #28
 800432c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800432e:	6803      	ldr	r3, [r0, #0]
 8004330:	689a      	ldr	r2, [r3, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 8004332:	689b      	ldr	r3, [r3, #8]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8004334:	9201      	str	r2, [sp, #4]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 8004336:	0f5b      	lsrs	r3, r3, #29
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 8004338:	aa02      	add	r2, sp, #8
 800433a:	5cd0      	ldrb	r0, [r2, r3]
 800433c:	5ce1      	ldrb	r1, [r4, r3]
 800433e:	00c0      	lsls	r0, r0, #3
 8004340:	f7fb ff86 	bl	8000250 <__divsi3>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8004344:	9b01      	ldr	r3, [sp, #4]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) / (uint16_t)denominator[tx_fifo_threshold];
 8004346:	8038      	strh	r0, [r7, #0]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 8004348:	0e5b      	lsrs	r3, r3, #25
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) / (uint16_t)denominator[rx_fifo_threshold];
 800434a:	401e      	ands	r6, r3
 800434c:	ab02      	add	r3, sp, #8
 800434e:	5d98      	ldrb	r0, [r3, r6]
 8004350:	5da1      	ldrb	r1, [r4, r6]
 8004352:	00c0      	lsls	r0, r0, #3
 8004354:	f7fb ff7c 	bl	8000250 <__divsi3>
 8004358:	8028      	strh	r0, [r5, #0]
}
 800435a:	e7e6      	b.n	800432a <UARTEx_SetNbDataToProcess+0x4a>

0800435c <HAL_UARTEx_WakeupCallback>:
 800435c:	4770      	bx	lr

0800435e <HAL_UARTEx_RxFifoFullCallback>:
 800435e:	4770      	bx	lr

08004360 <HAL_UARTEx_TxFifoEmptyCallback>:
}
 8004360:	4770      	bx	lr
	...

08004364 <HAL_UARTEx_DisableFifoMode>:
{
 8004364:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(huart);
 8004366:	0004      	movs	r4, r0
 8004368:	347c      	adds	r4, #124	; 0x7c
 800436a:	7822      	ldrb	r2, [r4, #0]
 800436c:	2302      	movs	r3, #2
 800436e:	2a01      	cmp	r2, #1
 8004370:	d010      	beq.n	8004394 <HAL_UARTEx_DisableFifoMode+0x30>
  __HAL_UART_DISABLE(huart);
 8004372:	2601      	movs	r6, #1
  tmpcr1 = READ_REG(huart->Instance->CR1);
 8004374:	6802      	ldr	r2, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8004376:	1d05      	adds	r5, r0, #4
 8004378:	3322      	adds	r3, #34	; 0x22
 800437a:	67eb      	str	r3, [r5, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800437c:	6811      	ldr	r1, [r2, #0]
  __HAL_UART_DISABLE(huart);
 800437e:	6813      	ldr	r3, [r2, #0]
 8004380:	43b3      	bics	r3, r6
 8004382:	6013      	str	r3, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 8004384:	4b04      	ldr	r3, [pc, #16]	; (8004398 <HAL_UARTEx_DisableFifoMode+0x34>)
 8004386:	4019      	ands	r1, r3
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 8004388:	2300      	movs	r3, #0
 800438a:	6643      	str	r3, [r0, #100]	; 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800438c:	6011      	str	r1, [r2, #0]
  huart->gState = HAL_UART_STATE_READY;
 800438e:	2220      	movs	r2, #32
 8004390:	67ea      	str	r2, [r5, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 8004392:	7023      	strb	r3, [r4, #0]
}
 8004394:	0018      	movs	r0, r3
 8004396:	bd70      	pop	{r4, r5, r6, pc}
 8004398:	dfffffff 	.word	0xdfffffff

0800439c <HAL_UARTEx_SetTxFifoThreshold>:
{
 800439c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 800439e:	0005      	movs	r5, r0
 80043a0:	357c      	adds	r5, #124	; 0x7c
 80043a2:	782b      	ldrb	r3, [r5, #0]
{
 80043a4:	0004      	movs	r4, r0
  __HAL_LOCK(huart);
 80043a6:	2002      	movs	r0, #2
 80043a8:	2b01      	cmp	r3, #1
 80043aa:	d017      	beq.n	80043dc <HAL_UARTEx_SetTxFifoThreshold+0x40>
  huart->gState = HAL_UART_STATE_BUSY;
 80043ac:	2324      	movs	r3, #36	; 0x24
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80043ae:	6822      	ldr	r2, [r4, #0]
  __HAL_LOCK(huart);
 80043b0:	3801      	subs	r0, #1
  huart->gState = HAL_UART_STATE_BUSY;
 80043b2:	1d26      	adds	r6, r4, #4
  __HAL_LOCK(huart);
 80043b4:	7028      	strb	r0, [r5, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80043b6:	67f3      	str	r3, [r6, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80043b8:	6817      	ldr	r7, [r2, #0]
  __HAL_UART_DISABLE(huart);
 80043ba:	6813      	ldr	r3, [r2, #0]
 80043bc:	4383      	bics	r3, r0
 80043be:	6013      	str	r3, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 80043c0:	6893      	ldr	r3, [r2, #8]
  UARTEx_SetNbDataToProcess(huart);
 80043c2:	0020      	movs	r0, r4
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 80043c4:	00db      	lsls	r3, r3, #3
 80043c6:	08db      	lsrs	r3, r3, #3
 80043c8:	4319      	orrs	r1, r3
 80043ca:	6091      	str	r1, [r2, #8]
  UARTEx_SetNbDataToProcess(huart);
 80043cc:	f7ff ff88 	bl	80042e0 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80043d0:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(huart);
 80043d2:	2000      	movs	r0, #0
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 80043d4:	601f      	str	r7, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 80043d6:	2320      	movs	r3, #32
 80043d8:	67f3      	str	r3, [r6, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 80043da:	7028      	strb	r0, [r5, #0]
}
 80043dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080043e0 <HAL_UARTEx_SetRxFifoThreshold>:
{
 80043e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(huart);
 80043e2:	0005      	movs	r5, r0
 80043e4:	357c      	adds	r5, #124	; 0x7c
 80043e6:	782b      	ldrb	r3, [r5, #0]
{
 80043e8:	0004      	movs	r4, r0
  __HAL_LOCK(huart);
 80043ea:	2002      	movs	r0, #2
 80043ec:	2b01      	cmp	r3, #1
 80043ee:	d017      	beq.n	8004420 <HAL_UARTEx_SetRxFifoThreshold+0x40>
  huart->gState = HAL_UART_STATE_BUSY;
 80043f0:	2324      	movs	r3, #36	; 0x24
  __HAL_LOCK(huart);
 80043f2:	3801      	subs	r0, #1
  huart->gState = HAL_UART_STATE_BUSY;
 80043f4:	1d26      	adds	r6, r4, #4
  __HAL_LOCK(huart);
 80043f6:	7028      	strb	r0, [r5, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 80043f8:	67f3      	str	r3, [r6, #124]	; 0x7c
  tmpcr1 = READ_REG(huart->Instance->CR1);
 80043fa:	6823      	ldr	r3, [r4, #0]
 80043fc:	681f      	ldr	r7, [r3, #0]
  __HAL_UART_DISABLE(huart);
 80043fe:	681a      	ldr	r2, [r3, #0]
 8004400:	4382      	bics	r2, r0
 8004402:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 8004404:	689a      	ldr	r2, [r3, #8]
 8004406:	4807      	ldr	r0, [pc, #28]	; (8004424 <HAL_UARTEx_SetRxFifoThreshold+0x44>)
 8004408:	4002      	ands	r2, r0
 800440a:	4311      	orrs	r1, r2
 800440c:	6099      	str	r1, [r3, #8]
  UARTEx_SetNbDataToProcess(huart);
 800440e:	0020      	movs	r0, r4
 8004410:	f7ff ff66 	bl	80042e0 <UARTEx_SetNbDataToProcess>
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 8004414:	6823      	ldr	r3, [r4, #0]
  __HAL_UNLOCK(huart);
 8004416:	2000      	movs	r0, #0
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 8004418:	601f      	str	r7, [r3, #0]
  huart->gState = HAL_UART_STATE_READY;
 800441a:	2320      	movs	r3, #32
 800441c:	67f3      	str	r3, [r6, #124]	; 0x7c
  __HAL_UNLOCK(huart);
 800441e:	7028      	strb	r0, [r5, #0]
}
 8004420:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004422:	46c0      	nop			; (mov r8, r8)
 8004424:	f1ffffff 	.word	0xf1ffffff

08004428 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004428:	b510      	push	{r4, lr}
 800442a:	b0a0      	sub	sp, #128	; 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800442c:	2238      	movs	r2, #56	; 0x38
 800442e:	2100      	movs	r1, #0
 8004430:	a812      	add	r0, sp, #72	; 0x48
 8004432:	f000 fa6b 	bl	800490c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004436:	2210      	movs	r2, #16
 8004438:	2100      	movs	r1, #0
 800443a:	a801      	add	r0, sp, #4
 800443c:	f000 fa66 	bl	800490c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8004440:	2234      	movs	r2, #52	; 0x34
 8004442:	2100      	movs	r1, #0
 8004444:	a805      	add	r0, sp, #20
 8004446:	f000 fa61 	bl	800490c <memset>

  /** Configure the main internal regulator output voltage 
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 800444a:	2080      	movs	r0, #128	; 0x80
 800444c:	0080      	lsls	r0, r0, #2
 800444e:	f7fe fc79 	bl	8002d44 <HAL_PWREx_ControlVoltageScaling>
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004452:	2302      	movs	r3, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8004454:	2400      	movs	r4, #0
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004456:	9312      	str	r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8004458:	33fe      	adds	r3, #254	; 0xfe
 800445a:	9315      	str	r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800445c:	a812      	add	r0, sp, #72	; 0x48
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800445e:	3bc0      	subs	r3, #192	; 0xc0
 8004460:	9317      	str	r3, [sp, #92]	; 0x5c
  RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 8004462:	9416      	str	r4, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8004464:	9419      	str	r4, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8004466:	f7fe fc97 	bl	8002d98 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800446a:	2307      	movs	r3, #7
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800446c:	0021      	movs	r1, r4
 800446e:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004470:	9301      	str	r3, [sp, #4]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8004472:	9402      	str	r4, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8004474:	9403      	str	r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8004476:	9404      	str	r4, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8004478:	f7fe fefe 	bl	8003278 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  /** Initializes the peripherals clocks 
  */
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 800447c:	2342      	movs	r3, #66	; 0x42
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800447e:	a805      	add	r0, sp, #20
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 8004480:	9305      	str	r3, [sp, #20]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8004482:	9407      	str	r4, [sp, #28]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8004484:	9409      	str	r4, [sp, #36]	; 0x24
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8004486:	f7fe ffb9 	bl	80033fc <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 800448a:	b020      	add	sp, #128	; 0x80
 800448c:	bd10      	pop	{r4, pc}
	...

08004490 <main>:
{
 8004490:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004492:	b08f      	sub	sp, #60	; 0x3c
 8004494:	af04      	add	r7, sp, #16
  HAL_Init();
 8004496:	f7fd fedf 	bl	8002258 <HAL_Init>
  SystemClock_Config();
 800449a:	f7ff ffc5 	bl	8004428 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800449e:	2008      	movs	r0, #8
 80044a0:	230c      	movs	r3, #12
 80044a2:	1838      	adds	r0, r7, r0
 80044a4:	2214      	movs	r2, #20
 80044a6:	2100      	movs	r1, #0
 80044a8:	18c0      	adds	r0, r0, r3
 80044aa:	f000 fa2f 	bl	800490c <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80044ae:	2101      	movs	r1, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 80044b0:	20a0      	movs	r0, #160	; 0xa0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80044b2:	4b66      	ldr	r3, [pc, #408]	; (800464c <main+0x1bc>)
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 80044b4:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80044b6:	6b5a      	ldr	r2, [r3, #52]	; 0x34

  /*Configure GPIO pin : PA0 */
  GPIO_InitStruct.Pin = GPIO_PIN_0;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80044b8:	2600      	movs	r6, #0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80044ba:	430a      	orrs	r2, r1
 80044bc:	635a      	str	r2, [r3, #52]	; 0x34
 80044be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044c0:	400a      	ands	r2, r1
 80044c2:	60fa      	str	r2, [r7, #12]
 80044c4:	68fa      	ldr	r2, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80044c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044c8:	1849      	adds	r1, r1, r1
 80044ca:	430a      	orrs	r2, r1
 80044cc:	635a      	str	r2, [r3, #52]	; 0x34
 80044ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 80044d0:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80044d2:	400b      	ands	r3, r1
 80044d4:	613b      	str	r3, [r7, #16]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 80044d6:	3901      	subs	r1, #1
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80044d8:	693b      	ldr	r3, [r7, #16]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 80044da:	f7fe f831 	bl	8002540 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80044de:	2301      	movs	r3, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80044e0:	2208      	movs	r2, #8
 80044e2:	20a0      	movs	r0, #160	; 0xa0
 80044e4:	18ba      	adds	r2, r7, r2
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80044e6:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80044e8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80044ea:	330b      	adds	r3, #11
 80044ec:	18d1      	adds	r1, r2, r3
 80044ee:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80044f0:	61fe      	str	r6, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80044f2:	623e      	str	r6, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80044f4:	f7fd ff7c 	bl	80023f0 <HAL_GPIO_Init>
  hi2c1.Instance = I2C1;
 80044f8:	4d55      	ldr	r5, [pc, #340]	; (8004650 <main+0x1c0>)
 80044fa:	4b56      	ldr	r3, [pc, #344]	; (8004654 <main+0x1c4>)
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80044fc:	0028      	movs	r0, r5
  hi2c1.Instance = I2C1;
 80044fe:	602b      	str	r3, [r5, #0]
  hi2c1.Init.Timing = 0x00000109;
 8004500:	230a      	movs	r3, #10
 8004502:	33ff      	adds	r3, #255	; 0xff
 8004504:	606b      	str	r3, [r5, #4]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8004506:	3b09      	subs	r3, #9
 8004508:	3bff      	subs	r3, #255	; 0xff
 800450a:	60eb      	str	r3, [r5, #12]
  hi2c1.Init.OwnAddress1 = 0;
 800450c:	60ae      	str	r6, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800450e:	612e      	str	r6, [r5, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8004510:	616e      	str	r6, [r5, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8004512:	61ae      	str	r6, [r5, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8004514:	61ee      	str	r6, [r5, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8004516:	622e      	str	r6, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8004518:	f7fe f958 	bl	80027cc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800451c:	0031      	movs	r1, r6
 800451e:	0028      	movs	r0, r5
 8004520:	f7fe fbb2 	bl	8002c88 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8004524:	0031      	movs	r1, r6
 8004526:	0028      	movs	r0, r5
 8004528:	f7fe fbd4 	bl	8002cd4 <HAL_I2CEx_ConfigDigitalFilter>
  HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C1);
 800452c:	2080      	movs	r0, #128	; 0x80
 800452e:	0340      	lsls	r0, r0, #13
 8004530:	f7fe fbf4 	bl	8002d1c <HAL_I2CEx_EnableFastModePlus>
  huart2.Instance = USART2;
 8004534:	4c48      	ldr	r4, [pc, #288]	; (8004658 <main+0x1c8>)
 8004536:	4b49      	ldr	r3, [pc, #292]	; (800465c <main+0x1cc>)
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004538:	0020      	movs	r0, r4
  huart2.Instance = USART2;
 800453a:	6023      	str	r3, [r4, #0]
  huart2.Init.BaudRate = 115200;
 800453c:	23e1      	movs	r3, #225	; 0xe1
 800453e:	025b      	lsls	r3, r3, #9
 8004540:	6063      	str	r3, [r4, #4]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004542:	230c      	movs	r3, #12
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8004544:	60a6      	str	r6, [r4, #8]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004546:	6163      	str	r3, [r4, #20]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8004548:	60e6      	str	r6, [r4, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800454a:	6126      	str	r6, [r4, #16]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800454c:	61a6      	str	r6, [r4, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800454e:	61e6      	str	r6, [r4, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004550:	6226      	str	r6, [r4, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004552:	6266      	str	r6, [r4, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004554:	62a6      	str	r6, [r4, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004556:	f7ff fe8f 	bl	8004278 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 800455a:	0031      	movs	r1, r6
 800455c:	0020      	movs	r0, r4
 800455e:	f7ff ff1d 	bl	800439c <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004562:	0031      	movs	r1, r6
 8004564:	0020      	movs	r0, r4
 8004566:	f7ff ff3b 	bl	80043e0 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 800456a:	0020      	movs	r0, r4
 800456c:	f7ff fefa 	bl	8004364 <HAL_UARTEx_DisableFifoMode>
  printf("\n\n\n\n****** newSession ******\n\n");
 8004570:	483b      	ldr	r0, [pc, #236]	; (8004660 <main+0x1d0>)
 8004572:	f000 febd 	bl	80052f0 <puts>
  status = HAL_I2C_IsDeviceReady(&hi2c1,0x33<<1,2,200);
 8004576:	23c8      	movs	r3, #200	; 0xc8
 8004578:	2202      	movs	r2, #2
 800457a:	2166      	movs	r1, #102	; 0x66
 800457c:	0028      	movs	r0, r5
 800457e:	f7fe faf1 	bl	8002b64 <HAL_I2C_IsDeviceReady>
  if(status != HAL_OK)
 8004582:	42b0      	cmp	r0, r6
 8004584:	d057      	beq.n	8004636 <main+0x1a6>
	  printf("i2c device was not ready\n");
 8004586:	4837      	ldr	r0, [pc, #220]	; (8004664 <main+0x1d4>)
 8004588:	f000 feb2 	bl	80052f0 <puts>
  int deviceReadyFlag = 0;
 800458c:	607e      	str	r6, [r7, #4]
	  deviceReadyFlag = 1;
 800458e:	2301      	movs	r3, #1
			status = HAL_I2C_Mem_Read(&hi2c1, 0x33 << 1, startAddress, I2C_MEMADD_SIZE_16BIT, i2cData, nMemAddressRead * 2  , 10);
 8004590:	250a      	movs	r5, #10
	  deviceReadyFlag = 1;
 8004592:	001e      	movs	r6, r3
	  if(deviceReadyFlag){
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2b00      	cmp	r3, #0
 8004598:	d048      	beq.n	800462c <main+0x19c>
 800459a:	466b      	mov	r3, sp
			status = HAL_I2C_Mem_Read(&hi2c1, 0x33 << 1, startAddress, I2C_MEMADD_SIZE_16BIT, i2cData, nMemAddressRead * 2  , 10);
 800459c:	22d0      	movs	r2, #208	; 0xd0
	  if(deviceReadyFlag){
 800459e:	603b      	str	r3, [r7, #0]
			uint8_t i2cData[nMemAddressRead * 2];
 80045a0:	4b31      	ldr	r3, [pc, #196]	; (8004668 <main+0x1d8>)
			status = HAL_I2C_Mem_Read(&hi2c1, 0x33 << 1, startAddress, I2C_MEMADD_SIZE_16BIT, i2cData, nMemAddressRead * 2  , 10);
 80045a2:	00d2      	lsls	r2, r2, #3
			uint8_t i2cData[nMemAddressRead * 2];
 80045a4:	449d      	add	sp, r3
			status = HAL_I2C_Mem_Read(&hi2c1, 0x33 << 1, startAddress, I2C_MEMADD_SIZE_16BIT, i2cData, nMemAddressRead * 2  , 10);
 80045a6:	9201      	str	r2, [sp, #4]
 80045a8:	2290      	movs	r2, #144	; 0x90
 80045aa:	4c29      	ldr	r4, [pc, #164]	; (8004650 <main+0x1c0>)
			uint8_t i2cData[nMemAddressRead * 2];
 80045ac:	ab04      	add	r3, sp, #16
			status = HAL_I2C_Mem_Read(&hi2c1, 0x33 << 1, startAddress, I2C_MEMADD_SIZE_16BIT, i2cData, nMemAddressRead * 2  , 10);
 80045ae:	9300      	str	r3, [sp, #0]
 80045b0:	2166      	movs	r1, #102	; 0x66
 80045b2:	9502      	str	r5, [sp, #8]
 80045b4:	2302      	movs	r3, #2
 80045b6:	0192      	lsls	r2, r2, #6
 80045b8:	0020      	movs	r0, r4
 80045ba:	f7fe fa15 	bl	80029e8 <HAL_I2C_Mem_Read>
 80045be:	1e01      	subs	r1, r0, #0
			if(status != HAL_OK){
 80045c0:	d002      	beq.n	80045c8 <main+0x138>
				printf("i2c read error : %d\n",status);
 80045c2:	482a      	ldr	r0, [pc, #168]	; (800466c <main+0x1dc>)
 80045c4:	f000 fe1a 	bl	80051fc <iprintf>
		  HAL_I2C_Mem_Read(&hi2c1, 0x33<<1, targetAddr, 2, buffer, 2, 10);
 80045c8:	2108      	movs	r1, #8
 80045ca:	220c      	movs	r2, #12
 80045cc:	2302      	movs	r3, #2
 80045ce:	1879      	adds	r1, r7, r1
 80045d0:	188a      	adds	r2, r1, r2
 80045d2:	9301      	str	r3, [sp, #4]
 80045d4:	9200      	str	r2, [sp, #0]
 80045d6:	2166      	movs	r1, #102	; 0x66
 80045d8:	0020      	movs	r0, r4
 80045da:	9502      	str	r5, [sp, #8]
 80045dc:	4a24      	ldr	r2, [pc, #144]	; (8004670 <main+0x1e0>)
 80045de:	f7fe fa03 	bl	80029e8 <HAL_I2C_Mem_Read>
		  uint16_t readValue = (((uint16_t)buffer[0]) << 8) | (uint16_t)buffer[1];
 80045e2:	7d3c      	ldrb	r4, [r7, #20]
 80045e4:	7d7b      	ldrb	r3, [r7, #21]
 80045e6:	0224      	lsls	r4, r4, #8
 80045e8:	431c      	orrs	r4, r3
		  resolutionRam = (readValue & 0x1000) >> 12;
 80045ea:	04e1      	lsls	r1, r4, #19
 80045ec:	0fc9      	lsrs	r1, r1, #31
		  printf("readvalue = %d\n",resolutionRam);
 80045ee:	4821      	ldr	r0, [pc, #132]	; (8004674 <main+0x1e4>)
 80045f0:	f000 fe04 	bl	80051fc <iprintf>
		  int value = currentMode == 1 ? (readValue & 0xEFFF) : (readValue | 0x1000);
 80045f4:	2e01      	cmp	r6, #1
 80045f6:	d124      	bne.n	8004642 <main+0x1b2>
 80045f8:	4b1f      	ldr	r3, [pc, #124]	; (8004678 <main+0x1e8>)
 80045fa:	401c      	ands	r4, r3
		  HAL_I2C_Mem_Write(&hi2c1, 0x33<<1, targetAddr, 2, buffer, 2, 10);
 80045fc:	2108      	movs	r1, #8
		  buffer[0] = (uint8_t)(value >> 8);
 80045fe:	1223      	asrs	r3, r4, #8
		  HAL_I2C_Mem_Write(&hi2c1, 0x33<<1, targetAddr, 2, buffer, 2, 10);
 8004600:	220c      	movs	r2, #12
		  buffer[0] = (uint8_t)(value >> 8);
 8004602:	753b      	strb	r3, [r7, #20]
		  buffer[1] = (uint8_t)(value && 0x00FF);
 8004604:	1e63      	subs	r3, r4, #1
 8004606:	419c      	sbcs	r4, r3
		  HAL_I2C_Mem_Write(&hi2c1, 0x33<<1, targetAddr, 2, buffer, 2, 10);
 8004608:	2302      	movs	r3, #2
 800460a:	1879      	adds	r1, r7, r1
 800460c:	188a      	adds	r2, r1, r2
		  buffer[1] = (uint8_t)(value && 0x00FF);
 800460e:	757c      	strb	r4, [r7, #21]
		  HAL_I2C_Mem_Write(&hi2c1, 0x33<<1, targetAddr, 2, buffer, 2, 10);
 8004610:	2166      	movs	r1, #102	; 0x66
 8004612:	9301      	str	r3, [sp, #4]
 8004614:	9200      	str	r2, [sp, #0]
 8004616:	9502      	str	r5, [sp, #8]
 8004618:	4a15      	ldr	r2, [pc, #84]	; (8004670 <main+0x1e0>)
 800461a:	480d      	ldr	r0, [pc, #52]	; (8004650 <main+0x1c0>)
 800461c:	f7fe f92c 	bl	8002878 <HAL_I2C_Mem_Write>
 8004620:	2301      	movs	r3, #1
 8004622:	0032      	movs	r2, r6
 8004624:	405a      	eors	r2, r3
 8004626:	683b      	ldr	r3, [r7, #0]
 8004628:	0016      	movs	r6, r2
 800462a:	469d      	mov	sp, r3
	  HAL_Delay(500);
 800462c:	20fa      	movs	r0, #250	; 0xfa
 800462e:	0040      	lsls	r0, r0, #1
 8004630:	f7fd fe38 	bl	80022a4 <HAL_Delay>
	  if(deviceReadyFlag){
 8004634:	e7ae      	b.n	8004594 <main+0x104>
	  printf("device responded \n");
 8004636:	4811      	ldr	r0, [pc, #68]	; (800467c <main+0x1ec>)
 8004638:	f000 fe5a 	bl	80052f0 <puts>
	  deviceReadyFlag = 1;
 800463c:	2301      	movs	r3, #1
 800463e:	607b      	str	r3, [r7, #4]
 8004640:	e7a5      	b.n	800458e <main+0xfe>
		  int value = currentMode == 1 ? (readValue & 0xEFFF) : (readValue | 0x1000);
 8004642:	2380      	movs	r3, #128	; 0x80
 8004644:	015b      	lsls	r3, r3, #5
 8004646:	431c      	orrs	r4, r3
 8004648:	e7d8      	b.n	80045fc <main+0x16c>
 800464a:	46c0      	nop			; (mov r8, r8)
 800464c:	40021000 	.word	0x40021000
 8004650:	20000208 	.word	0x20000208
 8004654:	40005400 	.word	0x40005400
 8004658:	20000254 	.word	0x20000254
 800465c:	40004400 	.word	0x40004400
 8004660:	08007201 	.word	0x08007201
 8004664:	0800721f 	.word	0x0800721f
 8004668:	fffff980 	.word	0xfffff980
 800466c:	0800724a 	.word	0x0800724a
 8004670:	0000800d 	.word	0x0000800d
 8004674:	0800725f 	.word	0x0800725f
 8004678:	ffffefff 	.word	0xffffefff
 800467c:	08007238 	.word	0x08007238

08004680 <__io_putchar>:

}

/* USER CODE BEGIN 4 */
int __io_putchar(int ch)
{
 8004680:	b513      	push	{r0, r1, r4, lr}
 8004682:	0004      	movs	r4, r0
 uint8_t c[1];
 c[0] = ch & 0x00FF;
 8004684:	a901      	add	r1, sp, #4
 8004686:	7008      	strb	r0, [r1, #0]
 HAL_UART_Transmit(&huart2, &*c, 1, 10);
 8004688:	230a      	movs	r3, #10
 800468a:	2201      	movs	r2, #1
 800468c:	4802      	ldr	r0, [pc, #8]	; (8004698 <__io_putchar+0x18>)
 800468e:	f7ff fd53 	bl	8004138 <HAL_UART_Transmit>
 return ch;
}
 8004692:	0020      	movs	r0, r4
 8004694:	bd16      	pop	{r1, r2, r4, pc}
 8004696:	46c0      	nop			; (mov r8, r8)
 8004698:	20000254 	.word	0x20000254

0800469c <_write>:

int _write(int file,char *ptr, int len)
{
 800469c:	b570      	push	{r4, r5, r6, lr}
 800469e:	000e      	movs	r6, r1
 80046a0:	0015      	movs	r5, r2
 int DataIdx;
 for(DataIdx= 0; DataIdx< len; DataIdx++)
 80046a2:	000c      	movs	r4, r1
 80046a4:	1ba3      	subs	r3, r4, r6
 80046a6:	429d      	cmp	r5, r3
 80046a8:	dc01      	bgt.n	80046ae <_write+0x12>
 {
 __io_putchar(*ptr++);
 }
return len;
}
 80046aa:	0028      	movs	r0, r5
 80046ac:	bd70      	pop	{r4, r5, r6, pc}
 __io_putchar(*ptr++);
 80046ae:	7820      	ldrb	r0, [r4, #0]
 80046b0:	f7ff ffe6 	bl	8004680 <__io_putchar>
 80046b4:	3401      	adds	r4, #1
 80046b6:	e7f5      	b.n	80046a4 <_write+0x8>

080046b8 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80046b8:	2001      	movs	r0, #1
 80046ba:	4b0d      	ldr	r3, [pc, #52]	; (80046f0 <HAL_MspInit+0x38>)
{
 80046bc:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80046be:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80046c0:	4301      	orrs	r1, r0
 80046c2:	6419      	str	r1, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 80046c4:	2180      	movs	r1, #128	; 0x80
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80046c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  __HAL_RCC_PWR_CLK_ENABLE();
 80046c8:	0549      	lsls	r1, r1, #21
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80046ca:	4002      	ands	r2, r0
 80046cc:	9200      	str	r2, [sp, #0]
 80046ce:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80046d0:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80046d2:	430a      	orrs	r2, r1
 80046d4:	63da      	str	r2, [r3, #60]	; 0x3c
 80046d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  *         (*) value not defined in all devices
  * @retval None
  */
__STATIC_INLINE void LL_SYSCFG_DisableDBATT(uint32_t ConfigDeadBattery)
{
  SET_BIT(SYSCFG->CFGR1, ConfigDeadBattery);
 80046d8:	4a06      	ldr	r2, [pc, #24]	; (80046f4 <HAL_MspInit+0x3c>)
 80046da:	400b      	ands	r3, r1
 80046dc:	9301      	str	r3, [sp, #4]
 80046de:	9b01      	ldr	r3, [sp, #4]
 80046e0:	23c0      	movs	r3, #192	; 0xc0
 80046e2:	6811      	ldr	r1, [r2, #0]
 80046e4:	00db      	lsls	r3, r3, #3
 80046e6:	430b      	orrs	r3, r1
 80046e8:	6013      	str	r3, [r2, #0]
  LL_SYSCFG_DisableDBATT(LL_SYSCFG_UCPD1_STROBE | LL_SYSCFG_UCPD2_STROBE);

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80046ea:	b002      	add	sp, #8
 80046ec:	4770      	bx	lr
 80046ee:	46c0      	nop			; (mov r8, r8)
 80046f0:	40021000 	.word	0x40021000
 80046f4:	40010000 	.word	0x40010000

080046f8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80046f8:	b510      	push	{r4, lr}
 80046fa:	0004      	movs	r4, r0
 80046fc:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80046fe:	2214      	movs	r2, #20
 8004700:	2100      	movs	r1, #0
 8004702:	a803      	add	r0, sp, #12
 8004704:	f000 f902 	bl	800490c <memset>
  if(hi2c->Instance==I2C1)
 8004708:	4b12      	ldr	r3, [pc, #72]	; (8004754 <HAL_I2C_MspInit+0x5c>)
 800470a:	6822      	ldr	r2, [r4, #0]
 800470c:	429a      	cmp	r2, r3
 800470e:	d11e      	bne.n	800474e <HAL_I2C_MspInit+0x56>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004710:	2102      	movs	r1, #2
 8004712:	4c11      	ldr	r4, [pc, #68]	; (8004758 <HAL_I2C_MspInit+0x60>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004714:	4811      	ldr	r0, [pc, #68]	; (800475c <HAL_I2C_MspInit+0x64>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004716:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8004718:	430a      	orrs	r2, r1
 800471a:	6362      	str	r2, [r4, #52]	; 0x34
 800471c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800471e:	400b      	ands	r3, r1
 8004720:	9301      	str	r3, [sp, #4]
 8004722:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8004724:	23c0      	movs	r3, #192	; 0xc0
 8004726:	009b      	lsls	r3, r3, #2
 8004728:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800472a:	2312      	movs	r3, #18
 800472c:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800472e:	3b11      	subs	r3, #17
 8004730:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004732:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF6_I2C1;
 8004734:	3305      	adds	r3, #5
 8004736:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004738:	f7fd fe5a 	bl	80023f0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800473c:	2180      	movs	r1, #128	; 0x80
 800473e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8004740:	0389      	lsls	r1, r1, #14
 8004742:	430a      	orrs	r2, r1
 8004744:	63e2      	str	r2, [r4, #60]	; 0x3c
 8004746:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004748:	400b      	ands	r3, r1
 800474a:	9302      	str	r3, [sp, #8]
 800474c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800474e:	b008      	add	sp, #32
 8004750:	bd10      	pop	{r4, pc}
 8004752:	46c0      	nop			; (mov r8, r8)
 8004754:	40005400 	.word	0x40005400
 8004758:	40021000 	.word	0x40021000
 800475c:	50000400 	.word	0x50000400

08004760 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8004760:	b510      	push	{r4, lr}
 8004762:	0004      	movs	r4, r0
 8004764:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004766:	2214      	movs	r2, #20
 8004768:	2100      	movs	r1, #0
 800476a:	a803      	add	r0, sp, #12
 800476c:	f000 f8ce 	bl	800490c <memset>
  if(huart->Instance==USART2)
 8004770:	4b14      	ldr	r3, [pc, #80]	; (80047c4 <HAL_UART_MspInit+0x64>)
 8004772:	6822      	ldr	r2, [r4, #0]
 8004774:	429a      	cmp	r2, r3
 8004776:	d123      	bne.n	80047c0 <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8004778:	2080      	movs	r0, #128	; 0x80
 800477a:	4b13      	ldr	r3, [pc, #76]	; (80047c8 <HAL_UART_MspInit+0x68>)
 800477c:	0280      	lsls	r0, r0, #10
 800477e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8004780:	4301      	orrs	r1, r0
 8004782:	63d9      	str	r1, [r3, #60]	; 0x3c
 8004784:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8004786:	4002      	ands	r2, r0
 8004788:	9201      	str	r2, [sp, #4]
 800478a:	9a01      	ldr	r2, [sp, #4]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800478c:	2201      	movs	r2, #1
 800478e:	6b59      	ldr	r1, [r3, #52]	; 0x34
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004790:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004792:	4311      	orrs	r1, r2
 8004794:	6359      	str	r1, [r3, #52]	; 0x34
 8004796:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004798:	a903      	add	r1, sp, #12
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800479a:	4013      	ands	r3, r2
 800479c:	9302      	str	r3, [sp, #8]
 800479e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80047a0:	230c      	movs	r3, #12
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80047a2:	05c0      	lsls	r0, r0, #23
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80047a4:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80047a6:	3b0a      	subs	r3, #10
 80047a8:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80047aa:	9207      	str	r2, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80047ac:	f7fd fe20 	bl	80023f0 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 80047b0:	2200      	movs	r2, #0
 80047b2:	201c      	movs	r0, #28
 80047b4:	0011      	movs	r1, r2
 80047b6:	f7fd fd87 	bl	80022c8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 80047ba:	201c      	movs	r0, #28
 80047bc:	f7fd fdb4 	bl	8002328 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80047c0:	b008      	add	sp, #32
 80047c2:	bd10      	pop	{r4, pc}
 80047c4:	40004400 	.word	0x40004400
 80047c8:	40021000 	.word	0x40021000

080047cc <NMI_Handler>:
 80047cc:	4770      	bx	lr

080047ce <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80047ce:	e7fe      	b.n	80047ce <HardFault_Handler>

080047d0 <SVC_Handler>:
 80047d0:	4770      	bx	lr

080047d2 <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80047d2:	4770      	bx	lr

080047d4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80047d4:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80047d6:	f7fd fd53 	bl	8002280 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80047da:	bd10      	pop	{r4, pc}

080047dc <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI line 26.
  */
void USART2_IRQHandler(void)
{
 80047dc:	b510      	push	{r4, lr}
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80047de:	4802      	ldr	r0, [pc, #8]	; (80047e8 <USART2_IRQHandler+0xc>)
 80047e0:	f7fe ff24 	bl	800362c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80047e4:	bd10      	pop	{r4, pc}
 80047e6:	46c0      	nop			; (mov r8, r8)
 80047e8:	20000254 	.word	0x20000254

080047ec <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80047ec:	b570      	push	{r4, r5, r6, lr}
 80047ee:	000e      	movs	r6, r1
 80047f0:	0015      	movs	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80047f2:	000c      	movs	r4, r1
 80047f4:	1ba3      	subs	r3, r4, r6
 80047f6:	429d      	cmp	r5, r3
 80047f8:	dc01      	bgt.n	80047fe <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80047fa:	0028      	movs	r0, r5
 80047fc:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 80047fe:	e000      	b.n	8004802 <_read+0x16>
 8004800:	bf00      	nop
 8004802:	7020      	strb	r0, [r4, #0]
 8004804:	3401      	adds	r4, #1
 8004806:	e7f5      	b.n	80047f4 <_read+0x8>

08004808 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8004808:	4b0a      	ldr	r3, [pc, #40]	; (8004834 <_sbrk+0x2c>)
{
 800480a:	b510      	push	{r4, lr}
	if (heap_end == 0)
 800480c:	6819      	ldr	r1, [r3, #0]
{
 800480e:	0002      	movs	r2, r0
	if (heap_end == 0)
 8004810:	2900      	cmp	r1, #0
 8004812:	d101      	bne.n	8004818 <_sbrk+0x10>
		heap_end = &end;
 8004814:	4908      	ldr	r1, [pc, #32]	; (8004838 <_sbrk+0x30>)
 8004816:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8004818:	4669      	mov	r1, sp
	prev_heap_end = heap_end;
 800481a:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 800481c:	1882      	adds	r2, r0, r2
 800481e:	428a      	cmp	r2, r1
 8004820:	d906      	bls.n	8004830 <_sbrk+0x28>
	{
//		write(1, "Heap and stack collision\n", 25);
//		abort();
		errno = ENOMEM;
 8004822:	f000 f849 	bl	80048b8 <__errno>
 8004826:	230c      	movs	r3, #12
 8004828:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800482a:	2001      	movs	r0, #1
 800482c:	4240      	negs	r0, r0
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800482e:	bd10      	pop	{r4, pc}
	heap_end += incr;
 8004830:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8004832:	e7fc      	b.n	800482e <_sbrk+0x26>
 8004834:	200001f8 	.word	0x200001f8
 8004838:	200002e4 	.word	0x200002e4

0800483c <_close>:

int _close(int file)
{
	return -1;
}
 800483c:	2001      	movs	r0, #1
 800483e:	4240      	negs	r0, r0
 8004840:	4770      	bx	lr

08004842 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8004842:	2380      	movs	r3, #128	; 0x80
 8004844:	019b      	lsls	r3, r3, #6
	return 0;
}
 8004846:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 8004848:	604b      	str	r3, [r1, #4]
}
 800484a:	4770      	bx	lr

0800484c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800484c:	2001      	movs	r0, #1
 800484e:	4770      	bx	lr

08004850 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8004850:	2000      	movs	r0, #0
 8004852:	4770      	bx	lr

08004854 <SystemInit>:
{
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004854:	2280      	movs	r2, #128	; 0x80
 8004856:	4b02      	ldr	r3, [pc, #8]	; (8004860 <SystemInit+0xc>)
 8004858:	0512      	lsls	r2, r2, #20
 800485a:	609a      	str	r2, [r3, #8]
#endif
}
 800485c:	4770      	bx	lr
 800485e:	46c0      	nop			; (mov r8, r8)
 8004860:	e000ed00 	.word	0xe000ed00

08004864 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8004864:	480d      	ldr	r0, [pc, #52]	; (800489c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8004866:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8004868:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800486a:	e003      	b.n	8004874 <LoopCopyDataInit>

0800486c <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 800486c:	4b0c      	ldr	r3, [pc, #48]	; (80048a0 <LoopForever+0x6>)
  ldr r3, [r3, r1]
 800486e:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8004870:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8004872:	3104      	adds	r1, #4

08004874 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8004874:	480b      	ldr	r0, [pc, #44]	; (80048a4 <LoopForever+0xa>)
  ldr r3, =_edata
 8004876:	4b0c      	ldr	r3, [pc, #48]	; (80048a8 <LoopForever+0xe>)
  adds r2, r0, r1
 8004878:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800487a:	429a      	cmp	r2, r3
  bcc CopyDataInit
 800487c:	d3f6      	bcc.n	800486c <CopyDataInit>
  ldr r2, =_sbss
 800487e:	4a0b      	ldr	r2, [pc, #44]	; (80048ac <LoopForever+0x12>)
  b LoopFillZerobss
 8004880:	e002      	b.n	8004888 <LoopFillZerobss>

08004882 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8004882:	2300      	movs	r3, #0
  str  r3, [r2]
 8004884:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8004886:	3204      	adds	r2, #4

08004888 <LoopFillZerobss>:


LoopFillZerobss:
  ldr r3, = _ebss
 8004888:	4b09      	ldr	r3, [pc, #36]	; (80048b0 <LoopForever+0x16>)
  cmp r2, r3
 800488a:	429a      	cmp	r2, r3
  bcc FillZerobss
 800488c:	d3f9      	bcc.n	8004882 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800488e:	f7ff ffe1 	bl	8004854 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8004892:	f000 f817 	bl	80048c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8004896:	f7ff fdfb 	bl	8004490 <main>

0800489a <LoopForever>:

LoopForever:
    b LoopForever
 800489a:	e7fe      	b.n	800489a <LoopForever>
  ldr   r0, =_estack
 800489c:	20009000 	.word	0x20009000
  ldr r3, =_sidata
 80048a0:	080075a0 	.word	0x080075a0
  ldr r0, =_sdata
 80048a4:	20000000 	.word	0x20000000
  ldr r3, =_edata
 80048a8:	200001dc 	.word	0x200001dc
  ldr r2, =_sbss
 80048ac:	200001dc 	.word	0x200001dc
  ldr r3, = _ebss
 80048b0:	200002e4 	.word	0x200002e4

080048b4 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80048b4:	e7fe      	b.n	80048b4 <ADC1_COMP_IRQHandler>
	...

080048b8 <__errno>:
 80048b8:	4b01      	ldr	r3, [pc, #4]	; (80048c0 <__errno+0x8>)
 80048ba:	6818      	ldr	r0, [r3, #0]
 80048bc:	4770      	bx	lr
 80048be:	46c0      	nop			; (mov r8, r8)
 80048c0:	2000000c 	.word	0x2000000c

080048c4 <__libc_init_array>:
 80048c4:	b570      	push	{r4, r5, r6, lr}
 80048c6:	2600      	movs	r6, #0
 80048c8:	4d0c      	ldr	r5, [pc, #48]	; (80048fc <__libc_init_array+0x38>)
 80048ca:	4c0d      	ldr	r4, [pc, #52]	; (8004900 <__libc_init_array+0x3c>)
 80048cc:	1b64      	subs	r4, r4, r5
 80048ce:	10a4      	asrs	r4, r4, #2
 80048d0:	42a6      	cmp	r6, r4
 80048d2:	d109      	bne.n	80048e8 <__libc_init_array+0x24>
 80048d4:	2600      	movs	r6, #0
 80048d6:	f002 fc3d 	bl	8007154 <_init>
 80048da:	4d0a      	ldr	r5, [pc, #40]	; (8004904 <__libc_init_array+0x40>)
 80048dc:	4c0a      	ldr	r4, [pc, #40]	; (8004908 <__libc_init_array+0x44>)
 80048de:	1b64      	subs	r4, r4, r5
 80048e0:	10a4      	asrs	r4, r4, #2
 80048e2:	42a6      	cmp	r6, r4
 80048e4:	d105      	bne.n	80048f2 <__libc_init_array+0x2e>
 80048e6:	bd70      	pop	{r4, r5, r6, pc}
 80048e8:	00b3      	lsls	r3, r6, #2
 80048ea:	58eb      	ldr	r3, [r5, r3]
 80048ec:	4798      	blx	r3
 80048ee:	3601      	adds	r6, #1
 80048f0:	e7ee      	b.n	80048d0 <__libc_init_array+0xc>
 80048f2:	00b3      	lsls	r3, r6, #2
 80048f4:	58eb      	ldr	r3, [r5, r3]
 80048f6:	4798      	blx	r3
 80048f8:	3601      	adds	r6, #1
 80048fa:	e7f2      	b.n	80048e2 <__libc_init_array+0x1e>
 80048fc:	08007598 	.word	0x08007598
 8004900:	08007598 	.word	0x08007598
 8004904:	08007598 	.word	0x08007598
 8004908:	0800759c 	.word	0x0800759c

0800490c <memset>:
 800490c:	0003      	movs	r3, r0
 800490e:	1882      	adds	r2, r0, r2
 8004910:	4293      	cmp	r3, r2
 8004912:	d100      	bne.n	8004916 <memset+0xa>
 8004914:	4770      	bx	lr
 8004916:	7019      	strb	r1, [r3, #0]
 8004918:	3301      	adds	r3, #1
 800491a:	e7f9      	b.n	8004910 <memset+0x4>

0800491c <__cvt>:
 800491c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800491e:	b08b      	sub	sp, #44	; 0x2c
 8004920:	0014      	movs	r4, r2
 8004922:	1e1d      	subs	r5, r3, #0
 8004924:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004926:	da53      	bge.n	80049d0 <__cvt+0xb4>
 8004928:	2480      	movs	r4, #128	; 0x80
 800492a:	0624      	lsls	r4, r4, #24
 800492c:	191b      	adds	r3, r3, r4
 800492e:	001d      	movs	r5, r3
 8004930:	0014      	movs	r4, r2
 8004932:	232d      	movs	r3, #45	; 0x2d
 8004934:	700b      	strb	r3, [r1, #0]
 8004936:	2320      	movs	r3, #32
 8004938:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800493a:	2203      	movs	r2, #3
 800493c:	439e      	bics	r6, r3
 800493e:	2e46      	cmp	r6, #70	; 0x46
 8004940:	d007      	beq.n	8004952 <__cvt+0x36>
 8004942:	0033      	movs	r3, r6
 8004944:	3b45      	subs	r3, #69	; 0x45
 8004946:	4259      	negs	r1, r3
 8004948:	414b      	adcs	r3, r1
 800494a:	9910      	ldr	r1, [sp, #64]	; 0x40
 800494c:	3a01      	subs	r2, #1
 800494e:	18cb      	adds	r3, r1, r3
 8004950:	9310      	str	r3, [sp, #64]	; 0x40
 8004952:	ab09      	add	r3, sp, #36	; 0x24
 8004954:	9304      	str	r3, [sp, #16]
 8004956:	ab08      	add	r3, sp, #32
 8004958:	9303      	str	r3, [sp, #12]
 800495a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800495c:	9200      	str	r2, [sp, #0]
 800495e:	9302      	str	r3, [sp, #8]
 8004960:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004962:	0022      	movs	r2, r4
 8004964:	9301      	str	r3, [sp, #4]
 8004966:	002b      	movs	r3, r5
 8004968:	f000 fe1c 	bl	80055a4 <_dtoa_r>
 800496c:	0007      	movs	r7, r0
 800496e:	2e47      	cmp	r6, #71	; 0x47
 8004970:	d102      	bne.n	8004978 <__cvt+0x5c>
 8004972:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004974:	07db      	lsls	r3, r3, #31
 8004976:	d524      	bpl.n	80049c2 <__cvt+0xa6>
 8004978:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800497a:	18fb      	adds	r3, r7, r3
 800497c:	9307      	str	r3, [sp, #28]
 800497e:	2e46      	cmp	r6, #70	; 0x46
 8004980:	d114      	bne.n	80049ac <__cvt+0x90>
 8004982:	783b      	ldrb	r3, [r7, #0]
 8004984:	2b30      	cmp	r3, #48	; 0x30
 8004986:	d10c      	bne.n	80049a2 <__cvt+0x86>
 8004988:	2200      	movs	r2, #0
 800498a:	2300      	movs	r3, #0
 800498c:	0020      	movs	r0, r4
 800498e:	0029      	movs	r1, r5
 8004990:	f7fb fd5a 	bl	8000448 <__aeabi_dcmpeq>
 8004994:	2800      	cmp	r0, #0
 8004996:	d104      	bne.n	80049a2 <__cvt+0x86>
 8004998:	2301      	movs	r3, #1
 800499a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800499c:	1a9b      	subs	r3, r3, r2
 800499e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80049a0:	6013      	str	r3, [r2, #0]
 80049a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80049a4:	9a07      	ldr	r2, [sp, #28]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	18d3      	adds	r3, r2, r3
 80049aa:	9307      	str	r3, [sp, #28]
 80049ac:	2200      	movs	r2, #0
 80049ae:	2300      	movs	r3, #0
 80049b0:	0020      	movs	r0, r4
 80049b2:	0029      	movs	r1, r5
 80049b4:	f7fb fd48 	bl	8000448 <__aeabi_dcmpeq>
 80049b8:	2230      	movs	r2, #48	; 0x30
 80049ba:	2800      	cmp	r0, #0
 80049bc:	d00d      	beq.n	80049da <__cvt+0xbe>
 80049be:	9b07      	ldr	r3, [sp, #28]
 80049c0:	9309      	str	r3, [sp, #36]	; 0x24
 80049c2:	0038      	movs	r0, r7
 80049c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049c6:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80049c8:	1bdb      	subs	r3, r3, r7
 80049ca:	6013      	str	r3, [r2, #0]
 80049cc:	b00b      	add	sp, #44	; 0x2c
 80049ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80049d0:	2300      	movs	r3, #0
 80049d2:	e7af      	b.n	8004934 <__cvt+0x18>
 80049d4:	1c59      	adds	r1, r3, #1
 80049d6:	9109      	str	r1, [sp, #36]	; 0x24
 80049d8:	701a      	strb	r2, [r3, #0]
 80049da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80049dc:	9907      	ldr	r1, [sp, #28]
 80049de:	4299      	cmp	r1, r3
 80049e0:	d8f8      	bhi.n	80049d4 <__cvt+0xb8>
 80049e2:	e7ee      	b.n	80049c2 <__cvt+0xa6>

080049e4 <__exponent>:
 80049e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80049e6:	232b      	movs	r3, #43	; 0x2b
 80049e8:	b085      	sub	sp, #20
 80049ea:	0007      	movs	r7, r0
 80049ec:	000c      	movs	r4, r1
 80049ee:	7002      	strb	r2, [r0, #0]
 80049f0:	1c86      	adds	r6, r0, #2
 80049f2:	2900      	cmp	r1, #0
 80049f4:	da01      	bge.n	80049fa <__exponent+0x16>
 80049f6:	232d      	movs	r3, #45	; 0x2d
 80049f8:	424c      	negs	r4, r1
 80049fa:	707b      	strb	r3, [r7, #1]
 80049fc:	2c09      	cmp	r4, #9
 80049fe:	dd23      	ble.n	8004a48 <__exponent+0x64>
 8004a00:	ab02      	add	r3, sp, #8
 8004a02:	1ddd      	adds	r5, r3, #7
 8004a04:	1e6b      	subs	r3, r5, #1
 8004a06:	0020      	movs	r0, r4
 8004a08:	210a      	movs	r1, #10
 8004a0a:	9301      	str	r3, [sp, #4]
 8004a0c:	f7fb fd06 	bl	800041c <__aeabi_idivmod>
 8004a10:	1e6b      	subs	r3, r5, #1
 8004a12:	3130      	adds	r1, #48	; 0x30
 8004a14:	7019      	strb	r1, [r3, #0]
 8004a16:	0020      	movs	r0, r4
 8004a18:	210a      	movs	r1, #10
 8004a1a:	f7fb fc19 	bl	8000250 <__divsi3>
 8004a1e:	0004      	movs	r4, r0
 8004a20:	2809      	cmp	r0, #9
 8004a22:	dc0a      	bgt.n	8004a3a <__exponent+0x56>
 8004a24:	3d02      	subs	r5, #2
 8004a26:	3430      	adds	r4, #48	; 0x30
 8004a28:	702c      	strb	r4, [r5, #0]
 8004a2a:	ab02      	add	r3, sp, #8
 8004a2c:	3307      	adds	r3, #7
 8004a2e:	0030      	movs	r0, r6
 8004a30:	42ab      	cmp	r3, r5
 8004a32:	d804      	bhi.n	8004a3e <__exponent+0x5a>
 8004a34:	1bc0      	subs	r0, r0, r7
 8004a36:	b005      	add	sp, #20
 8004a38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004a3a:	9d01      	ldr	r5, [sp, #4]
 8004a3c:	e7e2      	b.n	8004a04 <__exponent+0x20>
 8004a3e:	782b      	ldrb	r3, [r5, #0]
 8004a40:	3501      	adds	r5, #1
 8004a42:	7033      	strb	r3, [r6, #0]
 8004a44:	3601      	adds	r6, #1
 8004a46:	e7f0      	b.n	8004a2a <__exponent+0x46>
 8004a48:	2330      	movs	r3, #48	; 0x30
 8004a4a:	18e4      	adds	r4, r4, r3
 8004a4c:	7033      	strb	r3, [r6, #0]
 8004a4e:	1cb0      	adds	r0, r6, #2
 8004a50:	7074      	strb	r4, [r6, #1]
 8004a52:	e7ef      	b.n	8004a34 <__exponent+0x50>

08004a54 <_printf_float>:
 8004a54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004a56:	b095      	sub	sp, #84	; 0x54
 8004a58:	000c      	movs	r4, r1
 8004a5a:	920a      	str	r2, [sp, #40]	; 0x28
 8004a5c:	930b      	str	r3, [sp, #44]	; 0x2c
 8004a5e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004a60:	9009      	str	r0, [sp, #36]	; 0x24
 8004a62:	f001 fd15 	bl	8006490 <_localeconv_r>
 8004a66:	6803      	ldr	r3, [r0, #0]
 8004a68:	0018      	movs	r0, r3
 8004a6a:	930d      	str	r3, [sp, #52]	; 0x34
 8004a6c:	f7fb fb4a 	bl	8000104 <strlen>
 8004a70:	2300      	movs	r3, #0
 8004a72:	9312      	str	r3, [sp, #72]	; 0x48
 8004a74:	6823      	ldr	r3, [r4, #0]
 8004a76:	900e      	str	r0, [sp, #56]	; 0x38
 8004a78:	930c      	str	r3, [sp, #48]	; 0x30
 8004a7a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004a7c:	7e27      	ldrb	r7, [r4, #24]
 8004a7e:	682b      	ldr	r3, [r5, #0]
 8004a80:	2207      	movs	r2, #7
 8004a82:	05c9      	lsls	r1, r1, #23
 8004a84:	d547      	bpl.n	8004b16 <_printf_float+0xc2>
 8004a86:	189b      	adds	r3, r3, r2
 8004a88:	4393      	bics	r3, r2
 8004a8a:	001a      	movs	r2, r3
 8004a8c:	3208      	adds	r2, #8
 8004a8e:	602a      	str	r2, [r5, #0]
 8004a90:	681a      	ldr	r2, [r3, #0]
 8004a92:	685b      	ldr	r3, [r3, #4]
 8004a94:	64a2      	str	r2, [r4, #72]	; 0x48
 8004a96:	64e3      	str	r3, [r4, #76]	; 0x4c
 8004a98:	2201      	movs	r2, #1
 8004a9a:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8004a9c:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 8004a9e:	006b      	lsls	r3, r5, #1
 8004aa0:	085b      	lsrs	r3, r3, #1
 8004aa2:	930f      	str	r3, [sp, #60]	; 0x3c
 8004aa4:	4252      	negs	r2, r2
 8004aa6:	4ba7      	ldr	r3, [pc, #668]	; (8004d44 <_printf_float+0x2f0>)
 8004aa8:	0030      	movs	r0, r6
 8004aaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004aac:	f7fd fab4 	bl	8002018 <__aeabi_dcmpun>
 8004ab0:	2800      	cmp	r0, #0
 8004ab2:	d000      	beq.n	8004ab6 <_printf_float+0x62>
 8004ab4:	e206      	b.n	8004ec4 <_printf_float+0x470>
 8004ab6:	2201      	movs	r2, #1
 8004ab8:	4ba2      	ldr	r3, [pc, #648]	; (8004d44 <_printf_float+0x2f0>)
 8004aba:	4252      	negs	r2, r2
 8004abc:	0030      	movs	r0, r6
 8004abe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004ac0:	f7fb fcd2 	bl	8000468 <__aeabi_dcmple>
 8004ac4:	2800      	cmp	r0, #0
 8004ac6:	d000      	beq.n	8004aca <_printf_float+0x76>
 8004ac8:	e1fc      	b.n	8004ec4 <_printf_float+0x470>
 8004aca:	2200      	movs	r2, #0
 8004acc:	2300      	movs	r3, #0
 8004ace:	0030      	movs	r0, r6
 8004ad0:	0029      	movs	r1, r5
 8004ad2:	f7fb fcbf 	bl	8000454 <__aeabi_dcmplt>
 8004ad6:	2800      	cmp	r0, #0
 8004ad8:	d003      	beq.n	8004ae2 <_printf_float+0x8e>
 8004ada:	0023      	movs	r3, r4
 8004adc:	222d      	movs	r2, #45	; 0x2d
 8004ade:	3343      	adds	r3, #67	; 0x43
 8004ae0:	701a      	strb	r2, [r3, #0]
 8004ae2:	4d99      	ldr	r5, [pc, #612]	; (8004d48 <_printf_float+0x2f4>)
 8004ae4:	2f47      	cmp	r7, #71	; 0x47
 8004ae6:	d800      	bhi.n	8004aea <_printf_float+0x96>
 8004ae8:	4d98      	ldr	r5, [pc, #608]	; (8004d4c <_printf_float+0x2f8>)
 8004aea:	2303      	movs	r3, #3
 8004aec:	2600      	movs	r6, #0
 8004aee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004af0:	6123      	str	r3, [r4, #16]
 8004af2:	3301      	adds	r3, #1
 8004af4:	439a      	bics	r2, r3
 8004af6:	6022      	str	r2, [r4, #0]
 8004af8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004afa:	aa13      	add	r2, sp, #76	; 0x4c
 8004afc:	9300      	str	r3, [sp, #0]
 8004afe:	0021      	movs	r1, r4
 8004b00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b04:	f000 f9f2 	bl	8004eec <_printf_common>
 8004b08:	1c43      	adds	r3, r0, #1
 8004b0a:	d000      	beq.n	8004b0e <_printf_float+0xba>
 8004b0c:	e09c      	b.n	8004c48 <_printf_float+0x1f4>
 8004b0e:	2001      	movs	r0, #1
 8004b10:	4240      	negs	r0, r0
 8004b12:	b015      	add	sp, #84	; 0x54
 8004b14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004b16:	3307      	adds	r3, #7
 8004b18:	e7b6      	b.n	8004a88 <_printf_float+0x34>
 8004b1a:	2380      	movs	r3, #128	; 0x80
 8004b1c:	6862      	ldr	r2, [r4, #4]
 8004b1e:	00db      	lsls	r3, r3, #3
 8004b20:	1c51      	adds	r1, r2, #1
 8004b22:	d145      	bne.n	8004bb0 <_printf_float+0x15c>
 8004b24:	3207      	adds	r2, #7
 8004b26:	6062      	str	r2, [r4, #4]
 8004b28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004b2a:	2100      	movs	r1, #0
 8004b2c:	4313      	orrs	r3, r2
 8004b2e:	aa12      	add	r2, sp, #72	; 0x48
 8004b30:	9205      	str	r2, [sp, #20]
 8004b32:	aa11      	add	r2, sp, #68	; 0x44
 8004b34:	9203      	str	r2, [sp, #12]
 8004b36:	2223      	movs	r2, #35	; 0x23
 8004b38:	6023      	str	r3, [r4, #0]
 8004b3a:	9106      	str	r1, [sp, #24]
 8004b3c:	9301      	str	r3, [sp, #4]
 8004b3e:	a908      	add	r1, sp, #32
 8004b40:	6863      	ldr	r3, [r4, #4]
 8004b42:	1852      	adds	r2, r2, r1
 8004b44:	9202      	str	r2, [sp, #8]
 8004b46:	9300      	str	r3, [sp, #0]
 8004b48:	0032      	movs	r2, r6
 8004b4a:	002b      	movs	r3, r5
 8004b4c:	9704      	str	r7, [sp, #16]
 8004b4e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004b50:	f7ff fee4 	bl	800491c <__cvt>
 8004b54:	2320      	movs	r3, #32
 8004b56:	003a      	movs	r2, r7
 8004b58:	0005      	movs	r5, r0
 8004b5a:	439a      	bics	r2, r3
 8004b5c:	2a47      	cmp	r2, #71	; 0x47
 8004b5e:	d107      	bne.n	8004b70 <_printf_float+0x11c>
 8004b60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004b62:	1cda      	adds	r2, r3, #3
 8004b64:	db02      	blt.n	8004b6c <_printf_float+0x118>
 8004b66:	6862      	ldr	r2, [r4, #4]
 8004b68:	4293      	cmp	r3, r2
 8004b6a:	dd5b      	ble.n	8004c24 <_printf_float+0x1d0>
 8004b6c:	3f02      	subs	r7, #2
 8004b6e:	b2ff      	uxtb	r7, r7
 8004b70:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004b72:	2f65      	cmp	r7, #101	; 0x65
 8004b74:	d83b      	bhi.n	8004bee <_printf_float+0x19a>
 8004b76:	0020      	movs	r0, r4
 8004b78:	3901      	subs	r1, #1
 8004b7a:	003a      	movs	r2, r7
 8004b7c:	3050      	adds	r0, #80	; 0x50
 8004b7e:	9111      	str	r1, [sp, #68]	; 0x44
 8004b80:	f7ff ff30 	bl	80049e4 <__exponent>
 8004b84:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004b86:	0006      	movs	r6, r0
 8004b88:	1883      	adds	r3, r0, r2
 8004b8a:	6123      	str	r3, [r4, #16]
 8004b8c:	2a01      	cmp	r2, #1
 8004b8e:	dc02      	bgt.n	8004b96 <_printf_float+0x142>
 8004b90:	6822      	ldr	r2, [r4, #0]
 8004b92:	07d2      	lsls	r2, r2, #31
 8004b94:	d501      	bpl.n	8004b9a <_printf_float+0x146>
 8004b96:	3301      	adds	r3, #1
 8004b98:	6123      	str	r3, [r4, #16]
 8004b9a:	2323      	movs	r3, #35	; 0x23
 8004b9c:	aa08      	add	r2, sp, #32
 8004b9e:	189b      	adds	r3, r3, r2
 8004ba0:	781b      	ldrb	r3, [r3, #0]
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d0a8      	beq.n	8004af8 <_printf_float+0xa4>
 8004ba6:	0023      	movs	r3, r4
 8004ba8:	222d      	movs	r2, #45	; 0x2d
 8004baa:	3343      	adds	r3, #67	; 0x43
 8004bac:	701a      	strb	r2, [r3, #0]
 8004bae:	e7a3      	b.n	8004af8 <_printf_float+0xa4>
 8004bb0:	2f67      	cmp	r7, #103	; 0x67
 8004bb2:	d001      	beq.n	8004bb8 <_printf_float+0x164>
 8004bb4:	2f47      	cmp	r7, #71	; 0x47
 8004bb6:	d1b7      	bne.n	8004b28 <_printf_float+0xd4>
 8004bb8:	2a00      	cmp	r2, #0
 8004bba:	d016      	beq.n	8004bea <_printf_float+0x196>
 8004bbc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004bbe:	a808      	add	r0, sp, #32
 8004bc0:	430b      	orrs	r3, r1
 8004bc2:	2100      	movs	r1, #0
 8004bc4:	9106      	str	r1, [sp, #24]
 8004bc6:	a912      	add	r1, sp, #72	; 0x48
 8004bc8:	9105      	str	r1, [sp, #20]
 8004bca:	a911      	add	r1, sp, #68	; 0x44
 8004bcc:	9103      	str	r1, [sp, #12]
 8004bce:	2123      	movs	r1, #35	; 0x23
 8004bd0:	1809      	adds	r1, r1, r0
 8004bd2:	6023      	str	r3, [r4, #0]
 8004bd4:	9301      	str	r3, [sp, #4]
 8004bd6:	9200      	str	r2, [sp, #0]
 8004bd8:	002b      	movs	r3, r5
 8004bda:	9704      	str	r7, [sp, #16]
 8004bdc:	9102      	str	r1, [sp, #8]
 8004bde:	0032      	movs	r2, r6
 8004be0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004be2:	f7ff fe9b 	bl	800491c <__cvt>
 8004be6:	0005      	movs	r5, r0
 8004be8:	e7ba      	b.n	8004b60 <_printf_float+0x10c>
 8004bea:	2201      	movs	r2, #1
 8004bec:	e79b      	b.n	8004b26 <_printf_float+0xd2>
 8004bee:	2f66      	cmp	r7, #102	; 0x66
 8004bf0:	d119      	bne.n	8004c26 <_printf_float+0x1d2>
 8004bf2:	6863      	ldr	r3, [r4, #4]
 8004bf4:	2900      	cmp	r1, #0
 8004bf6:	dd0c      	ble.n	8004c12 <_printf_float+0x1be>
 8004bf8:	6121      	str	r1, [r4, #16]
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d102      	bne.n	8004c04 <_printf_float+0x1b0>
 8004bfe:	6822      	ldr	r2, [r4, #0]
 8004c00:	07d2      	lsls	r2, r2, #31
 8004c02:	d502      	bpl.n	8004c0a <_printf_float+0x1b6>
 8004c04:	3301      	adds	r3, #1
 8004c06:	185b      	adds	r3, r3, r1
 8004c08:	6123      	str	r3, [r4, #16]
 8004c0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004c0c:	2600      	movs	r6, #0
 8004c0e:	65a3      	str	r3, [r4, #88]	; 0x58
 8004c10:	e7c3      	b.n	8004b9a <_printf_float+0x146>
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d103      	bne.n	8004c1e <_printf_float+0x1ca>
 8004c16:	2201      	movs	r2, #1
 8004c18:	6821      	ldr	r1, [r4, #0]
 8004c1a:	4211      	tst	r1, r2
 8004c1c:	d000      	beq.n	8004c20 <_printf_float+0x1cc>
 8004c1e:	1c9a      	adds	r2, r3, #2
 8004c20:	6122      	str	r2, [r4, #16]
 8004c22:	e7f2      	b.n	8004c0a <_printf_float+0x1b6>
 8004c24:	2767      	movs	r7, #103	; 0x67
 8004c26:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004c28:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004c2a:	4283      	cmp	r3, r0
 8004c2c:	db05      	blt.n	8004c3a <_printf_float+0x1e6>
 8004c2e:	6822      	ldr	r2, [r4, #0]
 8004c30:	6123      	str	r3, [r4, #16]
 8004c32:	07d2      	lsls	r2, r2, #31
 8004c34:	d5e9      	bpl.n	8004c0a <_printf_float+0x1b6>
 8004c36:	3301      	adds	r3, #1
 8004c38:	e7e6      	b.n	8004c08 <_printf_float+0x1b4>
 8004c3a:	2201      	movs	r2, #1
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	dc01      	bgt.n	8004c44 <_printf_float+0x1f0>
 8004c40:	1892      	adds	r2, r2, r2
 8004c42:	1ad2      	subs	r2, r2, r3
 8004c44:	1812      	adds	r2, r2, r0
 8004c46:	e7eb      	b.n	8004c20 <_printf_float+0x1cc>
 8004c48:	6822      	ldr	r2, [r4, #0]
 8004c4a:	0553      	lsls	r3, r2, #21
 8004c4c:	d408      	bmi.n	8004c60 <_printf_float+0x20c>
 8004c4e:	6923      	ldr	r3, [r4, #16]
 8004c50:	002a      	movs	r2, r5
 8004c52:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004c54:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c56:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004c58:	47a8      	blx	r5
 8004c5a:	1c43      	adds	r3, r0, #1
 8004c5c:	d129      	bne.n	8004cb2 <_printf_float+0x25e>
 8004c5e:	e756      	b.n	8004b0e <_printf_float+0xba>
 8004c60:	2f65      	cmp	r7, #101	; 0x65
 8004c62:	d800      	bhi.n	8004c66 <_printf_float+0x212>
 8004c64:	e0dc      	b.n	8004e20 <_printf_float+0x3cc>
 8004c66:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004c68:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004c6a:	2200      	movs	r2, #0
 8004c6c:	2300      	movs	r3, #0
 8004c6e:	f7fb fbeb 	bl	8000448 <__aeabi_dcmpeq>
 8004c72:	2800      	cmp	r0, #0
 8004c74:	d035      	beq.n	8004ce2 <_printf_float+0x28e>
 8004c76:	2301      	movs	r3, #1
 8004c78:	4a35      	ldr	r2, [pc, #212]	; (8004d50 <_printf_float+0x2fc>)
 8004c7a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004c7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004c7e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004c80:	47a8      	blx	r5
 8004c82:	1c43      	adds	r3, r0, #1
 8004c84:	d100      	bne.n	8004c88 <_printf_float+0x234>
 8004c86:	e742      	b.n	8004b0e <_printf_float+0xba>
 8004c88:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004c8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004c8c:	4293      	cmp	r3, r2
 8004c8e:	db02      	blt.n	8004c96 <_printf_float+0x242>
 8004c90:	6823      	ldr	r3, [r4, #0]
 8004c92:	07db      	lsls	r3, r3, #31
 8004c94:	d50d      	bpl.n	8004cb2 <_printf_float+0x25e>
 8004c96:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004c98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004c9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004c9c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004c9e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004ca0:	47a8      	blx	r5
 8004ca2:	2500      	movs	r5, #0
 8004ca4:	1c43      	adds	r3, r0, #1
 8004ca6:	d100      	bne.n	8004caa <_printf_float+0x256>
 8004ca8:	e731      	b.n	8004b0e <_printf_float+0xba>
 8004caa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004cac:	3b01      	subs	r3, #1
 8004cae:	429d      	cmp	r5, r3
 8004cb0:	db0b      	blt.n	8004cca <_printf_float+0x276>
 8004cb2:	6823      	ldr	r3, [r4, #0]
 8004cb4:	2500      	movs	r5, #0
 8004cb6:	079b      	lsls	r3, r3, #30
 8004cb8:	d500      	bpl.n	8004cbc <_printf_float+0x268>
 8004cba:	e0fd      	b.n	8004eb8 <_printf_float+0x464>
 8004cbc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004cbe:	68e0      	ldr	r0, [r4, #12]
 8004cc0:	4298      	cmp	r0, r3
 8004cc2:	db00      	blt.n	8004cc6 <_printf_float+0x272>
 8004cc4:	e725      	b.n	8004b12 <_printf_float+0xbe>
 8004cc6:	0018      	movs	r0, r3
 8004cc8:	e723      	b.n	8004b12 <_printf_float+0xbe>
 8004cca:	0022      	movs	r2, r4
 8004ccc:	2301      	movs	r3, #1
 8004cce:	321a      	adds	r2, #26
 8004cd0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004cd2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004cd4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004cd6:	47b0      	blx	r6
 8004cd8:	1c43      	adds	r3, r0, #1
 8004cda:	d100      	bne.n	8004cde <_printf_float+0x28a>
 8004cdc:	e717      	b.n	8004b0e <_printf_float+0xba>
 8004cde:	3501      	adds	r5, #1
 8004ce0:	e7e3      	b.n	8004caa <_printf_float+0x256>
 8004ce2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004ce4:	2b00      	cmp	r3, #0
 8004ce6:	dc35      	bgt.n	8004d54 <_printf_float+0x300>
 8004ce8:	2301      	movs	r3, #1
 8004cea:	4a19      	ldr	r2, [pc, #100]	; (8004d50 <_printf_float+0x2fc>)
 8004cec:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004cee:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004cf0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004cf2:	47b0      	blx	r6
 8004cf4:	1c43      	adds	r3, r0, #1
 8004cf6:	d100      	bne.n	8004cfa <_printf_float+0x2a6>
 8004cf8:	e709      	b.n	8004b0e <_printf_float+0xba>
 8004cfa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004cfc:	2b00      	cmp	r3, #0
 8004cfe:	d105      	bne.n	8004d0c <_printf_float+0x2b8>
 8004d00:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d102      	bne.n	8004d0c <_printf_float+0x2b8>
 8004d06:	6823      	ldr	r3, [r4, #0]
 8004d08:	07db      	lsls	r3, r3, #31
 8004d0a:	d5d2      	bpl.n	8004cb2 <_printf_float+0x25e>
 8004d0c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004d0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004d10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004d12:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004d14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004d16:	47b0      	blx	r6
 8004d18:	2600      	movs	r6, #0
 8004d1a:	1c43      	adds	r3, r0, #1
 8004d1c:	d100      	bne.n	8004d20 <_printf_float+0x2cc>
 8004d1e:	e6f6      	b.n	8004b0e <_printf_float+0xba>
 8004d20:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d22:	425b      	negs	r3, r3
 8004d24:	429e      	cmp	r6, r3
 8004d26:	db01      	blt.n	8004d2c <_printf_float+0x2d8>
 8004d28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d2a:	e791      	b.n	8004c50 <_printf_float+0x1fc>
 8004d2c:	0022      	movs	r2, r4
 8004d2e:	2301      	movs	r3, #1
 8004d30:	321a      	adds	r2, #26
 8004d32:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004d34:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004d36:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004d38:	47b8      	blx	r7
 8004d3a:	1c43      	adds	r3, r0, #1
 8004d3c:	d100      	bne.n	8004d40 <_printf_float+0x2ec>
 8004d3e:	e6e6      	b.n	8004b0e <_printf_float+0xba>
 8004d40:	3601      	adds	r6, #1
 8004d42:	e7ed      	b.n	8004d20 <_printf_float+0x2cc>
 8004d44:	7fefffff 	.word	0x7fefffff
 8004d48:	080072d8 	.word	0x080072d8
 8004d4c:	080072d4 	.word	0x080072d4
 8004d50:	080072e4 	.word	0x080072e4
 8004d54:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004d56:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8004d58:	429e      	cmp	r6, r3
 8004d5a:	dd00      	ble.n	8004d5e <_printf_float+0x30a>
 8004d5c:	001e      	movs	r6, r3
 8004d5e:	2e00      	cmp	r6, #0
 8004d60:	dc35      	bgt.n	8004dce <_printf_float+0x37a>
 8004d62:	2300      	movs	r3, #0
 8004d64:	930c      	str	r3, [sp, #48]	; 0x30
 8004d66:	43f3      	mvns	r3, r6
 8004d68:	17db      	asrs	r3, r3, #31
 8004d6a:	930f      	str	r3, [sp, #60]	; 0x3c
 8004d6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004d6e:	6da7      	ldr	r7, [r4, #88]	; 0x58
 8004d70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004d72:	4033      	ands	r3, r6
 8004d74:	1afb      	subs	r3, r7, r3
 8004d76:	429a      	cmp	r2, r3
 8004d78:	db32      	blt.n	8004de0 <_printf_float+0x38c>
 8004d7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d7c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004d7e:	4293      	cmp	r3, r2
 8004d80:	db3c      	blt.n	8004dfc <_printf_float+0x3a8>
 8004d82:	6823      	ldr	r3, [r4, #0]
 8004d84:	07db      	lsls	r3, r3, #31
 8004d86:	d439      	bmi.n	8004dfc <_printf_float+0x3a8>
 8004d88:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8004d8a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004d8c:	1bf3      	subs	r3, r6, r7
 8004d8e:	1ab6      	subs	r6, r6, r2
 8004d90:	429e      	cmp	r6, r3
 8004d92:	dd00      	ble.n	8004d96 <_printf_float+0x342>
 8004d94:	001e      	movs	r6, r3
 8004d96:	2e00      	cmp	r6, #0
 8004d98:	dc39      	bgt.n	8004e0e <_printf_float+0x3ba>
 8004d9a:	43f7      	mvns	r7, r6
 8004d9c:	2500      	movs	r5, #0
 8004d9e:	17fb      	asrs	r3, r7, #31
 8004da0:	930c      	str	r3, [sp, #48]	; 0x30
 8004da2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004da4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004da6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004da8:	1a9b      	subs	r3, r3, r2
 8004daa:	0032      	movs	r2, r6
 8004dac:	400a      	ands	r2, r1
 8004dae:	1a9b      	subs	r3, r3, r2
 8004db0:	429d      	cmp	r5, r3
 8004db2:	db00      	blt.n	8004db6 <_printf_float+0x362>
 8004db4:	e77d      	b.n	8004cb2 <_printf_float+0x25e>
 8004db6:	0022      	movs	r2, r4
 8004db8:	2301      	movs	r3, #1
 8004dba:	321a      	adds	r2, #26
 8004dbc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004dbe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004dc0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004dc2:	47b8      	blx	r7
 8004dc4:	1c43      	adds	r3, r0, #1
 8004dc6:	d100      	bne.n	8004dca <_printf_float+0x376>
 8004dc8:	e6a1      	b.n	8004b0e <_printf_float+0xba>
 8004dca:	3501      	adds	r5, #1
 8004dcc:	e7e9      	b.n	8004da2 <_printf_float+0x34e>
 8004dce:	0033      	movs	r3, r6
 8004dd0:	002a      	movs	r2, r5
 8004dd2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004dd4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004dd6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004dd8:	47b8      	blx	r7
 8004dda:	1c43      	adds	r3, r0, #1
 8004ddc:	d1c1      	bne.n	8004d62 <_printf_float+0x30e>
 8004dde:	e696      	b.n	8004b0e <_printf_float+0xba>
 8004de0:	0022      	movs	r2, r4
 8004de2:	2301      	movs	r3, #1
 8004de4:	321a      	adds	r2, #26
 8004de6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004de8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004dea:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004dec:	47b8      	blx	r7
 8004dee:	1c43      	adds	r3, r0, #1
 8004df0:	d100      	bne.n	8004df4 <_printf_float+0x3a0>
 8004df2:	e68c      	b.n	8004b0e <_printf_float+0xba>
 8004df4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004df6:	3301      	adds	r3, #1
 8004df8:	930c      	str	r3, [sp, #48]	; 0x30
 8004dfa:	e7b7      	b.n	8004d6c <_printf_float+0x318>
 8004dfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004dfe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004e00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e04:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004e06:	47b0      	blx	r6
 8004e08:	1c43      	adds	r3, r0, #1
 8004e0a:	d1bd      	bne.n	8004d88 <_printf_float+0x334>
 8004e0c:	e67f      	b.n	8004b0e <_printf_float+0xba>
 8004e0e:	19ea      	adds	r2, r5, r7
 8004e10:	0033      	movs	r3, r6
 8004e12:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e16:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004e18:	47a8      	blx	r5
 8004e1a:	1c43      	adds	r3, r0, #1
 8004e1c:	d1bd      	bne.n	8004d9a <_printf_float+0x346>
 8004e1e:	e676      	b.n	8004b0e <_printf_float+0xba>
 8004e20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	dc02      	bgt.n	8004e2c <_printf_float+0x3d8>
 8004e26:	2301      	movs	r3, #1
 8004e28:	421a      	tst	r2, r3
 8004e2a:	d038      	beq.n	8004e9e <_printf_float+0x44a>
 8004e2c:	2301      	movs	r3, #1
 8004e2e:	002a      	movs	r2, r5
 8004e30:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e32:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e34:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004e36:	47b8      	blx	r7
 8004e38:	1c43      	adds	r3, r0, #1
 8004e3a:	d100      	bne.n	8004e3e <_printf_float+0x3ea>
 8004e3c:	e667      	b.n	8004b0e <_printf_float+0xba>
 8004e3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004e40:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004e42:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e44:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e46:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004e48:	47b8      	blx	r7
 8004e4a:	1c43      	adds	r3, r0, #1
 8004e4c:	d100      	bne.n	8004e50 <_printf_float+0x3fc>
 8004e4e:	e65e      	b.n	8004b0e <_printf_float+0xba>
 8004e50:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8004e52:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8004e54:	2200      	movs	r2, #0
 8004e56:	2300      	movs	r3, #0
 8004e58:	f7fb faf6 	bl	8000448 <__aeabi_dcmpeq>
 8004e5c:	2800      	cmp	r0, #0
 8004e5e:	d008      	beq.n	8004e72 <_printf_float+0x41e>
 8004e60:	2500      	movs	r5, #0
 8004e62:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e64:	3b01      	subs	r3, #1
 8004e66:	429d      	cmp	r5, r3
 8004e68:	db0d      	blt.n	8004e86 <_printf_float+0x432>
 8004e6a:	0022      	movs	r2, r4
 8004e6c:	0033      	movs	r3, r6
 8004e6e:	3250      	adds	r2, #80	; 0x50
 8004e70:	e6ef      	b.n	8004c52 <_printf_float+0x1fe>
 8004e72:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e74:	1c6a      	adds	r2, r5, #1
 8004e76:	3b01      	subs	r3, #1
 8004e78:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e7a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004e7e:	47a8      	blx	r5
 8004e80:	1c43      	adds	r3, r0, #1
 8004e82:	d1f2      	bne.n	8004e6a <_printf_float+0x416>
 8004e84:	e643      	b.n	8004b0e <_printf_float+0xba>
 8004e86:	0022      	movs	r2, r4
 8004e88:	2301      	movs	r3, #1
 8004e8a:	321a      	adds	r2, #26
 8004e8c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004e8e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004e90:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004e92:	47b8      	blx	r7
 8004e94:	1c43      	adds	r3, r0, #1
 8004e96:	d100      	bne.n	8004e9a <_printf_float+0x446>
 8004e98:	e639      	b.n	8004b0e <_printf_float+0xba>
 8004e9a:	3501      	adds	r5, #1
 8004e9c:	e7e1      	b.n	8004e62 <_printf_float+0x40e>
 8004e9e:	002a      	movs	r2, r5
 8004ea0:	e7ea      	b.n	8004e78 <_printf_float+0x424>
 8004ea2:	0022      	movs	r2, r4
 8004ea4:	2301      	movs	r3, #1
 8004ea6:	3219      	adds	r2, #25
 8004ea8:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004eaa:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004eac:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004eae:	47b0      	blx	r6
 8004eb0:	1c43      	adds	r3, r0, #1
 8004eb2:	d100      	bne.n	8004eb6 <_printf_float+0x462>
 8004eb4:	e62b      	b.n	8004b0e <_printf_float+0xba>
 8004eb6:	3501      	adds	r5, #1
 8004eb8:	68e3      	ldr	r3, [r4, #12]
 8004eba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004ebc:	1a9b      	subs	r3, r3, r2
 8004ebe:	429d      	cmp	r5, r3
 8004ec0:	dbef      	blt.n	8004ea2 <_printf_float+0x44e>
 8004ec2:	e6fb      	b.n	8004cbc <_printf_float+0x268>
 8004ec4:	0032      	movs	r2, r6
 8004ec6:	002b      	movs	r3, r5
 8004ec8:	0030      	movs	r0, r6
 8004eca:	0029      	movs	r1, r5
 8004ecc:	f7fd f8a4 	bl	8002018 <__aeabi_dcmpun>
 8004ed0:	2800      	cmp	r0, #0
 8004ed2:	d100      	bne.n	8004ed6 <_printf_float+0x482>
 8004ed4:	e621      	b.n	8004b1a <_printf_float+0xc6>
 8004ed6:	4d03      	ldr	r5, [pc, #12]	; (8004ee4 <_printf_float+0x490>)
 8004ed8:	2f47      	cmp	r7, #71	; 0x47
 8004eda:	d900      	bls.n	8004ede <_printf_float+0x48a>
 8004edc:	e605      	b.n	8004aea <_printf_float+0x96>
 8004ede:	4d02      	ldr	r5, [pc, #8]	; (8004ee8 <_printf_float+0x494>)
 8004ee0:	e603      	b.n	8004aea <_printf_float+0x96>
 8004ee2:	46c0      	nop			; (mov r8, r8)
 8004ee4:	080072e0 	.word	0x080072e0
 8004ee8:	080072dc 	.word	0x080072dc

08004eec <_printf_common>:
 8004eec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004eee:	0015      	movs	r5, r2
 8004ef0:	9301      	str	r3, [sp, #4]
 8004ef2:	688a      	ldr	r2, [r1, #8]
 8004ef4:	690b      	ldr	r3, [r1, #16]
 8004ef6:	9000      	str	r0, [sp, #0]
 8004ef8:	000c      	movs	r4, r1
 8004efa:	4293      	cmp	r3, r2
 8004efc:	da00      	bge.n	8004f00 <_printf_common+0x14>
 8004efe:	0013      	movs	r3, r2
 8004f00:	0022      	movs	r2, r4
 8004f02:	602b      	str	r3, [r5, #0]
 8004f04:	3243      	adds	r2, #67	; 0x43
 8004f06:	7812      	ldrb	r2, [r2, #0]
 8004f08:	2a00      	cmp	r2, #0
 8004f0a:	d001      	beq.n	8004f10 <_printf_common+0x24>
 8004f0c:	3301      	adds	r3, #1
 8004f0e:	602b      	str	r3, [r5, #0]
 8004f10:	6823      	ldr	r3, [r4, #0]
 8004f12:	069b      	lsls	r3, r3, #26
 8004f14:	d502      	bpl.n	8004f1c <_printf_common+0x30>
 8004f16:	682b      	ldr	r3, [r5, #0]
 8004f18:	3302      	adds	r3, #2
 8004f1a:	602b      	str	r3, [r5, #0]
 8004f1c:	2706      	movs	r7, #6
 8004f1e:	6823      	ldr	r3, [r4, #0]
 8004f20:	401f      	ands	r7, r3
 8004f22:	d027      	beq.n	8004f74 <_printf_common+0x88>
 8004f24:	0023      	movs	r3, r4
 8004f26:	3343      	adds	r3, #67	; 0x43
 8004f28:	781b      	ldrb	r3, [r3, #0]
 8004f2a:	1e5a      	subs	r2, r3, #1
 8004f2c:	4193      	sbcs	r3, r2
 8004f2e:	6822      	ldr	r2, [r4, #0]
 8004f30:	0692      	lsls	r2, r2, #26
 8004f32:	d430      	bmi.n	8004f96 <_printf_common+0xaa>
 8004f34:	0022      	movs	r2, r4
 8004f36:	9901      	ldr	r1, [sp, #4]
 8004f38:	3243      	adds	r2, #67	; 0x43
 8004f3a:	9800      	ldr	r0, [sp, #0]
 8004f3c:	9e08      	ldr	r6, [sp, #32]
 8004f3e:	47b0      	blx	r6
 8004f40:	1c43      	adds	r3, r0, #1
 8004f42:	d025      	beq.n	8004f90 <_printf_common+0xa4>
 8004f44:	2306      	movs	r3, #6
 8004f46:	6820      	ldr	r0, [r4, #0]
 8004f48:	682a      	ldr	r2, [r5, #0]
 8004f4a:	68e1      	ldr	r1, [r4, #12]
 8004f4c:	4003      	ands	r3, r0
 8004f4e:	2500      	movs	r5, #0
 8004f50:	2b04      	cmp	r3, #4
 8004f52:	d103      	bne.n	8004f5c <_printf_common+0x70>
 8004f54:	1a8d      	subs	r5, r1, r2
 8004f56:	43eb      	mvns	r3, r5
 8004f58:	17db      	asrs	r3, r3, #31
 8004f5a:	401d      	ands	r5, r3
 8004f5c:	68a3      	ldr	r3, [r4, #8]
 8004f5e:	6922      	ldr	r2, [r4, #16]
 8004f60:	4293      	cmp	r3, r2
 8004f62:	dd01      	ble.n	8004f68 <_printf_common+0x7c>
 8004f64:	1a9b      	subs	r3, r3, r2
 8004f66:	18ed      	adds	r5, r5, r3
 8004f68:	2700      	movs	r7, #0
 8004f6a:	42bd      	cmp	r5, r7
 8004f6c:	d120      	bne.n	8004fb0 <_printf_common+0xc4>
 8004f6e:	2000      	movs	r0, #0
 8004f70:	e010      	b.n	8004f94 <_printf_common+0xa8>
 8004f72:	3701      	adds	r7, #1
 8004f74:	68e3      	ldr	r3, [r4, #12]
 8004f76:	682a      	ldr	r2, [r5, #0]
 8004f78:	1a9b      	subs	r3, r3, r2
 8004f7a:	429f      	cmp	r7, r3
 8004f7c:	dad2      	bge.n	8004f24 <_printf_common+0x38>
 8004f7e:	0022      	movs	r2, r4
 8004f80:	2301      	movs	r3, #1
 8004f82:	3219      	adds	r2, #25
 8004f84:	9901      	ldr	r1, [sp, #4]
 8004f86:	9800      	ldr	r0, [sp, #0]
 8004f88:	9e08      	ldr	r6, [sp, #32]
 8004f8a:	47b0      	blx	r6
 8004f8c:	1c43      	adds	r3, r0, #1
 8004f8e:	d1f0      	bne.n	8004f72 <_printf_common+0x86>
 8004f90:	2001      	movs	r0, #1
 8004f92:	4240      	negs	r0, r0
 8004f94:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004f96:	2030      	movs	r0, #48	; 0x30
 8004f98:	18e1      	adds	r1, r4, r3
 8004f9a:	3143      	adds	r1, #67	; 0x43
 8004f9c:	7008      	strb	r0, [r1, #0]
 8004f9e:	0021      	movs	r1, r4
 8004fa0:	1c5a      	adds	r2, r3, #1
 8004fa2:	3145      	adds	r1, #69	; 0x45
 8004fa4:	7809      	ldrb	r1, [r1, #0]
 8004fa6:	18a2      	adds	r2, r4, r2
 8004fa8:	3243      	adds	r2, #67	; 0x43
 8004faa:	3302      	adds	r3, #2
 8004fac:	7011      	strb	r1, [r2, #0]
 8004fae:	e7c1      	b.n	8004f34 <_printf_common+0x48>
 8004fb0:	0022      	movs	r2, r4
 8004fb2:	2301      	movs	r3, #1
 8004fb4:	321a      	adds	r2, #26
 8004fb6:	9901      	ldr	r1, [sp, #4]
 8004fb8:	9800      	ldr	r0, [sp, #0]
 8004fba:	9e08      	ldr	r6, [sp, #32]
 8004fbc:	47b0      	blx	r6
 8004fbe:	1c43      	adds	r3, r0, #1
 8004fc0:	d0e6      	beq.n	8004f90 <_printf_common+0xa4>
 8004fc2:	3701      	adds	r7, #1
 8004fc4:	e7d1      	b.n	8004f6a <_printf_common+0x7e>
	...

08004fc8 <_printf_i>:
 8004fc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004fca:	b08b      	sub	sp, #44	; 0x2c
 8004fcc:	9206      	str	r2, [sp, #24]
 8004fce:	000a      	movs	r2, r1
 8004fd0:	3243      	adds	r2, #67	; 0x43
 8004fd2:	9307      	str	r3, [sp, #28]
 8004fd4:	9005      	str	r0, [sp, #20]
 8004fd6:	9204      	str	r2, [sp, #16]
 8004fd8:	7e0a      	ldrb	r2, [r1, #24]
 8004fda:	000c      	movs	r4, r1
 8004fdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004fde:	2a6e      	cmp	r2, #110	; 0x6e
 8004fe0:	d100      	bne.n	8004fe4 <_printf_i+0x1c>
 8004fe2:	e08f      	b.n	8005104 <_printf_i+0x13c>
 8004fe4:	d817      	bhi.n	8005016 <_printf_i+0x4e>
 8004fe6:	2a63      	cmp	r2, #99	; 0x63
 8004fe8:	d02c      	beq.n	8005044 <_printf_i+0x7c>
 8004fea:	d808      	bhi.n	8004ffe <_printf_i+0x36>
 8004fec:	2a00      	cmp	r2, #0
 8004fee:	d100      	bne.n	8004ff2 <_printf_i+0x2a>
 8004ff0:	e099      	b.n	8005126 <_printf_i+0x15e>
 8004ff2:	2a58      	cmp	r2, #88	; 0x58
 8004ff4:	d054      	beq.n	80050a0 <_printf_i+0xd8>
 8004ff6:	0026      	movs	r6, r4
 8004ff8:	3642      	adds	r6, #66	; 0x42
 8004ffa:	7032      	strb	r2, [r6, #0]
 8004ffc:	e029      	b.n	8005052 <_printf_i+0x8a>
 8004ffe:	2a64      	cmp	r2, #100	; 0x64
 8005000:	d001      	beq.n	8005006 <_printf_i+0x3e>
 8005002:	2a69      	cmp	r2, #105	; 0x69
 8005004:	d1f7      	bne.n	8004ff6 <_printf_i+0x2e>
 8005006:	6821      	ldr	r1, [r4, #0]
 8005008:	681a      	ldr	r2, [r3, #0]
 800500a:	0608      	lsls	r0, r1, #24
 800500c:	d523      	bpl.n	8005056 <_printf_i+0x8e>
 800500e:	1d11      	adds	r1, r2, #4
 8005010:	6019      	str	r1, [r3, #0]
 8005012:	6815      	ldr	r5, [r2, #0]
 8005014:	e025      	b.n	8005062 <_printf_i+0x9a>
 8005016:	2a73      	cmp	r2, #115	; 0x73
 8005018:	d100      	bne.n	800501c <_printf_i+0x54>
 800501a:	e088      	b.n	800512e <_printf_i+0x166>
 800501c:	d808      	bhi.n	8005030 <_printf_i+0x68>
 800501e:	2a6f      	cmp	r2, #111	; 0x6f
 8005020:	d029      	beq.n	8005076 <_printf_i+0xae>
 8005022:	2a70      	cmp	r2, #112	; 0x70
 8005024:	d1e7      	bne.n	8004ff6 <_printf_i+0x2e>
 8005026:	2220      	movs	r2, #32
 8005028:	6809      	ldr	r1, [r1, #0]
 800502a:	430a      	orrs	r2, r1
 800502c:	6022      	str	r2, [r4, #0]
 800502e:	e003      	b.n	8005038 <_printf_i+0x70>
 8005030:	2a75      	cmp	r2, #117	; 0x75
 8005032:	d020      	beq.n	8005076 <_printf_i+0xae>
 8005034:	2a78      	cmp	r2, #120	; 0x78
 8005036:	d1de      	bne.n	8004ff6 <_printf_i+0x2e>
 8005038:	0022      	movs	r2, r4
 800503a:	2178      	movs	r1, #120	; 0x78
 800503c:	3245      	adds	r2, #69	; 0x45
 800503e:	7011      	strb	r1, [r2, #0]
 8005040:	4a6c      	ldr	r2, [pc, #432]	; (80051f4 <_printf_i+0x22c>)
 8005042:	e030      	b.n	80050a6 <_printf_i+0xde>
 8005044:	000e      	movs	r6, r1
 8005046:	681a      	ldr	r2, [r3, #0]
 8005048:	3642      	adds	r6, #66	; 0x42
 800504a:	1d11      	adds	r1, r2, #4
 800504c:	6019      	str	r1, [r3, #0]
 800504e:	6813      	ldr	r3, [r2, #0]
 8005050:	7033      	strb	r3, [r6, #0]
 8005052:	2301      	movs	r3, #1
 8005054:	e079      	b.n	800514a <_printf_i+0x182>
 8005056:	0649      	lsls	r1, r1, #25
 8005058:	d5d9      	bpl.n	800500e <_printf_i+0x46>
 800505a:	1d11      	adds	r1, r2, #4
 800505c:	6019      	str	r1, [r3, #0]
 800505e:	2300      	movs	r3, #0
 8005060:	5ed5      	ldrsh	r5, [r2, r3]
 8005062:	2d00      	cmp	r5, #0
 8005064:	da03      	bge.n	800506e <_printf_i+0xa6>
 8005066:	232d      	movs	r3, #45	; 0x2d
 8005068:	9a04      	ldr	r2, [sp, #16]
 800506a:	426d      	negs	r5, r5
 800506c:	7013      	strb	r3, [r2, #0]
 800506e:	4b62      	ldr	r3, [pc, #392]	; (80051f8 <_printf_i+0x230>)
 8005070:	270a      	movs	r7, #10
 8005072:	9303      	str	r3, [sp, #12]
 8005074:	e02f      	b.n	80050d6 <_printf_i+0x10e>
 8005076:	6820      	ldr	r0, [r4, #0]
 8005078:	6819      	ldr	r1, [r3, #0]
 800507a:	0605      	lsls	r5, r0, #24
 800507c:	d503      	bpl.n	8005086 <_printf_i+0xbe>
 800507e:	1d08      	adds	r0, r1, #4
 8005080:	6018      	str	r0, [r3, #0]
 8005082:	680d      	ldr	r5, [r1, #0]
 8005084:	e005      	b.n	8005092 <_printf_i+0xca>
 8005086:	0640      	lsls	r0, r0, #25
 8005088:	d5f9      	bpl.n	800507e <_printf_i+0xb6>
 800508a:	680d      	ldr	r5, [r1, #0]
 800508c:	1d08      	adds	r0, r1, #4
 800508e:	6018      	str	r0, [r3, #0]
 8005090:	b2ad      	uxth	r5, r5
 8005092:	4b59      	ldr	r3, [pc, #356]	; (80051f8 <_printf_i+0x230>)
 8005094:	2708      	movs	r7, #8
 8005096:	9303      	str	r3, [sp, #12]
 8005098:	2a6f      	cmp	r2, #111	; 0x6f
 800509a:	d018      	beq.n	80050ce <_printf_i+0x106>
 800509c:	270a      	movs	r7, #10
 800509e:	e016      	b.n	80050ce <_printf_i+0x106>
 80050a0:	3145      	adds	r1, #69	; 0x45
 80050a2:	700a      	strb	r2, [r1, #0]
 80050a4:	4a54      	ldr	r2, [pc, #336]	; (80051f8 <_printf_i+0x230>)
 80050a6:	9203      	str	r2, [sp, #12]
 80050a8:	681a      	ldr	r2, [r3, #0]
 80050aa:	6821      	ldr	r1, [r4, #0]
 80050ac:	1d10      	adds	r0, r2, #4
 80050ae:	6018      	str	r0, [r3, #0]
 80050b0:	6815      	ldr	r5, [r2, #0]
 80050b2:	0608      	lsls	r0, r1, #24
 80050b4:	d522      	bpl.n	80050fc <_printf_i+0x134>
 80050b6:	07cb      	lsls	r3, r1, #31
 80050b8:	d502      	bpl.n	80050c0 <_printf_i+0xf8>
 80050ba:	2320      	movs	r3, #32
 80050bc:	4319      	orrs	r1, r3
 80050be:	6021      	str	r1, [r4, #0]
 80050c0:	2710      	movs	r7, #16
 80050c2:	2d00      	cmp	r5, #0
 80050c4:	d103      	bne.n	80050ce <_printf_i+0x106>
 80050c6:	2320      	movs	r3, #32
 80050c8:	6822      	ldr	r2, [r4, #0]
 80050ca:	439a      	bics	r2, r3
 80050cc:	6022      	str	r2, [r4, #0]
 80050ce:	0023      	movs	r3, r4
 80050d0:	2200      	movs	r2, #0
 80050d2:	3343      	adds	r3, #67	; 0x43
 80050d4:	701a      	strb	r2, [r3, #0]
 80050d6:	6863      	ldr	r3, [r4, #4]
 80050d8:	60a3      	str	r3, [r4, #8]
 80050da:	2b00      	cmp	r3, #0
 80050dc:	db5c      	blt.n	8005198 <_printf_i+0x1d0>
 80050de:	2204      	movs	r2, #4
 80050e0:	6821      	ldr	r1, [r4, #0]
 80050e2:	4391      	bics	r1, r2
 80050e4:	6021      	str	r1, [r4, #0]
 80050e6:	2d00      	cmp	r5, #0
 80050e8:	d158      	bne.n	800519c <_printf_i+0x1d4>
 80050ea:	9e04      	ldr	r6, [sp, #16]
 80050ec:	2b00      	cmp	r3, #0
 80050ee:	d064      	beq.n	80051ba <_printf_i+0x1f2>
 80050f0:	0026      	movs	r6, r4
 80050f2:	9b03      	ldr	r3, [sp, #12]
 80050f4:	3642      	adds	r6, #66	; 0x42
 80050f6:	781b      	ldrb	r3, [r3, #0]
 80050f8:	7033      	strb	r3, [r6, #0]
 80050fa:	e05e      	b.n	80051ba <_printf_i+0x1f2>
 80050fc:	0648      	lsls	r0, r1, #25
 80050fe:	d5da      	bpl.n	80050b6 <_printf_i+0xee>
 8005100:	b2ad      	uxth	r5, r5
 8005102:	e7d8      	b.n	80050b6 <_printf_i+0xee>
 8005104:	6809      	ldr	r1, [r1, #0]
 8005106:	681a      	ldr	r2, [r3, #0]
 8005108:	0608      	lsls	r0, r1, #24
 800510a:	d505      	bpl.n	8005118 <_printf_i+0x150>
 800510c:	1d11      	adds	r1, r2, #4
 800510e:	6019      	str	r1, [r3, #0]
 8005110:	6813      	ldr	r3, [r2, #0]
 8005112:	6962      	ldr	r2, [r4, #20]
 8005114:	601a      	str	r2, [r3, #0]
 8005116:	e006      	b.n	8005126 <_printf_i+0x15e>
 8005118:	0649      	lsls	r1, r1, #25
 800511a:	d5f7      	bpl.n	800510c <_printf_i+0x144>
 800511c:	1d11      	adds	r1, r2, #4
 800511e:	6019      	str	r1, [r3, #0]
 8005120:	6813      	ldr	r3, [r2, #0]
 8005122:	8aa2      	ldrh	r2, [r4, #20]
 8005124:	801a      	strh	r2, [r3, #0]
 8005126:	2300      	movs	r3, #0
 8005128:	9e04      	ldr	r6, [sp, #16]
 800512a:	6123      	str	r3, [r4, #16]
 800512c:	e054      	b.n	80051d8 <_printf_i+0x210>
 800512e:	681a      	ldr	r2, [r3, #0]
 8005130:	1d11      	adds	r1, r2, #4
 8005132:	6019      	str	r1, [r3, #0]
 8005134:	6816      	ldr	r6, [r2, #0]
 8005136:	2100      	movs	r1, #0
 8005138:	6862      	ldr	r2, [r4, #4]
 800513a:	0030      	movs	r0, r6
 800513c:	f001 fa2a 	bl	8006594 <memchr>
 8005140:	2800      	cmp	r0, #0
 8005142:	d001      	beq.n	8005148 <_printf_i+0x180>
 8005144:	1b80      	subs	r0, r0, r6
 8005146:	6060      	str	r0, [r4, #4]
 8005148:	6863      	ldr	r3, [r4, #4]
 800514a:	6123      	str	r3, [r4, #16]
 800514c:	2300      	movs	r3, #0
 800514e:	9a04      	ldr	r2, [sp, #16]
 8005150:	7013      	strb	r3, [r2, #0]
 8005152:	e041      	b.n	80051d8 <_printf_i+0x210>
 8005154:	6923      	ldr	r3, [r4, #16]
 8005156:	0032      	movs	r2, r6
 8005158:	9906      	ldr	r1, [sp, #24]
 800515a:	9805      	ldr	r0, [sp, #20]
 800515c:	9d07      	ldr	r5, [sp, #28]
 800515e:	47a8      	blx	r5
 8005160:	1c43      	adds	r3, r0, #1
 8005162:	d043      	beq.n	80051ec <_printf_i+0x224>
 8005164:	6823      	ldr	r3, [r4, #0]
 8005166:	2500      	movs	r5, #0
 8005168:	079b      	lsls	r3, r3, #30
 800516a:	d40f      	bmi.n	800518c <_printf_i+0x1c4>
 800516c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800516e:	68e0      	ldr	r0, [r4, #12]
 8005170:	4298      	cmp	r0, r3
 8005172:	da3d      	bge.n	80051f0 <_printf_i+0x228>
 8005174:	0018      	movs	r0, r3
 8005176:	e03b      	b.n	80051f0 <_printf_i+0x228>
 8005178:	0022      	movs	r2, r4
 800517a:	2301      	movs	r3, #1
 800517c:	3219      	adds	r2, #25
 800517e:	9906      	ldr	r1, [sp, #24]
 8005180:	9805      	ldr	r0, [sp, #20]
 8005182:	9e07      	ldr	r6, [sp, #28]
 8005184:	47b0      	blx	r6
 8005186:	1c43      	adds	r3, r0, #1
 8005188:	d030      	beq.n	80051ec <_printf_i+0x224>
 800518a:	3501      	adds	r5, #1
 800518c:	68e3      	ldr	r3, [r4, #12]
 800518e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005190:	1a9b      	subs	r3, r3, r2
 8005192:	429d      	cmp	r5, r3
 8005194:	dbf0      	blt.n	8005178 <_printf_i+0x1b0>
 8005196:	e7e9      	b.n	800516c <_printf_i+0x1a4>
 8005198:	2d00      	cmp	r5, #0
 800519a:	d0a9      	beq.n	80050f0 <_printf_i+0x128>
 800519c:	9e04      	ldr	r6, [sp, #16]
 800519e:	0028      	movs	r0, r5
 80051a0:	0039      	movs	r1, r7
 80051a2:	f7fb f851 	bl	8000248 <__aeabi_uidivmod>
 80051a6:	9b03      	ldr	r3, [sp, #12]
 80051a8:	3e01      	subs	r6, #1
 80051aa:	5c5b      	ldrb	r3, [r3, r1]
 80051ac:	0028      	movs	r0, r5
 80051ae:	7033      	strb	r3, [r6, #0]
 80051b0:	0039      	movs	r1, r7
 80051b2:	f7fa ffc3 	bl	800013c <__udivsi3>
 80051b6:	1e05      	subs	r5, r0, #0
 80051b8:	d1f1      	bne.n	800519e <_printf_i+0x1d6>
 80051ba:	2f08      	cmp	r7, #8
 80051bc:	d109      	bne.n	80051d2 <_printf_i+0x20a>
 80051be:	6823      	ldr	r3, [r4, #0]
 80051c0:	07db      	lsls	r3, r3, #31
 80051c2:	d506      	bpl.n	80051d2 <_printf_i+0x20a>
 80051c4:	6863      	ldr	r3, [r4, #4]
 80051c6:	6922      	ldr	r2, [r4, #16]
 80051c8:	4293      	cmp	r3, r2
 80051ca:	dc02      	bgt.n	80051d2 <_printf_i+0x20a>
 80051cc:	2330      	movs	r3, #48	; 0x30
 80051ce:	3e01      	subs	r6, #1
 80051d0:	7033      	strb	r3, [r6, #0]
 80051d2:	9b04      	ldr	r3, [sp, #16]
 80051d4:	1b9b      	subs	r3, r3, r6
 80051d6:	6123      	str	r3, [r4, #16]
 80051d8:	9b07      	ldr	r3, [sp, #28]
 80051da:	aa09      	add	r2, sp, #36	; 0x24
 80051dc:	9300      	str	r3, [sp, #0]
 80051de:	0021      	movs	r1, r4
 80051e0:	9b06      	ldr	r3, [sp, #24]
 80051e2:	9805      	ldr	r0, [sp, #20]
 80051e4:	f7ff fe82 	bl	8004eec <_printf_common>
 80051e8:	1c43      	adds	r3, r0, #1
 80051ea:	d1b3      	bne.n	8005154 <_printf_i+0x18c>
 80051ec:	2001      	movs	r0, #1
 80051ee:	4240      	negs	r0, r0
 80051f0:	b00b      	add	sp, #44	; 0x2c
 80051f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80051f4:	080072f7 	.word	0x080072f7
 80051f8:	080072e6 	.word	0x080072e6

080051fc <iprintf>:
 80051fc:	b40f      	push	{r0, r1, r2, r3}
 80051fe:	4b0b      	ldr	r3, [pc, #44]	; (800522c <iprintf+0x30>)
 8005200:	b513      	push	{r0, r1, r4, lr}
 8005202:	681c      	ldr	r4, [r3, #0]
 8005204:	2c00      	cmp	r4, #0
 8005206:	d005      	beq.n	8005214 <iprintf+0x18>
 8005208:	69a3      	ldr	r3, [r4, #24]
 800520a:	2b00      	cmp	r3, #0
 800520c:	d102      	bne.n	8005214 <iprintf+0x18>
 800520e:	0020      	movs	r0, r4
 8005210:	f001 f8a8 	bl	8006364 <__sinit>
 8005214:	ab05      	add	r3, sp, #20
 8005216:	9a04      	ldr	r2, [sp, #16]
 8005218:	68a1      	ldr	r1, [r4, #8]
 800521a:	0020      	movs	r0, r4
 800521c:	9301      	str	r3, [sp, #4]
 800521e:	f001 fd8d 	bl	8006d3c <_vfiprintf_r>
 8005222:	bc16      	pop	{r1, r2, r4}
 8005224:	bc08      	pop	{r3}
 8005226:	b004      	add	sp, #16
 8005228:	4718      	bx	r3
 800522a:	46c0      	nop			; (mov r8, r8)
 800522c:	2000000c 	.word	0x2000000c

08005230 <_puts_r>:
 8005230:	b570      	push	{r4, r5, r6, lr}
 8005232:	0005      	movs	r5, r0
 8005234:	000e      	movs	r6, r1
 8005236:	2800      	cmp	r0, #0
 8005238:	d004      	beq.n	8005244 <_puts_r+0x14>
 800523a:	6983      	ldr	r3, [r0, #24]
 800523c:	2b00      	cmp	r3, #0
 800523e:	d101      	bne.n	8005244 <_puts_r+0x14>
 8005240:	f001 f890 	bl	8006364 <__sinit>
 8005244:	69ab      	ldr	r3, [r5, #24]
 8005246:	68ac      	ldr	r4, [r5, #8]
 8005248:	2b00      	cmp	r3, #0
 800524a:	d102      	bne.n	8005252 <_puts_r+0x22>
 800524c:	0028      	movs	r0, r5
 800524e:	f001 f889 	bl	8006364 <__sinit>
 8005252:	4b24      	ldr	r3, [pc, #144]	; (80052e4 <_puts_r+0xb4>)
 8005254:	429c      	cmp	r4, r3
 8005256:	d10f      	bne.n	8005278 <_puts_r+0x48>
 8005258:	686c      	ldr	r4, [r5, #4]
 800525a:	89a3      	ldrh	r3, [r4, #12]
 800525c:	071b      	lsls	r3, r3, #28
 800525e:	d502      	bpl.n	8005266 <_puts_r+0x36>
 8005260:	6923      	ldr	r3, [r4, #16]
 8005262:	2b00      	cmp	r3, #0
 8005264:	d120      	bne.n	80052a8 <_puts_r+0x78>
 8005266:	0021      	movs	r1, r4
 8005268:	0028      	movs	r0, r5
 800526a:	f000 f8a1 	bl	80053b0 <__swsetup_r>
 800526e:	2800      	cmp	r0, #0
 8005270:	d01a      	beq.n	80052a8 <_puts_r+0x78>
 8005272:	2001      	movs	r0, #1
 8005274:	4240      	negs	r0, r0
 8005276:	bd70      	pop	{r4, r5, r6, pc}
 8005278:	4b1b      	ldr	r3, [pc, #108]	; (80052e8 <_puts_r+0xb8>)
 800527a:	429c      	cmp	r4, r3
 800527c:	d101      	bne.n	8005282 <_puts_r+0x52>
 800527e:	68ac      	ldr	r4, [r5, #8]
 8005280:	e7eb      	b.n	800525a <_puts_r+0x2a>
 8005282:	4b1a      	ldr	r3, [pc, #104]	; (80052ec <_puts_r+0xbc>)
 8005284:	429c      	cmp	r4, r3
 8005286:	d1e8      	bne.n	800525a <_puts_r+0x2a>
 8005288:	68ec      	ldr	r4, [r5, #12]
 800528a:	e7e6      	b.n	800525a <_puts_r+0x2a>
 800528c:	3b01      	subs	r3, #1
 800528e:	3601      	adds	r6, #1
 8005290:	60a3      	str	r3, [r4, #8]
 8005292:	2b00      	cmp	r3, #0
 8005294:	da04      	bge.n	80052a0 <_puts_r+0x70>
 8005296:	69a2      	ldr	r2, [r4, #24]
 8005298:	4293      	cmp	r3, r2
 800529a:	db16      	blt.n	80052ca <_puts_r+0x9a>
 800529c:	290a      	cmp	r1, #10
 800529e:	d014      	beq.n	80052ca <_puts_r+0x9a>
 80052a0:	6823      	ldr	r3, [r4, #0]
 80052a2:	1c5a      	adds	r2, r3, #1
 80052a4:	6022      	str	r2, [r4, #0]
 80052a6:	7019      	strb	r1, [r3, #0]
 80052a8:	7831      	ldrb	r1, [r6, #0]
 80052aa:	68a3      	ldr	r3, [r4, #8]
 80052ac:	2900      	cmp	r1, #0
 80052ae:	d1ed      	bne.n	800528c <_puts_r+0x5c>
 80052b0:	3b01      	subs	r3, #1
 80052b2:	60a3      	str	r3, [r4, #8]
 80052b4:	2b00      	cmp	r3, #0
 80052b6:	da0f      	bge.n	80052d8 <_puts_r+0xa8>
 80052b8:	0022      	movs	r2, r4
 80052ba:	310a      	adds	r1, #10
 80052bc:	0028      	movs	r0, r5
 80052be:	f000 f821 	bl	8005304 <__swbuf_r>
 80052c2:	1c43      	adds	r3, r0, #1
 80052c4:	d0d5      	beq.n	8005272 <_puts_r+0x42>
 80052c6:	200a      	movs	r0, #10
 80052c8:	e7d5      	b.n	8005276 <_puts_r+0x46>
 80052ca:	0022      	movs	r2, r4
 80052cc:	0028      	movs	r0, r5
 80052ce:	f000 f819 	bl	8005304 <__swbuf_r>
 80052d2:	1c43      	adds	r3, r0, #1
 80052d4:	d1e8      	bne.n	80052a8 <_puts_r+0x78>
 80052d6:	e7cc      	b.n	8005272 <_puts_r+0x42>
 80052d8:	200a      	movs	r0, #10
 80052da:	6823      	ldr	r3, [r4, #0]
 80052dc:	1c5a      	adds	r2, r3, #1
 80052de:	6022      	str	r2, [r4, #0]
 80052e0:	7018      	strb	r0, [r3, #0]
 80052e2:	e7c8      	b.n	8005276 <_puts_r+0x46>
 80052e4:	08007338 	.word	0x08007338
 80052e8:	08007358 	.word	0x08007358
 80052ec:	08007318 	.word	0x08007318

080052f0 <puts>:
 80052f0:	b510      	push	{r4, lr}
 80052f2:	4b03      	ldr	r3, [pc, #12]	; (8005300 <puts+0x10>)
 80052f4:	0001      	movs	r1, r0
 80052f6:	6818      	ldr	r0, [r3, #0]
 80052f8:	f7ff ff9a 	bl	8005230 <_puts_r>
 80052fc:	bd10      	pop	{r4, pc}
 80052fe:	46c0      	nop			; (mov r8, r8)
 8005300:	2000000c 	.word	0x2000000c

08005304 <__swbuf_r>:
 8005304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005306:	0005      	movs	r5, r0
 8005308:	000e      	movs	r6, r1
 800530a:	0014      	movs	r4, r2
 800530c:	2800      	cmp	r0, #0
 800530e:	d004      	beq.n	800531a <__swbuf_r+0x16>
 8005310:	6983      	ldr	r3, [r0, #24]
 8005312:	2b00      	cmp	r3, #0
 8005314:	d101      	bne.n	800531a <__swbuf_r+0x16>
 8005316:	f001 f825 	bl	8006364 <__sinit>
 800531a:	4b22      	ldr	r3, [pc, #136]	; (80053a4 <__swbuf_r+0xa0>)
 800531c:	429c      	cmp	r4, r3
 800531e:	d12d      	bne.n	800537c <__swbuf_r+0x78>
 8005320:	686c      	ldr	r4, [r5, #4]
 8005322:	69a3      	ldr	r3, [r4, #24]
 8005324:	60a3      	str	r3, [r4, #8]
 8005326:	89a3      	ldrh	r3, [r4, #12]
 8005328:	071b      	lsls	r3, r3, #28
 800532a:	d531      	bpl.n	8005390 <__swbuf_r+0x8c>
 800532c:	6923      	ldr	r3, [r4, #16]
 800532e:	2b00      	cmp	r3, #0
 8005330:	d02e      	beq.n	8005390 <__swbuf_r+0x8c>
 8005332:	6823      	ldr	r3, [r4, #0]
 8005334:	6922      	ldr	r2, [r4, #16]
 8005336:	b2f7      	uxtb	r7, r6
 8005338:	1a98      	subs	r0, r3, r2
 800533a:	6963      	ldr	r3, [r4, #20]
 800533c:	b2f6      	uxtb	r6, r6
 800533e:	4298      	cmp	r0, r3
 8005340:	db05      	blt.n	800534e <__swbuf_r+0x4a>
 8005342:	0021      	movs	r1, r4
 8005344:	0028      	movs	r0, r5
 8005346:	f000 ff9f 	bl	8006288 <_fflush_r>
 800534a:	2800      	cmp	r0, #0
 800534c:	d126      	bne.n	800539c <__swbuf_r+0x98>
 800534e:	68a3      	ldr	r3, [r4, #8]
 8005350:	3001      	adds	r0, #1
 8005352:	3b01      	subs	r3, #1
 8005354:	60a3      	str	r3, [r4, #8]
 8005356:	6823      	ldr	r3, [r4, #0]
 8005358:	1c5a      	adds	r2, r3, #1
 800535a:	6022      	str	r2, [r4, #0]
 800535c:	701f      	strb	r7, [r3, #0]
 800535e:	6963      	ldr	r3, [r4, #20]
 8005360:	4298      	cmp	r0, r3
 8005362:	d004      	beq.n	800536e <__swbuf_r+0x6a>
 8005364:	89a3      	ldrh	r3, [r4, #12]
 8005366:	07db      	lsls	r3, r3, #31
 8005368:	d51a      	bpl.n	80053a0 <__swbuf_r+0x9c>
 800536a:	2e0a      	cmp	r6, #10
 800536c:	d118      	bne.n	80053a0 <__swbuf_r+0x9c>
 800536e:	0021      	movs	r1, r4
 8005370:	0028      	movs	r0, r5
 8005372:	f000 ff89 	bl	8006288 <_fflush_r>
 8005376:	2800      	cmp	r0, #0
 8005378:	d012      	beq.n	80053a0 <__swbuf_r+0x9c>
 800537a:	e00f      	b.n	800539c <__swbuf_r+0x98>
 800537c:	4b0a      	ldr	r3, [pc, #40]	; (80053a8 <__swbuf_r+0xa4>)
 800537e:	429c      	cmp	r4, r3
 8005380:	d101      	bne.n	8005386 <__swbuf_r+0x82>
 8005382:	68ac      	ldr	r4, [r5, #8]
 8005384:	e7cd      	b.n	8005322 <__swbuf_r+0x1e>
 8005386:	4b09      	ldr	r3, [pc, #36]	; (80053ac <__swbuf_r+0xa8>)
 8005388:	429c      	cmp	r4, r3
 800538a:	d1ca      	bne.n	8005322 <__swbuf_r+0x1e>
 800538c:	68ec      	ldr	r4, [r5, #12]
 800538e:	e7c8      	b.n	8005322 <__swbuf_r+0x1e>
 8005390:	0021      	movs	r1, r4
 8005392:	0028      	movs	r0, r5
 8005394:	f000 f80c 	bl	80053b0 <__swsetup_r>
 8005398:	2800      	cmp	r0, #0
 800539a:	d0ca      	beq.n	8005332 <__swbuf_r+0x2e>
 800539c:	2601      	movs	r6, #1
 800539e:	4276      	negs	r6, r6
 80053a0:	0030      	movs	r0, r6
 80053a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053a4:	08007338 	.word	0x08007338
 80053a8:	08007358 	.word	0x08007358
 80053ac:	08007318 	.word	0x08007318

080053b0 <__swsetup_r>:
 80053b0:	4b36      	ldr	r3, [pc, #216]	; (800548c <__swsetup_r+0xdc>)
 80053b2:	b570      	push	{r4, r5, r6, lr}
 80053b4:	681d      	ldr	r5, [r3, #0]
 80053b6:	0006      	movs	r6, r0
 80053b8:	000c      	movs	r4, r1
 80053ba:	2d00      	cmp	r5, #0
 80053bc:	d005      	beq.n	80053ca <__swsetup_r+0x1a>
 80053be:	69ab      	ldr	r3, [r5, #24]
 80053c0:	2b00      	cmp	r3, #0
 80053c2:	d102      	bne.n	80053ca <__swsetup_r+0x1a>
 80053c4:	0028      	movs	r0, r5
 80053c6:	f000 ffcd 	bl	8006364 <__sinit>
 80053ca:	4b31      	ldr	r3, [pc, #196]	; (8005490 <__swsetup_r+0xe0>)
 80053cc:	429c      	cmp	r4, r3
 80053ce:	d10f      	bne.n	80053f0 <__swsetup_r+0x40>
 80053d0:	686c      	ldr	r4, [r5, #4]
 80053d2:	230c      	movs	r3, #12
 80053d4:	5ee2      	ldrsh	r2, [r4, r3]
 80053d6:	b293      	uxth	r3, r2
 80053d8:	0719      	lsls	r1, r3, #28
 80053da:	d42d      	bmi.n	8005438 <__swsetup_r+0x88>
 80053dc:	06d9      	lsls	r1, r3, #27
 80053de:	d411      	bmi.n	8005404 <__swsetup_r+0x54>
 80053e0:	2309      	movs	r3, #9
 80053e2:	2001      	movs	r0, #1
 80053e4:	6033      	str	r3, [r6, #0]
 80053e6:	3337      	adds	r3, #55	; 0x37
 80053e8:	4313      	orrs	r3, r2
 80053ea:	81a3      	strh	r3, [r4, #12]
 80053ec:	4240      	negs	r0, r0
 80053ee:	bd70      	pop	{r4, r5, r6, pc}
 80053f0:	4b28      	ldr	r3, [pc, #160]	; (8005494 <__swsetup_r+0xe4>)
 80053f2:	429c      	cmp	r4, r3
 80053f4:	d101      	bne.n	80053fa <__swsetup_r+0x4a>
 80053f6:	68ac      	ldr	r4, [r5, #8]
 80053f8:	e7eb      	b.n	80053d2 <__swsetup_r+0x22>
 80053fa:	4b27      	ldr	r3, [pc, #156]	; (8005498 <__swsetup_r+0xe8>)
 80053fc:	429c      	cmp	r4, r3
 80053fe:	d1e8      	bne.n	80053d2 <__swsetup_r+0x22>
 8005400:	68ec      	ldr	r4, [r5, #12]
 8005402:	e7e6      	b.n	80053d2 <__swsetup_r+0x22>
 8005404:	075b      	lsls	r3, r3, #29
 8005406:	d513      	bpl.n	8005430 <__swsetup_r+0x80>
 8005408:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800540a:	2900      	cmp	r1, #0
 800540c:	d008      	beq.n	8005420 <__swsetup_r+0x70>
 800540e:	0023      	movs	r3, r4
 8005410:	3344      	adds	r3, #68	; 0x44
 8005412:	4299      	cmp	r1, r3
 8005414:	d002      	beq.n	800541c <__swsetup_r+0x6c>
 8005416:	0030      	movs	r0, r6
 8005418:	f001 fbc0 	bl	8006b9c <_free_r>
 800541c:	2300      	movs	r3, #0
 800541e:	6363      	str	r3, [r4, #52]	; 0x34
 8005420:	2224      	movs	r2, #36	; 0x24
 8005422:	89a3      	ldrh	r3, [r4, #12]
 8005424:	4393      	bics	r3, r2
 8005426:	81a3      	strh	r3, [r4, #12]
 8005428:	2300      	movs	r3, #0
 800542a:	6063      	str	r3, [r4, #4]
 800542c:	6923      	ldr	r3, [r4, #16]
 800542e:	6023      	str	r3, [r4, #0]
 8005430:	2308      	movs	r3, #8
 8005432:	89a2      	ldrh	r2, [r4, #12]
 8005434:	4313      	orrs	r3, r2
 8005436:	81a3      	strh	r3, [r4, #12]
 8005438:	6923      	ldr	r3, [r4, #16]
 800543a:	2b00      	cmp	r3, #0
 800543c:	d10b      	bne.n	8005456 <__swsetup_r+0xa6>
 800543e:	21a0      	movs	r1, #160	; 0xa0
 8005440:	2280      	movs	r2, #128	; 0x80
 8005442:	89a3      	ldrh	r3, [r4, #12]
 8005444:	0089      	lsls	r1, r1, #2
 8005446:	0092      	lsls	r2, r2, #2
 8005448:	400b      	ands	r3, r1
 800544a:	4293      	cmp	r3, r2
 800544c:	d003      	beq.n	8005456 <__swsetup_r+0xa6>
 800544e:	0021      	movs	r1, r4
 8005450:	0030      	movs	r0, r6
 8005452:	f001 f851 	bl	80064f8 <__smakebuf_r>
 8005456:	2301      	movs	r3, #1
 8005458:	89a2      	ldrh	r2, [r4, #12]
 800545a:	4013      	ands	r3, r2
 800545c:	d011      	beq.n	8005482 <__swsetup_r+0xd2>
 800545e:	2300      	movs	r3, #0
 8005460:	60a3      	str	r3, [r4, #8]
 8005462:	6963      	ldr	r3, [r4, #20]
 8005464:	425b      	negs	r3, r3
 8005466:	61a3      	str	r3, [r4, #24]
 8005468:	2000      	movs	r0, #0
 800546a:	6923      	ldr	r3, [r4, #16]
 800546c:	4283      	cmp	r3, r0
 800546e:	d1be      	bne.n	80053ee <__swsetup_r+0x3e>
 8005470:	230c      	movs	r3, #12
 8005472:	5ee2      	ldrsh	r2, [r4, r3]
 8005474:	0613      	lsls	r3, r2, #24
 8005476:	d5ba      	bpl.n	80053ee <__swsetup_r+0x3e>
 8005478:	2340      	movs	r3, #64	; 0x40
 800547a:	4313      	orrs	r3, r2
 800547c:	81a3      	strh	r3, [r4, #12]
 800547e:	3801      	subs	r0, #1
 8005480:	e7b5      	b.n	80053ee <__swsetup_r+0x3e>
 8005482:	0792      	lsls	r2, r2, #30
 8005484:	d400      	bmi.n	8005488 <__swsetup_r+0xd8>
 8005486:	6963      	ldr	r3, [r4, #20]
 8005488:	60a3      	str	r3, [r4, #8]
 800548a:	e7ed      	b.n	8005468 <__swsetup_r+0xb8>
 800548c:	2000000c 	.word	0x2000000c
 8005490:	08007338 	.word	0x08007338
 8005494:	08007358 	.word	0x08007358
 8005498:	08007318 	.word	0x08007318

0800549c <quorem>:
 800549c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800549e:	6903      	ldr	r3, [r0, #16]
 80054a0:	690c      	ldr	r4, [r1, #16]
 80054a2:	b089      	sub	sp, #36	; 0x24
 80054a4:	0007      	movs	r7, r0
 80054a6:	9105      	str	r1, [sp, #20]
 80054a8:	2600      	movs	r6, #0
 80054aa:	429c      	cmp	r4, r3
 80054ac:	dc6d      	bgt.n	800558a <quorem+0xee>
 80054ae:	000b      	movs	r3, r1
 80054b0:	3c01      	subs	r4, #1
 80054b2:	3314      	adds	r3, #20
 80054b4:	00a5      	lsls	r5, r4, #2
 80054b6:	9303      	str	r3, [sp, #12]
 80054b8:	195b      	adds	r3, r3, r5
 80054ba:	9304      	str	r3, [sp, #16]
 80054bc:	0003      	movs	r3, r0
 80054be:	3314      	adds	r3, #20
 80054c0:	9302      	str	r3, [sp, #8]
 80054c2:	195d      	adds	r5, r3, r5
 80054c4:	9b04      	ldr	r3, [sp, #16]
 80054c6:	6828      	ldr	r0, [r5, #0]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	1c59      	adds	r1, r3, #1
 80054cc:	9301      	str	r3, [sp, #4]
 80054ce:	f7fa fe35 	bl	800013c <__udivsi3>
 80054d2:	9001      	str	r0, [sp, #4]
 80054d4:	42b0      	cmp	r0, r6
 80054d6:	d02d      	beq.n	8005534 <quorem+0x98>
 80054d8:	9b03      	ldr	r3, [sp, #12]
 80054da:	9802      	ldr	r0, [sp, #8]
 80054dc:	469c      	mov	ip, r3
 80054de:	9606      	str	r6, [sp, #24]
 80054e0:	4662      	mov	r2, ip
 80054e2:	ca08      	ldmia	r2!, {r3}
 80054e4:	4694      	mov	ip, r2
 80054e6:	9a01      	ldr	r2, [sp, #4]
 80054e8:	b299      	uxth	r1, r3
 80054ea:	4351      	muls	r1, r2
 80054ec:	0c1b      	lsrs	r3, r3, #16
 80054ee:	4353      	muls	r3, r2
 80054f0:	1989      	adds	r1, r1, r6
 80054f2:	0c0a      	lsrs	r2, r1, #16
 80054f4:	189b      	adds	r3, r3, r2
 80054f6:	9307      	str	r3, [sp, #28]
 80054f8:	8802      	ldrh	r2, [r0, #0]
 80054fa:	0c1e      	lsrs	r6, r3, #16
 80054fc:	9b06      	ldr	r3, [sp, #24]
 80054fe:	b289      	uxth	r1, r1
 8005500:	18d2      	adds	r2, r2, r3
 8005502:	6803      	ldr	r3, [r0, #0]
 8005504:	1a52      	subs	r2, r2, r1
 8005506:	0c19      	lsrs	r1, r3, #16
 8005508:	466b      	mov	r3, sp
 800550a:	8b9b      	ldrh	r3, [r3, #28]
 800550c:	1acb      	subs	r3, r1, r3
 800550e:	1411      	asrs	r1, r2, #16
 8005510:	185b      	adds	r3, r3, r1
 8005512:	1419      	asrs	r1, r3, #16
 8005514:	b292      	uxth	r2, r2
 8005516:	041b      	lsls	r3, r3, #16
 8005518:	431a      	orrs	r2, r3
 800551a:	9b04      	ldr	r3, [sp, #16]
 800551c:	9106      	str	r1, [sp, #24]
 800551e:	c004      	stmia	r0!, {r2}
 8005520:	4563      	cmp	r3, ip
 8005522:	d2dd      	bcs.n	80054e0 <quorem+0x44>
 8005524:	682b      	ldr	r3, [r5, #0]
 8005526:	2b00      	cmp	r3, #0
 8005528:	d104      	bne.n	8005534 <quorem+0x98>
 800552a:	9b02      	ldr	r3, [sp, #8]
 800552c:	3d04      	subs	r5, #4
 800552e:	42ab      	cmp	r3, r5
 8005530:	d32e      	bcc.n	8005590 <quorem+0xf4>
 8005532:	613c      	str	r4, [r7, #16]
 8005534:	9905      	ldr	r1, [sp, #20]
 8005536:	0038      	movs	r0, r7
 8005538:	f001 fa51 	bl	80069de <__mcmp>
 800553c:	2800      	cmp	r0, #0
 800553e:	db23      	blt.n	8005588 <quorem+0xec>
 8005540:	2500      	movs	r5, #0
 8005542:	9b01      	ldr	r3, [sp, #4]
 8005544:	9802      	ldr	r0, [sp, #8]
 8005546:	3301      	adds	r3, #1
 8005548:	9903      	ldr	r1, [sp, #12]
 800554a:	9301      	str	r3, [sp, #4]
 800554c:	c908      	ldmia	r1!, {r3}
 800554e:	8802      	ldrh	r2, [r0, #0]
 8005550:	1955      	adds	r5, r2, r5
 8005552:	b29a      	uxth	r2, r3
 8005554:	1aaa      	subs	r2, r5, r2
 8005556:	6805      	ldr	r5, [r0, #0]
 8005558:	0c1b      	lsrs	r3, r3, #16
 800555a:	0c2d      	lsrs	r5, r5, #16
 800555c:	1aeb      	subs	r3, r5, r3
 800555e:	1415      	asrs	r5, r2, #16
 8005560:	195b      	adds	r3, r3, r5
 8005562:	141d      	asrs	r5, r3, #16
 8005564:	b292      	uxth	r2, r2
 8005566:	041b      	lsls	r3, r3, #16
 8005568:	4313      	orrs	r3, r2
 800556a:	c008      	stmia	r0!, {r3}
 800556c:	9b04      	ldr	r3, [sp, #16]
 800556e:	428b      	cmp	r3, r1
 8005570:	d2ec      	bcs.n	800554c <quorem+0xb0>
 8005572:	9a02      	ldr	r2, [sp, #8]
 8005574:	00a3      	lsls	r3, r4, #2
 8005576:	18d3      	adds	r3, r2, r3
 8005578:	681a      	ldr	r2, [r3, #0]
 800557a:	2a00      	cmp	r2, #0
 800557c:	d104      	bne.n	8005588 <quorem+0xec>
 800557e:	9a02      	ldr	r2, [sp, #8]
 8005580:	3b04      	subs	r3, #4
 8005582:	429a      	cmp	r2, r3
 8005584:	d309      	bcc.n	800559a <quorem+0xfe>
 8005586:	613c      	str	r4, [r7, #16]
 8005588:	9e01      	ldr	r6, [sp, #4]
 800558a:	0030      	movs	r0, r6
 800558c:	b009      	add	sp, #36	; 0x24
 800558e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005590:	682b      	ldr	r3, [r5, #0]
 8005592:	2b00      	cmp	r3, #0
 8005594:	d1cd      	bne.n	8005532 <quorem+0x96>
 8005596:	3c01      	subs	r4, #1
 8005598:	e7c7      	b.n	800552a <quorem+0x8e>
 800559a:	681a      	ldr	r2, [r3, #0]
 800559c:	2a00      	cmp	r2, #0
 800559e:	d1f2      	bne.n	8005586 <quorem+0xea>
 80055a0:	3c01      	subs	r4, #1
 80055a2:	e7ec      	b.n	800557e <quorem+0xe2>

080055a4 <_dtoa_r>:
 80055a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055a6:	0016      	movs	r6, r2
 80055a8:	001f      	movs	r7, r3
 80055aa:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80055ac:	b09d      	sub	sp, #116	; 0x74
 80055ae:	9004      	str	r0, [sp, #16]
 80055b0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80055b2:	9606      	str	r6, [sp, #24]
 80055b4:	9707      	str	r7, [sp, #28]
 80055b6:	2c00      	cmp	r4, #0
 80055b8:	d108      	bne.n	80055cc <_dtoa_r+0x28>
 80055ba:	2010      	movs	r0, #16
 80055bc:	f000 ffe0 	bl	8006580 <malloc>
 80055c0:	9b04      	ldr	r3, [sp, #16]
 80055c2:	6258      	str	r0, [r3, #36]	; 0x24
 80055c4:	6044      	str	r4, [r0, #4]
 80055c6:	6084      	str	r4, [r0, #8]
 80055c8:	6004      	str	r4, [r0, #0]
 80055ca:	60c4      	str	r4, [r0, #12]
 80055cc:	9b04      	ldr	r3, [sp, #16]
 80055ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055d0:	6819      	ldr	r1, [r3, #0]
 80055d2:	2900      	cmp	r1, #0
 80055d4:	d00b      	beq.n	80055ee <_dtoa_r+0x4a>
 80055d6:	685a      	ldr	r2, [r3, #4]
 80055d8:	2301      	movs	r3, #1
 80055da:	4093      	lsls	r3, r2
 80055dc:	604a      	str	r2, [r1, #4]
 80055de:	608b      	str	r3, [r1, #8]
 80055e0:	9804      	ldr	r0, [sp, #16]
 80055e2:	f001 f823 	bl	800662c <_Bfree>
 80055e6:	2200      	movs	r2, #0
 80055e8:	9b04      	ldr	r3, [sp, #16]
 80055ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80055ec:	601a      	str	r2, [r3, #0]
 80055ee:	9b07      	ldr	r3, [sp, #28]
 80055f0:	2b00      	cmp	r3, #0
 80055f2:	da1f      	bge.n	8005634 <_dtoa_r+0x90>
 80055f4:	2301      	movs	r3, #1
 80055f6:	602b      	str	r3, [r5, #0]
 80055f8:	007b      	lsls	r3, r7, #1
 80055fa:	085b      	lsrs	r3, r3, #1
 80055fc:	9307      	str	r3, [sp, #28]
 80055fe:	9c07      	ldr	r4, [sp, #28]
 8005600:	4bb7      	ldr	r3, [pc, #732]	; (80058e0 <_dtoa_r+0x33c>)
 8005602:	0022      	movs	r2, r4
 8005604:	9319      	str	r3, [sp, #100]	; 0x64
 8005606:	401a      	ands	r2, r3
 8005608:	429a      	cmp	r2, r3
 800560a:	d116      	bne.n	800563a <_dtoa_r+0x96>
 800560c:	4bb5      	ldr	r3, [pc, #724]	; (80058e4 <_dtoa_r+0x340>)
 800560e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005610:	6013      	str	r3, [r2, #0]
 8005612:	9b06      	ldr	r3, [sp, #24]
 8005614:	2b00      	cmp	r3, #0
 8005616:	d103      	bne.n	8005620 <_dtoa_r+0x7c>
 8005618:	0324      	lsls	r4, r4, #12
 800561a:	d101      	bne.n	8005620 <_dtoa_r+0x7c>
 800561c:	f000 fd91 	bl	8006142 <_dtoa_r+0xb9e>
 8005620:	4bb1      	ldr	r3, [pc, #708]	; (80058e8 <_dtoa_r+0x344>)
 8005622:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005624:	930a      	str	r3, [sp, #40]	; 0x28
 8005626:	4bb1      	ldr	r3, [pc, #708]	; (80058ec <_dtoa_r+0x348>)
 8005628:	2a00      	cmp	r2, #0
 800562a:	d001      	beq.n	8005630 <_dtoa_r+0x8c>
 800562c:	f000 fd8f 	bl	800614e <_dtoa_r+0xbaa>
 8005630:	f000 fd8f 	bl	8006152 <_dtoa_r+0xbae>
 8005634:	2300      	movs	r3, #0
 8005636:	602b      	str	r3, [r5, #0]
 8005638:	e7e1      	b.n	80055fe <_dtoa_r+0x5a>
 800563a:	9e06      	ldr	r6, [sp, #24]
 800563c:	9f07      	ldr	r7, [sp, #28]
 800563e:	2200      	movs	r2, #0
 8005640:	2300      	movs	r3, #0
 8005642:	0030      	movs	r0, r6
 8005644:	0039      	movs	r1, r7
 8005646:	f7fa feff 	bl	8000448 <__aeabi_dcmpeq>
 800564a:	1e05      	subs	r5, r0, #0
 800564c:	d00e      	beq.n	800566c <_dtoa_r+0xc8>
 800564e:	2301      	movs	r3, #1
 8005650:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005652:	6013      	str	r3, [r2, #0]
 8005654:	4ba6      	ldr	r3, [pc, #664]	; (80058f0 <_dtoa_r+0x34c>)
 8005656:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005658:	930a      	str	r3, [sp, #40]	; 0x28
 800565a:	2a00      	cmp	r2, #0
 800565c:	d101      	bne.n	8005662 <_dtoa_r+0xbe>
 800565e:	f000 fd78 	bl	8006152 <_dtoa_r+0xbae>
 8005662:	4aa4      	ldr	r2, [pc, #656]	; (80058f4 <_dtoa_r+0x350>)
 8005664:	9926      	ldr	r1, [sp, #152]	; 0x98
 8005666:	600a      	str	r2, [r1, #0]
 8005668:	f000 fd73 	bl	8006152 <_dtoa_r+0xbae>
 800566c:	ab1a      	add	r3, sp, #104	; 0x68
 800566e:	9301      	str	r3, [sp, #4]
 8005670:	ab1b      	add	r3, sp, #108	; 0x6c
 8005672:	9300      	str	r3, [sp, #0]
 8005674:	0032      	movs	r2, r6
 8005676:	003b      	movs	r3, r7
 8005678:	9804      	ldr	r0, [sp, #16]
 800567a:	f001 fa2d 	bl	8006ad8 <__d2b>
 800567e:	0063      	lsls	r3, r4, #1
 8005680:	9005      	str	r0, [sp, #20]
 8005682:	0d5b      	lsrs	r3, r3, #21
 8005684:	d100      	bne.n	8005688 <_dtoa_r+0xe4>
 8005686:	e07f      	b.n	8005788 <_dtoa_r+0x1e4>
 8005688:	033a      	lsls	r2, r7, #12
 800568a:	4c9b      	ldr	r4, [pc, #620]	; (80058f8 <_dtoa_r+0x354>)
 800568c:	0b12      	lsrs	r2, r2, #12
 800568e:	4314      	orrs	r4, r2
 8005690:	0021      	movs	r1, r4
 8005692:	4a9a      	ldr	r2, [pc, #616]	; (80058fc <_dtoa_r+0x358>)
 8005694:	0030      	movs	r0, r6
 8005696:	9518      	str	r5, [sp, #96]	; 0x60
 8005698:	189e      	adds	r6, r3, r2
 800569a:	2200      	movs	r2, #0
 800569c:	4b98      	ldr	r3, [pc, #608]	; (8005900 <_dtoa_r+0x35c>)
 800569e:	f7fc f9a5 	bl	80019ec <__aeabi_dsub>
 80056a2:	4a98      	ldr	r2, [pc, #608]	; (8005904 <_dtoa_r+0x360>)
 80056a4:	4b98      	ldr	r3, [pc, #608]	; (8005908 <_dtoa_r+0x364>)
 80056a6:	f7fb ff21 	bl	80014ec <__aeabi_dmul>
 80056aa:	4a98      	ldr	r2, [pc, #608]	; (800590c <_dtoa_r+0x368>)
 80056ac:	4b98      	ldr	r3, [pc, #608]	; (8005910 <_dtoa_r+0x36c>)
 80056ae:	f7fa ffd9 	bl	8000664 <__aeabi_dadd>
 80056b2:	0004      	movs	r4, r0
 80056b4:	0030      	movs	r0, r6
 80056b6:	000d      	movs	r5, r1
 80056b8:	f7fc fd02 	bl	80020c0 <__aeabi_i2d>
 80056bc:	4a95      	ldr	r2, [pc, #596]	; (8005914 <_dtoa_r+0x370>)
 80056be:	4b96      	ldr	r3, [pc, #600]	; (8005918 <_dtoa_r+0x374>)
 80056c0:	f7fb ff14 	bl	80014ec <__aeabi_dmul>
 80056c4:	0002      	movs	r2, r0
 80056c6:	000b      	movs	r3, r1
 80056c8:	0020      	movs	r0, r4
 80056ca:	0029      	movs	r1, r5
 80056cc:	f7fa ffca 	bl	8000664 <__aeabi_dadd>
 80056d0:	0004      	movs	r4, r0
 80056d2:	000d      	movs	r5, r1
 80056d4:	f7fc fcc0 	bl	8002058 <__aeabi_d2iz>
 80056d8:	2200      	movs	r2, #0
 80056da:	9003      	str	r0, [sp, #12]
 80056dc:	2300      	movs	r3, #0
 80056de:	0020      	movs	r0, r4
 80056e0:	0029      	movs	r1, r5
 80056e2:	f7fa feb7 	bl	8000454 <__aeabi_dcmplt>
 80056e6:	2800      	cmp	r0, #0
 80056e8:	d00e      	beq.n	8005708 <_dtoa_r+0x164>
 80056ea:	9803      	ldr	r0, [sp, #12]
 80056ec:	f7fc fce8 	bl	80020c0 <__aeabi_i2d>
 80056f0:	000b      	movs	r3, r1
 80056f2:	0002      	movs	r2, r0
 80056f4:	0029      	movs	r1, r5
 80056f6:	0020      	movs	r0, r4
 80056f8:	f7fa fea6 	bl	8000448 <__aeabi_dcmpeq>
 80056fc:	0003      	movs	r3, r0
 80056fe:	4258      	negs	r0, r3
 8005700:	4158      	adcs	r0, r3
 8005702:	9b03      	ldr	r3, [sp, #12]
 8005704:	1a1b      	subs	r3, r3, r0
 8005706:	9303      	str	r3, [sp, #12]
 8005708:	2301      	movs	r3, #1
 800570a:	9316      	str	r3, [sp, #88]	; 0x58
 800570c:	9b03      	ldr	r3, [sp, #12]
 800570e:	2b16      	cmp	r3, #22
 8005710:	d80f      	bhi.n	8005732 <_dtoa_r+0x18e>
 8005712:	4982      	ldr	r1, [pc, #520]	; (800591c <_dtoa_r+0x378>)
 8005714:	00db      	lsls	r3, r3, #3
 8005716:	18c9      	adds	r1, r1, r3
 8005718:	6808      	ldr	r0, [r1, #0]
 800571a:	6849      	ldr	r1, [r1, #4]
 800571c:	9a06      	ldr	r2, [sp, #24]
 800571e:	9b07      	ldr	r3, [sp, #28]
 8005720:	f7fa feac 	bl	800047c <__aeabi_dcmpgt>
 8005724:	2800      	cmp	r0, #0
 8005726:	d04b      	beq.n	80057c0 <_dtoa_r+0x21c>
 8005728:	9b03      	ldr	r3, [sp, #12]
 800572a:	3b01      	subs	r3, #1
 800572c:	9303      	str	r3, [sp, #12]
 800572e:	2300      	movs	r3, #0
 8005730:	9316      	str	r3, [sp, #88]	; 0x58
 8005732:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005734:	1b9e      	subs	r6, r3, r6
 8005736:	2300      	movs	r3, #0
 8005738:	930b      	str	r3, [sp, #44]	; 0x2c
 800573a:	0033      	movs	r3, r6
 800573c:	3b01      	subs	r3, #1
 800573e:	930c      	str	r3, [sp, #48]	; 0x30
 8005740:	d504      	bpl.n	800574c <_dtoa_r+0x1a8>
 8005742:	2301      	movs	r3, #1
 8005744:	1b9b      	subs	r3, r3, r6
 8005746:	930b      	str	r3, [sp, #44]	; 0x2c
 8005748:	2300      	movs	r3, #0
 800574a:	930c      	str	r3, [sp, #48]	; 0x30
 800574c:	9b03      	ldr	r3, [sp, #12]
 800574e:	2b00      	cmp	r3, #0
 8005750:	db38      	blt.n	80057c4 <_dtoa_r+0x220>
 8005752:	9a03      	ldr	r2, [sp, #12]
 8005754:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005756:	4694      	mov	ip, r2
 8005758:	4463      	add	r3, ip
 800575a:	930c      	str	r3, [sp, #48]	; 0x30
 800575c:	2300      	movs	r3, #0
 800575e:	920f      	str	r2, [sp, #60]	; 0x3c
 8005760:	9308      	str	r3, [sp, #32]
 8005762:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005764:	2501      	movs	r5, #1
 8005766:	2b09      	cmp	r3, #9
 8005768:	d900      	bls.n	800576c <_dtoa_r+0x1c8>
 800576a:	e091      	b.n	8005890 <_dtoa_r+0x2ec>
 800576c:	2b05      	cmp	r3, #5
 800576e:	dd02      	ble.n	8005776 <_dtoa_r+0x1d2>
 8005770:	2500      	movs	r5, #0
 8005772:	3b04      	subs	r3, #4
 8005774:	9322      	str	r3, [sp, #136]	; 0x88
 8005776:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005778:	1e98      	subs	r0, r3, #2
 800577a:	2803      	cmp	r0, #3
 800577c:	d900      	bls.n	8005780 <_dtoa_r+0x1dc>
 800577e:	e091      	b.n	80058a4 <_dtoa_r+0x300>
 8005780:	f7fa fcc8 	bl	8000114 <__gnu_thumb1_case_uqi>
 8005784:	76298482 	.word	0x76298482
 8005788:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800578a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800578c:	189e      	adds	r6, r3, r2
 800578e:	4b64      	ldr	r3, [pc, #400]	; (8005920 <_dtoa_r+0x37c>)
 8005790:	18f2      	adds	r2, r6, r3
 8005792:	2a20      	cmp	r2, #32
 8005794:	dd0f      	ble.n	80057b6 <_dtoa_r+0x212>
 8005796:	4b63      	ldr	r3, [pc, #396]	; (8005924 <_dtoa_r+0x380>)
 8005798:	9806      	ldr	r0, [sp, #24]
 800579a:	18f3      	adds	r3, r6, r3
 800579c:	40d8      	lsrs	r0, r3
 800579e:	2340      	movs	r3, #64	; 0x40
 80057a0:	1a9b      	subs	r3, r3, r2
 80057a2:	409c      	lsls	r4, r3
 80057a4:	4320      	orrs	r0, r4
 80057a6:	f7fc fccd 	bl	8002144 <__aeabi_ui2d>
 80057aa:	2301      	movs	r3, #1
 80057ac:	4c5e      	ldr	r4, [pc, #376]	; (8005928 <_dtoa_r+0x384>)
 80057ae:	3e01      	subs	r6, #1
 80057b0:	1909      	adds	r1, r1, r4
 80057b2:	9318      	str	r3, [sp, #96]	; 0x60
 80057b4:	e771      	b.n	800569a <_dtoa_r+0xf6>
 80057b6:	2320      	movs	r3, #32
 80057b8:	9806      	ldr	r0, [sp, #24]
 80057ba:	1a9b      	subs	r3, r3, r2
 80057bc:	4098      	lsls	r0, r3
 80057be:	e7f2      	b.n	80057a6 <_dtoa_r+0x202>
 80057c0:	9016      	str	r0, [sp, #88]	; 0x58
 80057c2:	e7b6      	b.n	8005732 <_dtoa_r+0x18e>
 80057c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80057c6:	9a03      	ldr	r2, [sp, #12]
 80057c8:	1a9b      	subs	r3, r3, r2
 80057ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80057cc:	4253      	negs	r3, r2
 80057ce:	9308      	str	r3, [sp, #32]
 80057d0:	2300      	movs	r3, #0
 80057d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80057d4:	e7c5      	b.n	8005762 <_dtoa_r+0x1be>
 80057d6:	2301      	movs	r3, #1
 80057d8:	930e      	str	r3, [sp, #56]	; 0x38
 80057da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80057dc:	2b00      	cmp	r3, #0
 80057de:	dd65      	ble.n	80058ac <_dtoa_r+0x308>
 80057e0:	001f      	movs	r7, r3
 80057e2:	930d      	str	r3, [sp, #52]	; 0x34
 80057e4:	9a04      	ldr	r2, [sp, #16]
 80057e6:	6a54      	ldr	r4, [r2, #36]	; 0x24
 80057e8:	2200      	movs	r2, #0
 80057ea:	6062      	str	r2, [r4, #4]
 80057ec:	3204      	adds	r2, #4
 80057ee:	0011      	movs	r1, r2
 80057f0:	3114      	adds	r1, #20
 80057f2:	4299      	cmp	r1, r3
 80057f4:	d95f      	bls.n	80058b6 <_dtoa_r+0x312>
 80057f6:	6861      	ldr	r1, [r4, #4]
 80057f8:	9804      	ldr	r0, [sp, #16]
 80057fa:	f000 fedf 	bl	80065bc <_Balloc>
 80057fe:	9b04      	ldr	r3, [sp, #16]
 8005800:	6020      	str	r0, [r4, #0]
 8005802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005804:	681b      	ldr	r3, [r3, #0]
 8005806:	930a      	str	r3, [sp, #40]	; 0x28
 8005808:	2f0e      	cmp	r7, #14
 800580a:	d900      	bls.n	800580e <_dtoa_r+0x26a>
 800580c:	e105      	b.n	8005a1a <_dtoa_r+0x476>
 800580e:	2d00      	cmp	r5, #0
 8005810:	d100      	bne.n	8005814 <_dtoa_r+0x270>
 8005812:	e102      	b.n	8005a1a <_dtoa_r+0x476>
 8005814:	9b06      	ldr	r3, [sp, #24]
 8005816:	9c07      	ldr	r4, [sp, #28]
 8005818:	9314      	str	r3, [sp, #80]	; 0x50
 800581a:	9415      	str	r4, [sp, #84]	; 0x54
 800581c:	9b03      	ldr	r3, [sp, #12]
 800581e:	2b00      	cmp	r3, #0
 8005820:	dc00      	bgt.n	8005824 <_dtoa_r+0x280>
 8005822:	e085      	b.n	8005930 <_dtoa_r+0x38c>
 8005824:	001a      	movs	r2, r3
 8005826:	210f      	movs	r1, #15
 8005828:	4b3c      	ldr	r3, [pc, #240]	; (800591c <_dtoa_r+0x378>)
 800582a:	400a      	ands	r2, r1
 800582c:	00d2      	lsls	r2, r2, #3
 800582e:	189b      	adds	r3, r3, r2
 8005830:	685c      	ldr	r4, [r3, #4]
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	9310      	str	r3, [sp, #64]	; 0x40
 8005836:	9411      	str	r4, [sp, #68]	; 0x44
 8005838:	9b03      	ldr	r3, [sp, #12]
 800583a:	2402      	movs	r4, #2
 800583c:	111d      	asrs	r5, r3, #4
 800583e:	06eb      	lsls	r3, r5, #27
 8005840:	d50a      	bpl.n	8005858 <_dtoa_r+0x2b4>
 8005842:	4b3a      	ldr	r3, [pc, #232]	; (800592c <_dtoa_r+0x388>)
 8005844:	400d      	ands	r5, r1
 8005846:	6a1a      	ldr	r2, [r3, #32]
 8005848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800584a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800584c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800584e:	f7fb fa19 	bl	8000c84 <__aeabi_ddiv>
 8005852:	9006      	str	r0, [sp, #24]
 8005854:	9107      	str	r1, [sp, #28]
 8005856:	3401      	adds	r4, #1
 8005858:	4e34      	ldr	r6, [pc, #208]	; (800592c <_dtoa_r+0x388>)
 800585a:	2d00      	cmp	r5, #0
 800585c:	d130      	bne.n	80058c0 <_dtoa_r+0x31c>
 800585e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005860:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005862:	9806      	ldr	r0, [sp, #24]
 8005864:	9907      	ldr	r1, [sp, #28]
 8005866:	f7fb fa0d 	bl	8000c84 <__aeabi_ddiv>
 800586a:	9006      	str	r0, [sp, #24]
 800586c:	9107      	str	r1, [sp, #28]
 800586e:	e07a      	b.n	8005966 <_dtoa_r+0x3c2>
 8005870:	2301      	movs	r3, #1
 8005872:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8005874:	930e      	str	r3, [sp, #56]	; 0x38
 8005876:	4694      	mov	ip, r2
 8005878:	9b03      	ldr	r3, [sp, #12]
 800587a:	4463      	add	r3, ip
 800587c:	1c5f      	adds	r7, r3, #1
 800587e:	930d      	str	r3, [sp, #52]	; 0x34
 8005880:	1e3b      	subs	r3, r7, #0
 8005882:	dcaf      	bgt.n	80057e4 <_dtoa_r+0x240>
 8005884:	2301      	movs	r3, #1
 8005886:	e7ad      	b.n	80057e4 <_dtoa_r+0x240>
 8005888:	2300      	movs	r3, #0
 800588a:	e7a5      	b.n	80057d8 <_dtoa_r+0x234>
 800588c:	2300      	movs	r3, #0
 800588e:	e7f0      	b.n	8005872 <_dtoa_r+0x2ce>
 8005890:	2300      	movs	r3, #0
 8005892:	950e      	str	r5, [sp, #56]	; 0x38
 8005894:	9322      	str	r3, [sp, #136]	; 0x88
 8005896:	3b01      	subs	r3, #1
 8005898:	2200      	movs	r2, #0
 800589a:	930d      	str	r3, [sp, #52]	; 0x34
 800589c:	001f      	movs	r7, r3
 800589e:	3313      	adds	r3, #19
 80058a0:	9223      	str	r2, [sp, #140]	; 0x8c
 80058a2:	e79f      	b.n	80057e4 <_dtoa_r+0x240>
 80058a4:	2301      	movs	r3, #1
 80058a6:	930e      	str	r3, [sp, #56]	; 0x38
 80058a8:	3b02      	subs	r3, #2
 80058aa:	e7f5      	b.n	8005898 <_dtoa_r+0x2f4>
 80058ac:	2301      	movs	r3, #1
 80058ae:	930d      	str	r3, [sp, #52]	; 0x34
 80058b0:	001f      	movs	r7, r3
 80058b2:	001a      	movs	r2, r3
 80058b4:	e7f4      	b.n	80058a0 <_dtoa_r+0x2fc>
 80058b6:	6861      	ldr	r1, [r4, #4]
 80058b8:	0052      	lsls	r2, r2, #1
 80058ba:	3101      	adds	r1, #1
 80058bc:	6061      	str	r1, [r4, #4]
 80058be:	e796      	b.n	80057ee <_dtoa_r+0x24a>
 80058c0:	2301      	movs	r3, #1
 80058c2:	421d      	tst	r5, r3
 80058c4:	d008      	beq.n	80058d8 <_dtoa_r+0x334>
 80058c6:	9810      	ldr	r0, [sp, #64]	; 0x40
 80058c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 80058ca:	18e4      	adds	r4, r4, r3
 80058cc:	6832      	ldr	r2, [r6, #0]
 80058ce:	6873      	ldr	r3, [r6, #4]
 80058d0:	f7fb fe0c 	bl	80014ec <__aeabi_dmul>
 80058d4:	9010      	str	r0, [sp, #64]	; 0x40
 80058d6:	9111      	str	r1, [sp, #68]	; 0x44
 80058d8:	106d      	asrs	r5, r5, #1
 80058da:	3608      	adds	r6, #8
 80058dc:	e7bd      	b.n	800585a <_dtoa_r+0x2b6>
 80058de:	46c0      	nop			; (mov r8, r8)
 80058e0:	7ff00000 	.word	0x7ff00000
 80058e4:	0000270f 	.word	0x0000270f
 80058e8:	08007311 	.word	0x08007311
 80058ec:	08007314 	.word	0x08007314
 80058f0:	080072e4 	.word	0x080072e4
 80058f4:	080072e5 	.word	0x080072e5
 80058f8:	3ff00000 	.word	0x3ff00000
 80058fc:	fffffc01 	.word	0xfffffc01
 8005900:	3ff80000 	.word	0x3ff80000
 8005904:	636f4361 	.word	0x636f4361
 8005908:	3fd287a7 	.word	0x3fd287a7
 800590c:	8b60c8b3 	.word	0x8b60c8b3
 8005910:	3fc68a28 	.word	0x3fc68a28
 8005914:	509f79fb 	.word	0x509f79fb
 8005918:	3fd34413 	.word	0x3fd34413
 800591c:	080073a0 	.word	0x080073a0
 8005920:	00000432 	.word	0x00000432
 8005924:	00000412 	.word	0x00000412
 8005928:	fe100000 	.word	0xfe100000
 800592c:	08007378 	.word	0x08007378
 8005930:	9b03      	ldr	r3, [sp, #12]
 8005932:	2402      	movs	r4, #2
 8005934:	2b00      	cmp	r3, #0
 8005936:	d016      	beq.n	8005966 <_dtoa_r+0x3c2>
 8005938:	9814      	ldr	r0, [sp, #80]	; 0x50
 800593a:	9915      	ldr	r1, [sp, #84]	; 0x54
 800593c:	425d      	negs	r5, r3
 800593e:	230f      	movs	r3, #15
 8005940:	4aca      	ldr	r2, [pc, #808]	; (8005c6c <_dtoa_r+0x6c8>)
 8005942:	402b      	ands	r3, r5
 8005944:	00db      	lsls	r3, r3, #3
 8005946:	18d3      	adds	r3, r2, r3
 8005948:	681a      	ldr	r2, [r3, #0]
 800594a:	685b      	ldr	r3, [r3, #4]
 800594c:	f7fb fdce 	bl	80014ec <__aeabi_dmul>
 8005950:	2300      	movs	r3, #0
 8005952:	9006      	str	r0, [sp, #24]
 8005954:	9107      	str	r1, [sp, #28]
 8005956:	4ec6      	ldr	r6, [pc, #792]	; (8005c70 <_dtoa_r+0x6cc>)
 8005958:	112d      	asrs	r5, r5, #4
 800595a:	2d00      	cmp	r5, #0
 800595c:	d000      	beq.n	8005960 <_dtoa_r+0x3bc>
 800595e:	e08c      	b.n	8005a7a <_dtoa_r+0x4d6>
 8005960:	2b00      	cmp	r3, #0
 8005962:	d000      	beq.n	8005966 <_dtoa_r+0x3c2>
 8005964:	e781      	b.n	800586a <_dtoa_r+0x2c6>
 8005966:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005968:	2b00      	cmp	r3, #0
 800596a:	d100      	bne.n	800596e <_dtoa_r+0x3ca>
 800596c:	e091      	b.n	8005a92 <_dtoa_r+0x4ee>
 800596e:	9a06      	ldr	r2, [sp, #24]
 8005970:	9b07      	ldr	r3, [sp, #28]
 8005972:	9210      	str	r2, [sp, #64]	; 0x40
 8005974:	9311      	str	r3, [sp, #68]	; 0x44
 8005976:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005978:	9911      	ldr	r1, [sp, #68]	; 0x44
 800597a:	2200      	movs	r2, #0
 800597c:	4bbd      	ldr	r3, [pc, #756]	; (8005c74 <_dtoa_r+0x6d0>)
 800597e:	f7fa fd69 	bl	8000454 <__aeabi_dcmplt>
 8005982:	2800      	cmp	r0, #0
 8005984:	d100      	bne.n	8005988 <_dtoa_r+0x3e4>
 8005986:	e084      	b.n	8005a92 <_dtoa_r+0x4ee>
 8005988:	2f00      	cmp	r7, #0
 800598a:	d100      	bne.n	800598e <_dtoa_r+0x3ea>
 800598c:	e081      	b.n	8005a92 <_dtoa_r+0x4ee>
 800598e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005990:	2b00      	cmp	r3, #0
 8005992:	dd3e      	ble.n	8005a12 <_dtoa_r+0x46e>
 8005994:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005996:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005998:	9b03      	ldr	r3, [sp, #12]
 800599a:	2200      	movs	r2, #0
 800599c:	1e5e      	subs	r6, r3, #1
 800599e:	4bb6      	ldr	r3, [pc, #728]	; (8005c78 <_dtoa_r+0x6d4>)
 80059a0:	f7fb fda4 	bl	80014ec <__aeabi_dmul>
 80059a4:	9006      	str	r0, [sp, #24]
 80059a6:	9107      	str	r1, [sp, #28]
 80059a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80059aa:	3401      	adds	r4, #1
 80059ac:	0020      	movs	r0, r4
 80059ae:	f7fc fb87 	bl	80020c0 <__aeabi_i2d>
 80059b2:	9a06      	ldr	r2, [sp, #24]
 80059b4:	9b07      	ldr	r3, [sp, #28]
 80059b6:	f7fb fd99 	bl	80014ec <__aeabi_dmul>
 80059ba:	2200      	movs	r2, #0
 80059bc:	4baf      	ldr	r3, [pc, #700]	; (8005c7c <_dtoa_r+0x6d8>)
 80059be:	f7fa fe51 	bl	8000664 <__aeabi_dadd>
 80059c2:	9012      	str	r0, [sp, #72]	; 0x48
 80059c4:	9113      	str	r1, [sp, #76]	; 0x4c
 80059c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80059c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80059ca:	4aad      	ldr	r2, [pc, #692]	; (8005c80 <_dtoa_r+0x6dc>)
 80059cc:	9310      	str	r3, [sp, #64]	; 0x40
 80059ce:	9411      	str	r4, [sp, #68]	; 0x44
 80059d0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80059d2:	189c      	adds	r4, r3, r2
 80059d4:	9411      	str	r4, [sp, #68]	; 0x44
 80059d6:	2d00      	cmp	r5, #0
 80059d8:	d15e      	bne.n	8005a98 <_dtoa_r+0x4f4>
 80059da:	9806      	ldr	r0, [sp, #24]
 80059dc:	9907      	ldr	r1, [sp, #28]
 80059de:	2200      	movs	r2, #0
 80059e0:	4ba8      	ldr	r3, [pc, #672]	; (8005c84 <_dtoa_r+0x6e0>)
 80059e2:	f7fc f803 	bl	80019ec <__aeabi_dsub>
 80059e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80059e8:	0023      	movs	r3, r4
 80059ea:	9006      	str	r0, [sp, #24]
 80059ec:	9107      	str	r1, [sp, #28]
 80059ee:	f7fa fd45 	bl	800047c <__aeabi_dcmpgt>
 80059f2:	2800      	cmp	r0, #0
 80059f4:	d000      	beq.n	80059f8 <_dtoa_r+0x454>
 80059f6:	e301      	b.n	8005ffc <_dtoa_r+0xa58>
 80059f8:	48a3      	ldr	r0, [pc, #652]	; (8005c88 <_dtoa_r+0x6e4>)
 80059fa:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80059fc:	4684      	mov	ip, r0
 80059fe:	4461      	add	r1, ip
 8005a00:	000b      	movs	r3, r1
 8005a02:	9806      	ldr	r0, [sp, #24]
 8005a04:	9907      	ldr	r1, [sp, #28]
 8005a06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005a08:	f7fa fd24 	bl	8000454 <__aeabi_dcmplt>
 8005a0c:	2800      	cmp	r0, #0
 8005a0e:	d000      	beq.n	8005a12 <_dtoa_r+0x46e>
 8005a10:	e2e8      	b.n	8005fe4 <_dtoa_r+0xa40>
 8005a12:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005a14:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8005a16:	9306      	str	r3, [sp, #24]
 8005a18:	9407      	str	r4, [sp, #28]
 8005a1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	da00      	bge.n	8005a22 <_dtoa_r+0x47e>
 8005a20:	e157      	b.n	8005cd2 <_dtoa_r+0x72e>
 8005a22:	9a03      	ldr	r2, [sp, #12]
 8005a24:	2a0e      	cmp	r2, #14
 8005a26:	dd00      	ble.n	8005a2a <_dtoa_r+0x486>
 8005a28:	e153      	b.n	8005cd2 <_dtoa_r+0x72e>
 8005a2a:	4b90      	ldr	r3, [pc, #576]	; (8005c6c <_dtoa_r+0x6c8>)
 8005a2c:	00d2      	lsls	r2, r2, #3
 8005a2e:	189b      	adds	r3, r3, r2
 8005a30:	685c      	ldr	r4, [r3, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	9308      	str	r3, [sp, #32]
 8005a36:	9409      	str	r4, [sp, #36]	; 0x24
 8005a38:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005a3a:	2b00      	cmp	r3, #0
 8005a3c:	db00      	blt.n	8005a40 <_dtoa_r+0x49c>
 8005a3e:	e0ce      	b.n	8005bde <_dtoa_r+0x63a>
 8005a40:	2f00      	cmp	r7, #0
 8005a42:	dd00      	ble.n	8005a46 <_dtoa_r+0x4a2>
 8005a44:	e0cb      	b.n	8005bde <_dtoa_r+0x63a>
 8005a46:	d000      	beq.n	8005a4a <_dtoa_r+0x4a6>
 8005a48:	e2cf      	b.n	8005fea <_dtoa_r+0xa46>
 8005a4a:	9808      	ldr	r0, [sp, #32]
 8005a4c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005a4e:	2200      	movs	r2, #0
 8005a50:	4b8c      	ldr	r3, [pc, #560]	; (8005c84 <_dtoa_r+0x6e0>)
 8005a52:	f7fb fd4b 	bl	80014ec <__aeabi_dmul>
 8005a56:	9a06      	ldr	r2, [sp, #24]
 8005a58:	9b07      	ldr	r3, [sp, #28]
 8005a5a:	f7fa fd19 	bl	8000490 <__aeabi_dcmpge>
 8005a5e:	003e      	movs	r6, r7
 8005a60:	9708      	str	r7, [sp, #32]
 8005a62:	2800      	cmp	r0, #0
 8005a64:	d000      	beq.n	8005a68 <_dtoa_r+0x4c4>
 8005a66:	e2a4      	b.n	8005fb2 <_dtoa_r+0xa0e>
 8005a68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005a6c:	1c5d      	adds	r5, r3, #1
 8005a6e:	2331      	movs	r3, #49	; 0x31
 8005a70:	7013      	strb	r3, [r2, #0]
 8005a72:	9b03      	ldr	r3, [sp, #12]
 8005a74:	3301      	adds	r3, #1
 8005a76:	9303      	str	r3, [sp, #12]
 8005a78:	e29f      	b.n	8005fba <_dtoa_r+0xa16>
 8005a7a:	2201      	movs	r2, #1
 8005a7c:	4215      	tst	r5, r2
 8005a7e:	d005      	beq.n	8005a8c <_dtoa_r+0x4e8>
 8005a80:	18a4      	adds	r4, r4, r2
 8005a82:	6832      	ldr	r2, [r6, #0]
 8005a84:	6873      	ldr	r3, [r6, #4]
 8005a86:	f7fb fd31 	bl	80014ec <__aeabi_dmul>
 8005a8a:	2301      	movs	r3, #1
 8005a8c:	106d      	asrs	r5, r5, #1
 8005a8e:	3608      	adds	r6, #8
 8005a90:	e763      	b.n	800595a <_dtoa_r+0x3b6>
 8005a92:	9e03      	ldr	r6, [sp, #12]
 8005a94:	003d      	movs	r5, r7
 8005a96:	e789      	b.n	80059ac <_dtoa_r+0x408>
 8005a98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005a9a:	1e69      	subs	r1, r5, #1
 8005a9c:	1952      	adds	r2, r2, r5
 8005a9e:	9217      	str	r2, [sp, #92]	; 0x5c
 8005aa0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005aa2:	4b72      	ldr	r3, [pc, #456]	; (8005c6c <_dtoa_r+0x6c8>)
 8005aa4:	00c9      	lsls	r1, r1, #3
 8005aa6:	2a00      	cmp	r2, #0
 8005aa8:	d04a      	beq.n	8005b40 <_dtoa_r+0x59c>
 8005aaa:	185b      	adds	r3, r3, r1
 8005aac:	681a      	ldr	r2, [r3, #0]
 8005aae:	685b      	ldr	r3, [r3, #4]
 8005ab0:	2000      	movs	r0, #0
 8005ab2:	4976      	ldr	r1, [pc, #472]	; (8005c8c <_dtoa_r+0x6e8>)
 8005ab4:	f7fb f8e6 	bl	8000c84 <__aeabi_ddiv>
 8005ab8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005aba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005abc:	f7fb ff96 	bl	80019ec <__aeabi_dsub>
 8005ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ac2:	9010      	str	r0, [sp, #64]	; 0x40
 8005ac4:	9111      	str	r1, [sp, #68]	; 0x44
 8005ac6:	9312      	str	r3, [sp, #72]	; 0x48
 8005ac8:	9806      	ldr	r0, [sp, #24]
 8005aca:	9907      	ldr	r1, [sp, #28]
 8005acc:	f7fc fac4 	bl	8002058 <__aeabi_d2iz>
 8005ad0:	0004      	movs	r4, r0
 8005ad2:	f7fc faf5 	bl	80020c0 <__aeabi_i2d>
 8005ad6:	0002      	movs	r2, r0
 8005ad8:	000b      	movs	r3, r1
 8005ada:	9806      	ldr	r0, [sp, #24]
 8005adc:	9907      	ldr	r1, [sp, #28]
 8005ade:	f7fb ff85 	bl	80019ec <__aeabi_dsub>
 8005ae2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005ae4:	3430      	adds	r4, #48	; 0x30
 8005ae6:	1c5d      	adds	r5, r3, #1
 8005ae8:	701c      	strb	r4, [r3, #0]
 8005aea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005aec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005aee:	9006      	str	r0, [sp, #24]
 8005af0:	9107      	str	r1, [sp, #28]
 8005af2:	f7fa fcaf 	bl	8000454 <__aeabi_dcmplt>
 8005af6:	2800      	cmp	r0, #0
 8005af8:	d165      	bne.n	8005bc6 <_dtoa_r+0x622>
 8005afa:	9a06      	ldr	r2, [sp, #24]
 8005afc:	9b07      	ldr	r3, [sp, #28]
 8005afe:	2000      	movs	r0, #0
 8005b00:	495c      	ldr	r1, [pc, #368]	; (8005c74 <_dtoa_r+0x6d0>)
 8005b02:	f7fb ff73 	bl	80019ec <__aeabi_dsub>
 8005b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005b08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005b0a:	f7fa fca3 	bl	8000454 <__aeabi_dcmplt>
 8005b0e:	2800      	cmp	r0, #0
 8005b10:	d000      	beq.n	8005b14 <_dtoa_r+0x570>
 8005b12:	e0be      	b.n	8005c92 <_dtoa_r+0x6ee>
 8005b14:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005b16:	429d      	cmp	r5, r3
 8005b18:	d100      	bne.n	8005b1c <_dtoa_r+0x578>
 8005b1a:	e77a      	b.n	8005a12 <_dtoa_r+0x46e>
 8005b1c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005b1e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005b20:	2200      	movs	r2, #0
 8005b22:	4b55      	ldr	r3, [pc, #340]	; (8005c78 <_dtoa_r+0x6d4>)
 8005b24:	f7fb fce2 	bl	80014ec <__aeabi_dmul>
 8005b28:	2200      	movs	r2, #0
 8005b2a:	9010      	str	r0, [sp, #64]	; 0x40
 8005b2c:	9111      	str	r1, [sp, #68]	; 0x44
 8005b2e:	9806      	ldr	r0, [sp, #24]
 8005b30:	9907      	ldr	r1, [sp, #28]
 8005b32:	4b51      	ldr	r3, [pc, #324]	; (8005c78 <_dtoa_r+0x6d4>)
 8005b34:	f7fb fcda 	bl	80014ec <__aeabi_dmul>
 8005b38:	9512      	str	r5, [sp, #72]	; 0x48
 8005b3a:	9006      	str	r0, [sp, #24]
 8005b3c:	9107      	str	r1, [sp, #28]
 8005b3e:	e7c3      	b.n	8005ac8 <_dtoa_r+0x524>
 8005b40:	1859      	adds	r1, r3, r1
 8005b42:	6808      	ldr	r0, [r1, #0]
 8005b44:	6849      	ldr	r1, [r1, #4]
 8005b46:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005b48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005b4a:	f7fb fccf 	bl	80014ec <__aeabi_dmul>
 8005b4e:	9010      	str	r0, [sp, #64]	; 0x40
 8005b50:	9111      	str	r1, [sp, #68]	; 0x44
 8005b52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005b54:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8005b56:	9806      	ldr	r0, [sp, #24]
 8005b58:	9907      	ldr	r1, [sp, #28]
 8005b5a:	f7fc fa7d 	bl	8002058 <__aeabi_d2iz>
 8005b5e:	9012      	str	r0, [sp, #72]	; 0x48
 8005b60:	f7fc faae 	bl	80020c0 <__aeabi_i2d>
 8005b64:	0002      	movs	r2, r0
 8005b66:	000b      	movs	r3, r1
 8005b68:	9806      	ldr	r0, [sp, #24]
 8005b6a:	9907      	ldr	r1, [sp, #28]
 8005b6c:	f7fb ff3e 	bl	80019ec <__aeabi_dsub>
 8005b70:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005b72:	9006      	str	r0, [sp, #24]
 8005b74:	9107      	str	r1, [sp, #28]
 8005b76:	3330      	adds	r3, #48	; 0x30
 8005b78:	7023      	strb	r3, [r4, #0]
 8005b7a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8005b7c:	3401      	adds	r4, #1
 8005b7e:	2200      	movs	r2, #0
 8005b80:	42a3      	cmp	r3, r4
 8005b82:	d124      	bne.n	8005bce <_dtoa_r+0x62a>
 8005b84:	4b41      	ldr	r3, [pc, #260]	; (8005c8c <_dtoa_r+0x6e8>)
 8005b86:	9810      	ldr	r0, [sp, #64]	; 0x40
 8005b88:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005b8a:	f7fa fd6b 	bl	8000664 <__aeabi_dadd>
 8005b8e:	0002      	movs	r2, r0
 8005b90:	000b      	movs	r3, r1
 8005b92:	9806      	ldr	r0, [sp, #24]
 8005b94:	9907      	ldr	r1, [sp, #28]
 8005b96:	f7fa fc71 	bl	800047c <__aeabi_dcmpgt>
 8005b9a:	2800      	cmp	r0, #0
 8005b9c:	d000      	beq.n	8005ba0 <_dtoa_r+0x5fc>
 8005b9e:	e078      	b.n	8005c92 <_dtoa_r+0x6ee>
 8005ba0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005ba2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005ba4:	2000      	movs	r0, #0
 8005ba6:	4939      	ldr	r1, [pc, #228]	; (8005c8c <_dtoa_r+0x6e8>)
 8005ba8:	f7fb ff20 	bl	80019ec <__aeabi_dsub>
 8005bac:	0002      	movs	r2, r0
 8005bae:	000b      	movs	r3, r1
 8005bb0:	9806      	ldr	r0, [sp, #24]
 8005bb2:	9907      	ldr	r1, [sp, #28]
 8005bb4:	f7fa fc4e 	bl	8000454 <__aeabi_dcmplt>
 8005bb8:	2800      	cmp	r0, #0
 8005bba:	d100      	bne.n	8005bbe <_dtoa_r+0x61a>
 8005bbc:	e729      	b.n	8005a12 <_dtoa_r+0x46e>
 8005bbe:	1e6b      	subs	r3, r5, #1
 8005bc0:	781a      	ldrb	r2, [r3, #0]
 8005bc2:	2a30      	cmp	r2, #48	; 0x30
 8005bc4:	d001      	beq.n	8005bca <_dtoa_r+0x626>
 8005bc6:	9603      	str	r6, [sp, #12]
 8005bc8:	e03f      	b.n	8005c4a <_dtoa_r+0x6a6>
 8005bca:	001d      	movs	r5, r3
 8005bcc:	e7f7      	b.n	8005bbe <_dtoa_r+0x61a>
 8005bce:	9806      	ldr	r0, [sp, #24]
 8005bd0:	9907      	ldr	r1, [sp, #28]
 8005bd2:	4b29      	ldr	r3, [pc, #164]	; (8005c78 <_dtoa_r+0x6d4>)
 8005bd4:	f7fb fc8a 	bl	80014ec <__aeabi_dmul>
 8005bd8:	9006      	str	r0, [sp, #24]
 8005bda:	9107      	str	r1, [sp, #28]
 8005bdc:	e7bb      	b.n	8005b56 <_dtoa_r+0x5b2>
 8005bde:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8005be0:	9a08      	ldr	r2, [sp, #32]
 8005be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005be4:	9806      	ldr	r0, [sp, #24]
 8005be6:	9907      	ldr	r1, [sp, #28]
 8005be8:	f7fb f84c 	bl	8000c84 <__aeabi_ddiv>
 8005bec:	f7fc fa34 	bl	8002058 <__aeabi_d2iz>
 8005bf0:	0004      	movs	r4, r0
 8005bf2:	f7fc fa65 	bl	80020c0 <__aeabi_i2d>
 8005bf6:	9a08      	ldr	r2, [sp, #32]
 8005bf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005bfa:	f7fb fc77 	bl	80014ec <__aeabi_dmul>
 8005bfe:	000b      	movs	r3, r1
 8005c00:	0002      	movs	r2, r0
 8005c02:	9806      	ldr	r0, [sp, #24]
 8005c04:	9907      	ldr	r1, [sp, #28]
 8005c06:	f7fb fef1 	bl	80019ec <__aeabi_dsub>
 8005c0a:	0023      	movs	r3, r4
 8005c0c:	3330      	adds	r3, #48	; 0x30
 8005c0e:	7033      	strb	r3, [r6, #0]
 8005c10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c12:	1c75      	adds	r5, r6, #1
 8005c14:	1aeb      	subs	r3, r5, r3
 8005c16:	429f      	cmp	r7, r3
 8005c18:	d14c      	bne.n	8005cb4 <_dtoa_r+0x710>
 8005c1a:	0002      	movs	r2, r0
 8005c1c:	000b      	movs	r3, r1
 8005c1e:	f7fa fd21 	bl	8000664 <__aeabi_dadd>
 8005c22:	0006      	movs	r6, r0
 8005c24:	000f      	movs	r7, r1
 8005c26:	0002      	movs	r2, r0
 8005c28:	000b      	movs	r3, r1
 8005c2a:	9808      	ldr	r0, [sp, #32]
 8005c2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005c2e:	f7fa fc11 	bl	8000454 <__aeabi_dcmplt>
 8005c32:	2800      	cmp	r0, #0
 8005c34:	d12c      	bne.n	8005c90 <_dtoa_r+0x6ec>
 8005c36:	9808      	ldr	r0, [sp, #32]
 8005c38:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005c3a:	0032      	movs	r2, r6
 8005c3c:	003b      	movs	r3, r7
 8005c3e:	f7fa fc03 	bl	8000448 <__aeabi_dcmpeq>
 8005c42:	2800      	cmp	r0, #0
 8005c44:	d001      	beq.n	8005c4a <_dtoa_r+0x6a6>
 8005c46:	07e3      	lsls	r3, r4, #31
 8005c48:	d422      	bmi.n	8005c90 <_dtoa_r+0x6ec>
 8005c4a:	9905      	ldr	r1, [sp, #20]
 8005c4c:	9804      	ldr	r0, [sp, #16]
 8005c4e:	f000 fced 	bl	800662c <_Bfree>
 8005c52:	2300      	movs	r3, #0
 8005c54:	702b      	strb	r3, [r5, #0]
 8005c56:	9b03      	ldr	r3, [sp, #12]
 8005c58:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005c5a:	3301      	adds	r3, #1
 8005c5c:	6013      	str	r3, [r2, #0]
 8005c5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	d100      	bne.n	8005c66 <_dtoa_r+0x6c2>
 8005c64:	e275      	b.n	8006152 <_dtoa_r+0xbae>
 8005c66:	601d      	str	r5, [r3, #0]
 8005c68:	e273      	b.n	8006152 <_dtoa_r+0xbae>
 8005c6a:	46c0      	nop			; (mov r8, r8)
 8005c6c:	080073a0 	.word	0x080073a0
 8005c70:	08007378 	.word	0x08007378
 8005c74:	3ff00000 	.word	0x3ff00000
 8005c78:	40240000 	.word	0x40240000
 8005c7c:	401c0000 	.word	0x401c0000
 8005c80:	fcc00000 	.word	0xfcc00000
 8005c84:	40140000 	.word	0x40140000
 8005c88:	7cc00000 	.word	0x7cc00000
 8005c8c:	3fe00000 	.word	0x3fe00000
 8005c90:	9e03      	ldr	r6, [sp, #12]
 8005c92:	1e6b      	subs	r3, r5, #1
 8005c94:	781a      	ldrb	r2, [r3, #0]
 8005c96:	2a39      	cmp	r2, #57	; 0x39
 8005c98:	d106      	bne.n	8005ca8 <_dtoa_r+0x704>
 8005c9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005c9c:	429a      	cmp	r2, r3
 8005c9e:	d107      	bne.n	8005cb0 <_dtoa_r+0x70c>
 8005ca0:	2330      	movs	r3, #48	; 0x30
 8005ca2:	7013      	strb	r3, [r2, #0]
 8005ca4:	0013      	movs	r3, r2
 8005ca6:	3601      	adds	r6, #1
 8005ca8:	781a      	ldrb	r2, [r3, #0]
 8005caa:	3201      	adds	r2, #1
 8005cac:	701a      	strb	r2, [r3, #0]
 8005cae:	e78a      	b.n	8005bc6 <_dtoa_r+0x622>
 8005cb0:	001d      	movs	r5, r3
 8005cb2:	e7ee      	b.n	8005c92 <_dtoa_r+0x6ee>
 8005cb4:	2200      	movs	r2, #0
 8005cb6:	4bcf      	ldr	r3, [pc, #828]	; (8005ff4 <_dtoa_r+0xa50>)
 8005cb8:	f7fb fc18 	bl	80014ec <__aeabi_dmul>
 8005cbc:	2200      	movs	r2, #0
 8005cbe:	2300      	movs	r3, #0
 8005cc0:	9006      	str	r0, [sp, #24]
 8005cc2:	9107      	str	r1, [sp, #28]
 8005cc4:	002e      	movs	r6, r5
 8005cc6:	f7fa fbbf 	bl	8000448 <__aeabi_dcmpeq>
 8005cca:	2800      	cmp	r0, #0
 8005ccc:	d100      	bne.n	8005cd0 <_dtoa_r+0x72c>
 8005cce:	e787      	b.n	8005be0 <_dtoa_r+0x63c>
 8005cd0:	e7bb      	b.n	8005c4a <_dtoa_r+0x6a6>
 8005cd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005cd4:	2a00      	cmp	r2, #0
 8005cd6:	d100      	bne.n	8005cda <_dtoa_r+0x736>
 8005cd8:	e087      	b.n	8005dea <_dtoa_r+0x846>
 8005cda:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005cdc:	2a01      	cmp	r2, #1
 8005cde:	dc6e      	bgt.n	8005dbe <_dtoa_r+0x81a>
 8005ce0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005ce2:	2a00      	cmp	r2, #0
 8005ce4:	d067      	beq.n	8005db6 <_dtoa_r+0x812>
 8005ce6:	4ac4      	ldr	r2, [pc, #784]	; (8005ff8 <_dtoa_r+0xa54>)
 8005ce8:	189b      	adds	r3, r3, r2
 8005cea:	9d08      	ldr	r5, [sp, #32]
 8005cec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005cee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005cf0:	2101      	movs	r1, #1
 8005cf2:	18d2      	adds	r2, r2, r3
 8005cf4:	920b      	str	r2, [sp, #44]	; 0x2c
 8005cf6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005cf8:	9804      	ldr	r0, [sp, #16]
 8005cfa:	18d3      	adds	r3, r2, r3
 8005cfc:	930c      	str	r3, [sp, #48]	; 0x30
 8005cfe:	f000 fd33 	bl	8006768 <__i2b>
 8005d02:	0006      	movs	r6, r0
 8005d04:	2c00      	cmp	r4, #0
 8005d06:	dd0e      	ble.n	8005d26 <_dtoa_r+0x782>
 8005d08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	dd0b      	ble.n	8005d26 <_dtoa_r+0x782>
 8005d0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005d10:	0023      	movs	r3, r4
 8005d12:	4294      	cmp	r4, r2
 8005d14:	dd00      	ble.n	8005d18 <_dtoa_r+0x774>
 8005d16:	0013      	movs	r3, r2
 8005d18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005d1a:	1ae4      	subs	r4, r4, r3
 8005d1c:	1ad2      	subs	r2, r2, r3
 8005d1e:	920b      	str	r2, [sp, #44]	; 0x2c
 8005d20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005d22:	1ad3      	subs	r3, r2, r3
 8005d24:	930c      	str	r3, [sp, #48]	; 0x30
 8005d26:	9b08      	ldr	r3, [sp, #32]
 8005d28:	2b00      	cmp	r3, #0
 8005d2a:	d01e      	beq.n	8005d6a <_dtoa_r+0x7c6>
 8005d2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d05f      	beq.n	8005df2 <_dtoa_r+0x84e>
 8005d32:	2d00      	cmp	r5, #0
 8005d34:	dd11      	ble.n	8005d5a <_dtoa_r+0x7b6>
 8005d36:	0031      	movs	r1, r6
 8005d38:	002a      	movs	r2, r5
 8005d3a:	9804      	ldr	r0, [sp, #16]
 8005d3c:	f000 fdac 	bl	8006898 <__pow5mult>
 8005d40:	9a05      	ldr	r2, [sp, #20]
 8005d42:	0001      	movs	r1, r0
 8005d44:	0006      	movs	r6, r0
 8005d46:	9804      	ldr	r0, [sp, #16]
 8005d48:	f000 fd17 	bl	800677a <__multiply>
 8005d4c:	9905      	ldr	r1, [sp, #20]
 8005d4e:	9010      	str	r0, [sp, #64]	; 0x40
 8005d50:	9804      	ldr	r0, [sp, #16]
 8005d52:	f000 fc6b 	bl	800662c <_Bfree>
 8005d56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005d58:	9305      	str	r3, [sp, #20]
 8005d5a:	9b08      	ldr	r3, [sp, #32]
 8005d5c:	1b5a      	subs	r2, r3, r5
 8005d5e:	d004      	beq.n	8005d6a <_dtoa_r+0x7c6>
 8005d60:	9905      	ldr	r1, [sp, #20]
 8005d62:	9804      	ldr	r0, [sp, #16]
 8005d64:	f000 fd98 	bl	8006898 <__pow5mult>
 8005d68:	9005      	str	r0, [sp, #20]
 8005d6a:	2101      	movs	r1, #1
 8005d6c:	9804      	ldr	r0, [sp, #16]
 8005d6e:	f000 fcfb 	bl	8006768 <__i2b>
 8005d72:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d74:	9008      	str	r0, [sp, #32]
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	dd3d      	ble.n	8005df6 <_dtoa_r+0x852>
 8005d7a:	001a      	movs	r2, r3
 8005d7c:	0001      	movs	r1, r0
 8005d7e:	9804      	ldr	r0, [sp, #16]
 8005d80:	f000 fd8a 	bl	8006898 <__pow5mult>
 8005d84:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005d86:	9008      	str	r0, [sp, #32]
 8005d88:	2500      	movs	r5, #0
 8005d8a:	2b01      	cmp	r3, #1
 8005d8c:	dc3b      	bgt.n	8005e06 <_dtoa_r+0x862>
 8005d8e:	2500      	movs	r5, #0
 8005d90:	9b06      	ldr	r3, [sp, #24]
 8005d92:	42ab      	cmp	r3, r5
 8005d94:	d133      	bne.n	8005dfe <_dtoa_r+0x85a>
 8005d96:	9b07      	ldr	r3, [sp, #28]
 8005d98:	031b      	lsls	r3, r3, #12
 8005d9a:	42ab      	cmp	r3, r5
 8005d9c:	d12f      	bne.n	8005dfe <_dtoa_r+0x85a>
 8005d9e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005da0:	9a07      	ldr	r2, [sp, #28]
 8005da2:	4213      	tst	r3, r2
 8005da4:	d02b      	beq.n	8005dfe <_dtoa_r+0x85a>
 8005da6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005da8:	3501      	adds	r5, #1
 8005daa:	3301      	adds	r3, #1
 8005dac:	930b      	str	r3, [sp, #44]	; 0x2c
 8005dae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005db0:	3301      	adds	r3, #1
 8005db2:	930c      	str	r3, [sp, #48]	; 0x30
 8005db4:	e023      	b.n	8005dfe <_dtoa_r+0x85a>
 8005db6:	2336      	movs	r3, #54	; 0x36
 8005db8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8005dba:	1a9b      	subs	r3, r3, r2
 8005dbc:	e795      	b.n	8005cea <_dtoa_r+0x746>
 8005dbe:	9b08      	ldr	r3, [sp, #32]
 8005dc0:	1e7d      	subs	r5, r7, #1
 8005dc2:	42ab      	cmp	r3, r5
 8005dc4:	db06      	blt.n	8005dd4 <_dtoa_r+0x830>
 8005dc6:	1b5d      	subs	r5, r3, r5
 8005dc8:	2f00      	cmp	r7, #0
 8005dca:	da0b      	bge.n	8005de4 <_dtoa_r+0x840>
 8005dcc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005dce:	1bdc      	subs	r4, r3, r7
 8005dd0:	2300      	movs	r3, #0
 8005dd2:	e78c      	b.n	8005cee <_dtoa_r+0x74a>
 8005dd4:	9b08      	ldr	r3, [sp, #32]
 8005dd6:	9508      	str	r5, [sp, #32]
 8005dd8:	1aea      	subs	r2, r5, r3
 8005dda:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005ddc:	2500      	movs	r5, #0
 8005dde:	189b      	adds	r3, r3, r2
 8005de0:	930f      	str	r3, [sp, #60]	; 0x3c
 8005de2:	e7f1      	b.n	8005dc8 <_dtoa_r+0x824>
 8005de4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005de6:	003b      	movs	r3, r7
 8005de8:	e781      	b.n	8005cee <_dtoa_r+0x74a>
 8005dea:	9d08      	ldr	r5, [sp, #32]
 8005dec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005dee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005df0:	e788      	b.n	8005d04 <_dtoa_r+0x760>
 8005df2:	9a08      	ldr	r2, [sp, #32]
 8005df4:	e7b4      	b.n	8005d60 <_dtoa_r+0x7bc>
 8005df6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005df8:	2500      	movs	r5, #0
 8005dfa:	2b01      	cmp	r3, #1
 8005dfc:	ddc7      	ble.n	8005d8e <_dtoa_r+0x7ea>
 8005dfe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005e00:	2001      	movs	r0, #1
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	d00b      	beq.n	8005e1e <_dtoa_r+0x87a>
 8005e06:	9b08      	ldr	r3, [sp, #32]
 8005e08:	9a08      	ldr	r2, [sp, #32]
 8005e0a:	691b      	ldr	r3, [r3, #16]
 8005e0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8005e0e:	3303      	adds	r3, #3
 8005e10:	009b      	lsls	r3, r3, #2
 8005e12:	18d3      	adds	r3, r2, r3
 8005e14:	6858      	ldr	r0, [r3, #4]
 8005e16:	f000 fc5e 	bl	80066d6 <__hi0bits>
 8005e1a:	2320      	movs	r3, #32
 8005e1c:	1a18      	subs	r0, r3, r0
 8005e1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e20:	18c0      	adds	r0, r0, r3
 8005e22:	231f      	movs	r3, #31
 8005e24:	4018      	ands	r0, r3
 8005e26:	d100      	bne.n	8005e2a <_dtoa_r+0x886>
 8005e28:	e0ab      	b.n	8005f82 <_dtoa_r+0x9de>
 8005e2a:	3301      	adds	r3, #1
 8005e2c:	1a1b      	subs	r3, r3, r0
 8005e2e:	2b04      	cmp	r3, #4
 8005e30:	dc00      	bgt.n	8005e34 <_dtoa_r+0x890>
 8005e32:	e09b      	b.n	8005f6c <_dtoa_r+0x9c8>
 8005e34:	231c      	movs	r3, #28
 8005e36:	1a18      	subs	r0, r3, r0
 8005e38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005e3a:	1824      	adds	r4, r4, r0
 8005e3c:	181b      	adds	r3, r3, r0
 8005e3e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005e40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e42:	181b      	adds	r3, r3, r0
 8005e44:	930c      	str	r3, [sp, #48]	; 0x30
 8005e46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005e48:	2b00      	cmp	r3, #0
 8005e4a:	dd05      	ble.n	8005e58 <_dtoa_r+0x8b4>
 8005e4c:	001a      	movs	r2, r3
 8005e4e:	9905      	ldr	r1, [sp, #20]
 8005e50:	9804      	ldr	r0, [sp, #16]
 8005e52:	f000 fd73 	bl	800693c <__lshift>
 8005e56:	9005      	str	r0, [sp, #20]
 8005e58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	dd05      	ble.n	8005e6a <_dtoa_r+0x8c6>
 8005e5e:	001a      	movs	r2, r3
 8005e60:	9908      	ldr	r1, [sp, #32]
 8005e62:	9804      	ldr	r0, [sp, #16]
 8005e64:	f000 fd6a 	bl	800693c <__lshift>
 8005e68:	9008      	str	r0, [sp, #32]
 8005e6a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	d100      	bne.n	8005e72 <_dtoa_r+0x8ce>
 8005e70:	e089      	b.n	8005f86 <_dtoa_r+0x9e2>
 8005e72:	9908      	ldr	r1, [sp, #32]
 8005e74:	9805      	ldr	r0, [sp, #20]
 8005e76:	f000 fdb2 	bl	80069de <__mcmp>
 8005e7a:	2800      	cmp	r0, #0
 8005e7c:	db00      	blt.n	8005e80 <_dtoa_r+0x8dc>
 8005e7e:	e082      	b.n	8005f86 <_dtoa_r+0x9e2>
 8005e80:	9b03      	ldr	r3, [sp, #12]
 8005e82:	220a      	movs	r2, #10
 8005e84:	3b01      	subs	r3, #1
 8005e86:	9303      	str	r3, [sp, #12]
 8005e88:	9905      	ldr	r1, [sp, #20]
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	9804      	ldr	r0, [sp, #16]
 8005e8e:	f000 fbe6 	bl	800665e <__multadd>
 8005e92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e94:	9005      	str	r0, [sp, #20]
 8005e96:	2b00      	cmp	r3, #0
 8005e98:	d100      	bne.n	8005e9c <_dtoa_r+0x8f8>
 8005e9a:	e15d      	b.n	8006158 <_dtoa_r+0xbb4>
 8005e9c:	2300      	movs	r3, #0
 8005e9e:	0031      	movs	r1, r6
 8005ea0:	220a      	movs	r2, #10
 8005ea2:	9804      	ldr	r0, [sp, #16]
 8005ea4:	f000 fbdb 	bl	800665e <__multadd>
 8005ea8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005eaa:	0006      	movs	r6, r0
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	dc02      	bgt.n	8005eb6 <_dtoa_r+0x912>
 8005eb0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005eb2:	2b02      	cmp	r3, #2
 8005eb4:	dc6d      	bgt.n	8005f92 <_dtoa_r+0x9ee>
 8005eb6:	2c00      	cmp	r4, #0
 8005eb8:	dd05      	ble.n	8005ec6 <_dtoa_r+0x922>
 8005eba:	0031      	movs	r1, r6
 8005ebc:	0022      	movs	r2, r4
 8005ebe:	9804      	ldr	r0, [sp, #16]
 8005ec0:	f000 fd3c 	bl	800693c <__lshift>
 8005ec4:	0006      	movs	r6, r0
 8005ec6:	0030      	movs	r0, r6
 8005ec8:	2d00      	cmp	r5, #0
 8005eca:	d011      	beq.n	8005ef0 <_dtoa_r+0x94c>
 8005ecc:	6871      	ldr	r1, [r6, #4]
 8005ece:	9804      	ldr	r0, [sp, #16]
 8005ed0:	f000 fb74 	bl	80065bc <_Balloc>
 8005ed4:	0031      	movs	r1, r6
 8005ed6:	0004      	movs	r4, r0
 8005ed8:	6933      	ldr	r3, [r6, #16]
 8005eda:	310c      	adds	r1, #12
 8005edc:	1c9a      	adds	r2, r3, #2
 8005ede:	0092      	lsls	r2, r2, #2
 8005ee0:	300c      	adds	r0, #12
 8005ee2:	f000 fb62 	bl	80065aa <memcpy>
 8005ee6:	2201      	movs	r2, #1
 8005ee8:	0021      	movs	r1, r4
 8005eea:	9804      	ldr	r0, [sp, #16]
 8005eec:	f000 fd26 	bl	800693c <__lshift>
 8005ef0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8005ef2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ef4:	3f01      	subs	r7, #1
 8005ef6:	930b      	str	r3, [sp, #44]	; 0x2c
 8005ef8:	19db      	adds	r3, r3, r7
 8005efa:	0037      	movs	r7, r6
 8005efc:	0006      	movs	r6, r0
 8005efe:	930f      	str	r3, [sp, #60]	; 0x3c
 8005f00:	9908      	ldr	r1, [sp, #32]
 8005f02:	9805      	ldr	r0, [sp, #20]
 8005f04:	f7ff faca 	bl	800549c <quorem>
 8005f08:	0039      	movs	r1, r7
 8005f0a:	900d      	str	r0, [sp, #52]	; 0x34
 8005f0c:	0004      	movs	r4, r0
 8005f0e:	9805      	ldr	r0, [sp, #20]
 8005f10:	f000 fd65 	bl	80069de <__mcmp>
 8005f14:	0032      	movs	r2, r6
 8005f16:	900e      	str	r0, [sp, #56]	; 0x38
 8005f18:	9908      	ldr	r1, [sp, #32]
 8005f1a:	9804      	ldr	r0, [sp, #16]
 8005f1c:	f000 fd78 	bl	8006a10 <__mdiff>
 8005f20:	2301      	movs	r3, #1
 8005f22:	930c      	str	r3, [sp, #48]	; 0x30
 8005f24:	68c3      	ldr	r3, [r0, #12]
 8005f26:	3430      	adds	r4, #48	; 0x30
 8005f28:	0005      	movs	r5, r0
 8005f2a:	2b00      	cmp	r3, #0
 8005f2c:	d104      	bne.n	8005f38 <_dtoa_r+0x994>
 8005f2e:	0001      	movs	r1, r0
 8005f30:	9805      	ldr	r0, [sp, #20]
 8005f32:	f000 fd54 	bl	80069de <__mcmp>
 8005f36:	900c      	str	r0, [sp, #48]	; 0x30
 8005f38:	0029      	movs	r1, r5
 8005f3a:	9804      	ldr	r0, [sp, #16]
 8005f3c:	f000 fb76 	bl	800662c <_Bfree>
 8005f40:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005f42:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005f44:	4313      	orrs	r3, r2
 8005f46:	d000      	beq.n	8005f4a <_dtoa_r+0x9a6>
 8005f48:	e089      	b.n	800605e <_dtoa_r+0xaba>
 8005f4a:	9a06      	ldr	r2, [sp, #24]
 8005f4c:	3301      	adds	r3, #1
 8005f4e:	4213      	tst	r3, r2
 8005f50:	d000      	beq.n	8005f54 <_dtoa_r+0x9b0>
 8005f52:	e084      	b.n	800605e <_dtoa_r+0xaba>
 8005f54:	2c39      	cmp	r4, #57	; 0x39
 8005f56:	d100      	bne.n	8005f5a <_dtoa_r+0x9b6>
 8005f58:	e0a3      	b.n	80060a2 <_dtoa_r+0xafe>
 8005f5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	dd01      	ble.n	8005f64 <_dtoa_r+0x9c0>
 8005f60:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8005f62:	3431      	adds	r4, #49	; 0x31
 8005f64:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f66:	1c5d      	adds	r5, r3, #1
 8005f68:	701c      	strb	r4, [r3, #0]
 8005f6a:	e027      	b.n	8005fbc <_dtoa_r+0xa18>
 8005f6c:	2b04      	cmp	r3, #4
 8005f6e:	d100      	bne.n	8005f72 <_dtoa_r+0x9ce>
 8005f70:	e769      	b.n	8005e46 <_dtoa_r+0x8a2>
 8005f72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005f74:	331c      	adds	r3, #28
 8005f76:	18d2      	adds	r2, r2, r3
 8005f78:	920b      	str	r2, [sp, #44]	; 0x2c
 8005f7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f7c:	18e4      	adds	r4, r4, r3
 8005f7e:	18d3      	adds	r3, r2, r3
 8005f80:	e760      	b.n	8005e44 <_dtoa_r+0x8a0>
 8005f82:	0003      	movs	r3, r0
 8005f84:	e7f5      	b.n	8005f72 <_dtoa_r+0x9ce>
 8005f86:	2f00      	cmp	r7, #0
 8005f88:	dc3c      	bgt.n	8006004 <_dtoa_r+0xa60>
 8005f8a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005f8c:	2b02      	cmp	r3, #2
 8005f8e:	dd39      	ble.n	8006004 <_dtoa_r+0xa60>
 8005f90:	970d      	str	r7, [sp, #52]	; 0x34
 8005f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	d10c      	bne.n	8005fb2 <_dtoa_r+0xa0e>
 8005f98:	9908      	ldr	r1, [sp, #32]
 8005f9a:	2205      	movs	r2, #5
 8005f9c:	9804      	ldr	r0, [sp, #16]
 8005f9e:	f000 fb5e 	bl	800665e <__multadd>
 8005fa2:	9008      	str	r0, [sp, #32]
 8005fa4:	0001      	movs	r1, r0
 8005fa6:	9805      	ldr	r0, [sp, #20]
 8005fa8:	f000 fd19 	bl	80069de <__mcmp>
 8005fac:	2800      	cmp	r0, #0
 8005fae:	dd00      	ble.n	8005fb2 <_dtoa_r+0xa0e>
 8005fb0:	e55a      	b.n	8005a68 <_dtoa_r+0x4c4>
 8005fb2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005fb4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005fb6:	43db      	mvns	r3, r3
 8005fb8:	9303      	str	r3, [sp, #12]
 8005fba:	2700      	movs	r7, #0
 8005fbc:	9908      	ldr	r1, [sp, #32]
 8005fbe:	9804      	ldr	r0, [sp, #16]
 8005fc0:	f000 fb34 	bl	800662c <_Bfree>
 8005fc4:	2e00      	cmp	r6, #0
 8005fc6:	d100      	bne.n	8005fca <_dtoa_r+0xa26>
 8005fc8:	e63f      	b.n	8005c4a <_dtoa_r+0x6a6>
 8005fca:	2f00      	cmp	r7, #0
 8005fcc:	d005      	beq.n	8005fda <_dtoa_r+0xa36>
 8005fce:	42b7      	cmp	r7, r6
 8005fd0:	d003      	beq.n	8005fda <_dtoa_r+0xa36>
 8005fd2:	0039      	movs	r1, r7
 8005fd4:	9804      	ldr	r0, [sp, #16]
 8005fd6:	f000 fb29 	bl	800662c <_Bfree>
 8005fda:	0031      	movs	r1, r6
 8005fdc:	9804      	ldr	r0, [sp, #16]
 8005fde:	f000 fb25 	bl	800662c <_Bfree>
 8005fe2:	e632      	b.n	8005c4a <_dtoa_r+0x6a6>
 8005fe4:	9508      	str	r5, [sp, #32]
 8005fe6:	002e      	movs	r6, r5
 8005fe8:	e7e3      	b.n	8005fb2 <_dtoa_r+0xa0e>
 8005fea:	2300      	movs	r3, #0
 8005fec:	9308      	str	r3, [sp, #32]
 8005fee:	001e      	movs	r6, r3
 8005ff0:	e7df      	b.n	8005fb2 <_dtoa_r+0xa0e>
 8005ff2:	46c0      	nop			; (mov r8, r8)
 8005ff4:	40240000 	.word	0x40240000
 8005ff8:	00000433 	.word	0x00000433
 8005ffc:	9603      	str	r6, [sp, #12]
 8005ffe:	9508      	str	r5, [sp, #32]
 8006000:	002e      	movs	r6, r5
 8006002:	e531      	b.n	8005a68 <_dtoa_r+0x4c4>
 8006004:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006006:	970d      	str	r7, [sp, #52]	; 0x34
 8006008:	2b00      	cmp	r3, #0
 800600a:	d000      	beq.n	800600e <_dtoa_r+0xa6a>
 800600c:	e753      	b.n	8005eb6 <_dtoa_r+0x912>
 800600e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006010:	9908      	ldr	r1, [sp, #32]
 8006012:	9805      	ldr	r0, [sp, #20]
 8006014:	f7ff fa42 	bl	800549c <quorem>
 8006018:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800601a:	3030      	adds	r0, #48	; 0x30
 800601c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800601e:	7028      	strb	r0, [r5, #0]
 8006020:	3501      	adds	r5, #1
 8006022:	0004      	movs	r4, r0
 8006024:	1aeb      	subs	r3, r5, r3
 8006026:	429a      	cmp	r2, r3
 8006028:	dc78      	bgt.n	800611c <_dtoa_r+0xb78>
 800602a:	1e15      	subs	r5, r2, #0
 800602c:	dc00      	bgt.n	8006030 <_dtoa_r+0xa8c>
 800602e:	2501      	movs	r5, #1
 8006030:	2700      	movs	r7, #0
 8006032:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006034:	195d      	adds	r5, r3, r5
 8006036:	9905      	ldr	r1, [sp, #20]
 8006038:	2201      	movs	r2, #1
 800603a:	9804      	ldr	r0, [sp, #16]
 800603c:	f000 fc7e 	bl	800693c <__lshift>
 8006040:	9908      	ldr	r1, [sp, #32]
 8006042:	9005      	str	r0, [sp, #20]
 8006044:	f000 fccb 	bl	80069de <__mcmp>
 8006048:	2800      	cmp	r0, #0
 800604a:	dc2f      	bgt.n	80060ac <_dtoa_r+0xb08>
 800604c:	d101      	bne.n	8006052 <_dtoa_r+0xaae>
 800604e:	07e3      	lsls	r3, r4, #31
 8006050:	d42c      	bmi.n	80060ac <_dtoa_r+0xb08>
 8006052:	1e6b      	subs	r3, r5, #1
 8006054:	781a      	ldrb	r2, [r3, #0]
 8006056:	2a30      	cmp	r2, #48	; 0x30
 8006058:	d1b0      	bne.n	8005fbc <_dtoa_r+0xa18>
 800605a:	001d      	movs	r5, r3
 800605c:	e7f9      	b.n	8006052 <_dtoa_r+0xaae>
 800605e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006060:	2b00      	cmp	r3, #0
 8006062:	db07      	blt.n	8006074 <_dtoa_r+0xad0>
 8006064:	001d      	movs	r5, r3
 8006066:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006068:	431d      	orrs	r5, r3
 800606a:	d126      	bne.n	80060ba <_dtoa_r+0xb16>
 800606c:	2301      	movs	r3, #1
 800606e:	9a06      	ldr	r2, [sp, #24]
 8006070:	4213      	tst	r3, r2
 8006072:	d122      	bne.n	80060ba <_dtoa_r+0xb16>
 8006074:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006076:	2b00      	cmp	r3, #0
 8006078:	dc00      	bgt.n	800607c <_dtoa_r+0xad8>
 800607a:	e773      	b.n	8005f64 <_dtoa_r+0x9c0>
 800607c:	9905      	ldr	r1, [sp, #20]
 800607e:	2201      	movs	r2, #1
 8006080:	9804      	ldr	r0, [sp, #16]
 8006082:	f000 fc5b 	bl	800693c <__lshift>
 8006086:	9908      	ldr	r1, [sp, #32]
 8006088:	9005      	str	r0, [sp, #20]
 800608a:	f000 fca8 	bl	80069de <__mcmp>
 800608e:	2800      	cmp	r0, #0
 8006090:	dc04      	bgt.n	800609c <_dtoa_r+0xaf8>
 8006092:	d000      	beq.n	8006096 <_dtoa_r+0xaf2>
 8006094:	e766      	b.n	8005f64 <_dtoa_r+0x9c0>
 8006096:	07e3      	lsls	r3, r4, #31
 8006098:	d400      	bmi.n	800609c <_dtoa_r+0xaf8>
 800609a:	e763      	b.n	8005f64 <_dtoa_r+0x9c0>
 800609c:	2c39      	cmp	r4, #57	; 0x39
 800609e:	d000      	beq.n	80060a2 <_dtoa_r+0xafe>
 80060a0:	e75e      	b.n	8005f60 <_dtoa_r+0x9bc>
 80060a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80060a6:	1c5d      	adds	r5, r3, #1
 80060a8:	2339      	movs	r3, #57	; 0x39
 80060aa:	7013      	strb	r3, [r2, #0]
 80060ac:	1e6b      	subs	r3, r5, #1
 80060ae:	781a      	ldrb	r2, [r3, #0]
 80060b0:	2a39      	cmp	r2, #57	; 0x39
 80060b2:	d03b      	beq.n	800612c <_dtoa_r+0xb88>
 80060b4:	3201      	adds	r2, #1
 80060b6:	701a      	strb	r2, [r3, #0]
 80060b8:	e780      	b.n	8005fbc <_dtoa_r+0xa18>
 80060ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060bc:	3301      	adds	r3, #1
 80060be:	930d      	str	r3, [sp, #52]	; 0x34
 80060c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80060c2:	2b00      	cmp	r3, #0
 80060c4:	dd05      	ble.n	80060d2 <_dtoa_r+0xb2e>
 80060c6:	2c39      	cmp	r4, #57	; 0x39
 80060c8:	d0eb      	beq.n	80060a2 <_dtoa_r+0xafe>
 80060ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80060cc:	3401      	adds	r4, #1
 80060ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060d0:	e74a      	b.n	8005f68 <_dtoa_r+0x9c4>
 80060d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80060d6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80060d8:	701c      	strb	r4, [r3, #0]
 80060da:	4293      	cmp	r3, r2
 80060dc:	d0ab      	beq.n	8006036 <_dtoa_r+0xa92>
 80060de:	2300      	movs	r3, #0
 80060e0:	220a      	movs	r2, #10
 80060e2:	9905      	ldr	r1, [sp, #20]
 80060e4:	9804      	ldr	r0, [sp, #16]
 80060e6:	f000 faba 	bl	800665e <__multadd>
 80060ea:	2300      	movs	r3, #0
 80060ec:	9005      	str	r0, [sp, #20]
 80060ee:	220a      	movs	r2, #10
 80060f0:	0039      	movs	r1, r7
 80060f2:	9804      	ldr	r0, [sp, #16]
 80060f4:	42b7      	cmp	r7, r6
 80060f6:	d106      	bne.n	8006106 <_dtoa_r+0xb62>
 80060f8:	f000 fab1 	bl	800665e <__multadd>
 80060fc:	0007      	movs	r7, r0
 80060fe:	0006      	movs	r6, r0
 8006100:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006102:	930b      	str	r3, [sp, #44]	; 0x2c
 8006104:	e6fc      	b.n	8005f00 <_dtoa_r+0x95c>
 8006106:	f000 faaa 	bl	800665e <__multadd>
 800610a:	0031      	movs	r1, r6
 800610c:	0007      	movs	r7, r0
 800610e:	2300      	movs	r3, #0
 8006110:	220a      	movs	r2, #10
 8006112:	9804      	ldr	r0, [sp, #16]
 8006114:	f000 faa3 	bl	800665e <__multadd>
 8006118:	0006      	movs	r6, r0
 800611a:	e7f1      	b.n	8006100 <_dtoa_r+0xb5c>
 800611c:	2300      	movs	r3, #0
 800611e:	220a      	movs	r2, #10
 8006120:	9905      	ldr	r1, [sp, #20]
 8006122:	9804      	ldr	r0, [sp, #16]
 8006124:	f000 fa9b 	bl	800665e <__multadd>
 8006128:	9005      	str	r0, [sp, #20]
 800612a:	e771      	b.n	8006010 <_dtoa_r+0xa6c>
 800612c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800612e:	429a      	cmp	r2, r3
 8006130:	d105      	bne.n	800613e <_dtoa_r+0xb9a>
 8006132:	9b03      	ldr	r3, [sp, #12]
 8006134:	3301      	adds	r3, #1
 8006136:	9303      	str	r3, [sp, #12]
 8006138:	2331      	movs	r3, #49	; 0x31
 800613a:	7013      	strb	r3, [r2, #0]
 800613c:	e73e      	b.n	8005fbc <_dtoa_r+0xa18>
 800613e:	001d      	movs	r5, r3
 8006140:	e7b4      	b.n	80060ac <_dtoa_r+0xb08>
 8006142:	4b0a      	ldr	r3, [pc, #40]	; (800616c <_dtoa_r+0xbc8>)
 8006144:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006146:	930a      	str	r3, [sp, #40]	; 0x28
 8006148:	4b09      	ldr	r3, [pc, #36]	; (8006170 <_dtoa_r+0xbcc>)
 800614a:	2a00      	cmp	r2, #0
 800614c:	d001      	beq.n	8006152 <_dtoa_r+0xbae>
 800614e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006150:	6013      	str	r3, [r2, #0]
 8006152:	980a      	ldr	r0, [sp, #40]	; 0x28
 8006154:	b01d      	add	sp, #116	; 0x74
 8006156:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006158:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800615a:	2b00      	cmp	r3, #0
 800615c:	dd00      	ble.n	8006160 <_dtoa_r+0xbbc>
 800615e:	e756      	b.n	800600e <_dtoa_r+0xa6a>
 8006160:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006162:	2b02      	cmp	r3, #2
 8006164:	dc00      	bgt.n	8006168 <_dtoa_r+0xbc4>
 8006166:	e752      	b.n	800600e <_dtoa_r+0xa6a>
 8006168:	e713      	b.n	8005f92 <_dtoa_r+0x9ee>
 800616a:	46c0      	nop			; (mov r8, r8)
 800616c:	08007308 	.word	0x08007308
 8006170:	08007310 	.word	0x08007310

08006174 <__sflush_r>:
 8006174:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006176:	898a      	ldrh	r2, [r1, #12]
 8006178:	0005      	movs	r5, r0
 800617a:	000c      	movs	r4, r1
 800617c:	0713      	lsls	r3, r2, #28
 800617e:	d460      	bmi.n	8006242 <__sflush_r+0xce>
 8006180:	684b      	ldr	r3, [r1, #4]
 8006182:	2b00      	cmp	r3, #0
 8006184:	dc04      	bgt.n	8006190 <__sflush_r+0x1c>
 8006186:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006188:	2b00      	cmp	r3, #0
 800618a:	dc01      	bgt.n	8006190 <__sflush_r+0x1c>
 800618c:	2000      	movs	r0, #0
 800618e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006190:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006192:	2f00      	cmp	r7, #0
 8006194:	d0fa      	beq.n	800618c <__sflush_r+0x18>
 8006196:	2300      	movs	r3, #0
 8006198:	682e      	ldr	r6, [r5, #0]
 800619a:	602b      	str	r3, [r5, #0]
 800619c:	2380      	movs	r3, #128	; 0x80
 800619e:	015b      	lsls	r3, r3, #5
 80061a0:	401a      	ands	r2, r3
 80061a2:	d034      	beq.n	800620e <__sflush_r+0x9a>
 80061a4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80061a6:	89a3      	ldrh	r3, [r4, #12]
 80061a8:	075b      	lsls	r3, r3, #29
 80061aa:	d506      	bpl.n	80061ba <__sflush_r+0x46>
 80061ac:	6863      	ldr	r3, [r4, #4]
 80061ae:	1ac0      	subs	r0, r0, r3
 80061b0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d001      	beq.n	80061ba <__sflush_r+0x46>
 80061b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80061b8:	1ac0      	subs	r0, r0, r3
 80061ba:	0002      	movs	r2, r0
 80061bc:	6a21      	ldr	r1, [r4, #32]
 80061be:	2300      	movs	r3, #0
 80061c0:	0028      	movs	r0, r5
 80061c2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80061c4:	47b8      	blx	r7
 80061c6:	89a1      	ldrh	r1, [r4, #12]
 80061c8:	1c43      	adds	r3, r0, #1
 80061ca:	d106      	bne.n	80061da <__sflush_r+0x66>
 80061cc:	682b      	ldr	r3, [r5, #0]
 80061ce:	2b1d      	cmp	r3, #29
 80061d0:	d831      	bhi.n	8006236 <__sflush_r+0xc2>
 80061d2:	4a2c      	ldr	r2, [pc, #176]	; (8006284 <__sflush_r+0x110>)
 80061d4:	40da      	lsrs	r2, r3
 80061d6:	07d3      	lsls	r3, r2, #31
 80061d8:	d52d      	bpl.n	8006236 <__sflush_r+0xc2>
 80061da:	2300      	movs	r3, #0
 80061dc:	6063      	str	r3, [r4, #4]
 80061de:	6923      	ldr	r3, [r4, #16]
 80061e0:	6023      	str	r3, [r4, #0]
 80061e2:	04cb      	lsls	r3, r1, #19
 80061e4:	d505      	bpl.n	80061f2 <__sflush_r+0x7e>
 80061e6:	1c43      	adds	r3, r0, #1
 80061e8:	d102      	bne.n	80061f0 <__sflush_r+0x7c>
 80061ea:	682b      	ldr	r3, [r5, #0]
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	d100      	bne.n	80061f2 <__sflush_r+0x7e>
 80061f0:	6560      	str	r0, [r4, #84]	; 0x54
 80061f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80061f4:	602e      	str	r6, [r5, #0]
 80061f6:	2900      	cmp	r1, #0
 80061f8:	d0c8      	beq.n	800618c <__sflush_r+0x18>
 80061fa:	0023      	movs	r3, r4
 80061fc:	3344      	adds	r3, #68	; 0x44
 80061fe:	4299      	cmp	r1, r3
 8006200:	d002      	beq.n	8006208 <__sflush_r+0x94>
 8006202:	0028      	movs	r0, r5
 8006204:	f000 fcca 	bl	8006b9c <_free_r>
 8006208:	2000      	movs	r0, #0
 800620a:	6360      	str	r0, [r4, #52]	; 0x34
 800620c:	e7bf      	b.n	800618e <__sflush_r+0x1a>
 800620e:	2301      	movs	r3, #1
 8006210:	6a21      	ldr	r1, [r4, #32]
 8006212:	0028      	movs	r0, r5
 8006214:	47b8      	blx	r7
 8006216:	1c43      	adds	r3, r0, #1
 8006218:	d1c5      	bne.n	80061a6 <__sflush_r+0x32>
 800621a:	682b      	ldr	r3, [r5, #0]
 800621c:	2b00      	cmp	r3, #0
 800621e:	d0c2      	beq.n	80061a6 <__sflush_r+0x32>
 8006220:	2b1d      	cmp	r3, #29
 8006222:	d001      	beq.n	8006228 <__sflush_r+0xb4>
 8006224:	2b16      	cmp	r3, #22
 8006226:	d101      	bne.n	800622c <__sflush_r+0xb8>
 8006228:	602e      	str	r6, [r5, #0]
 800622a:	e7af      	b.n	800618c <__sflush_r+0x18>
 800622c:	2340      	movs	r3, #64	; 0x40
 800622e:	89a2      	ldrh	r2, [r4, #12]
 8006230:	4313      	orrs	r3, r2
 8006232:	81a3      	strh	r3, [r4, #12]
 8006234:	e7ab      	b.n	800618e <__sflush_r+0x1a>
 8006236:	2340      	movs	r3, #64	; 0x40
 8006238:	430b      	orrs	r3, r1
 800623a:	2001      	movs	r0, #1
 800623c:	81a3      	strh	r3, [r4, #12]
 800623e:	4240      	negs	r0, r0
 8006240:	e7a5      	b.n	800618e <__sflush_r+0x1a>
 8006242:	690f      	ldr	r7, [r1, #16]
 8006244:	2f00      	cmp	r7, #0
 8006246:	d0a1      	beq.n	800618c <__sflush_r+0x18>
 8006248:	680b      	ldr	r3, [r1, #0]
 800624a:	600f      	str	r7, [r1, #0]
 800624c:	1bdb      	subs	r3, r3, r7
 800624e:	9301      	str	r3, [sp, #4]
 8006250:	2300      	movs	r3, #0
 8006252:	0792      	lsls	r2, r2, #30
 8006254:	d100      	bne.n	8006258 <__sflush_r+0xe4>
 8006256:	694b      	ldr	r3, [r1, #20]
 8006258:	60a3      	str	r3, [r4, #8]
 800625a:	9b01      	ldr	r3, [sp, #4]
 800625c:	2b00      	cmp	r3, #0
 800625e:	dc00      	bgt.n	8006262 <__sflush_r+0xee>
 8006260:	e794      	b.n	800618c <__sflush_r+0x18>
 8006262:	9b01      	ldr	r3, [sp, #4]
 8006264:	003a      	movs	r2, r7
 8006266:	6a21      	ldr	r1, [r4, #32]
 8006268:	0028      	movs	r0, r5
 800626a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800626c:	47b0      	blx	r6
 800626e:	2800      	cmp	r0, #0
 8006270:	dc03      	bgt.n	800627a <__sflush_r+0x106>
 8006272:	2340      	movs	r3, #64	; 0x40
 8006274:	89a2      	ldrh	r2, [r4, #12]
 8006276:	4313      	orrs	r3, r2
 8006278:	e7df      	b.n	800623a <__sflush_r+0xc6>
 800627a:	9b01      	ldr	r3, [sp, #4]
 800627c:	183f      	adds	r7, r7, r0
 800627e:	1a1b      	subs	r3, r3, r0
 8006280:	9301      	str	r3, [sp, #4]
 8006282:	e7ea      	b.n	800625a <__sflush_r+0xe6>
 8006284:	20400001 	.word	0x20400001

08006288 <_fflush_r>:
 8006288:	690b      	ldr	r3, [r1, #16]
 800628a:	b570      	push	{r4, r5, r6, lr}
 800628c:	0005      	movs	r5, r0
 800628e:	000c      	movs	r4, r1
 8006290:	2b00      	cmp	r3, #0
 8006292:	d101      	bne.n	8006298 <_fflush_r+0x10>
 8006294:	2000      	movs	r0, #0
 8006296:	bd70      	pop	{r4, r5, r6, pc}
 8006298:	2800      	cmp	r0, #0
 800629a:	d004      	beq.n	80062a6 <_fflush_r+0x1e>
 800629c:	6983      	ldr	r3, [r0, #24]
 800629e:	2b00      	cmp	r3, #0
 80062a0:	d101      	bne.n	80062a6 <_fflush_r+0x1e>
 80062a2:	f000 f85f 	bl	8006364 <__sinit>
 80062a6:	4b0b      	ldr	r3, [pc, #44]	; (80062d4 <_fflush_r+0x4c>)
 80062a8:	429c      	cmp	r4, r3
 80062aa:	d109      	bne.n	80062c0 <_fflush_r+0x38>
 80062ac:	686c      	ldr	r4, [r5, #4]
 80062ae:	220c      	movs	r2, #12
 80062b0:	5ea3      	ldrsh	r3, [r4, r2]
 80062b2:	2b00      	cmp	r3, #0
 80062b4:	d0ee      	beq.n	8006294 <_fflush_r+0xc>
 80062b6:	0021      	movs	r1, r4
 80062b8:	0028      	movs	r0, r5
 80062ba:	f7ff ff5b 	bl	8006174 <__sflush_r>
 80062be:	e7ea      	b.n	8006296 <_fflush_r+0xe>
 80062c0:	4b05      	ldr	r3, [pc, #20]	; (80062d8 <_fflush_r+0x50>)
 80062c2:	429c      	cmp	r4, r3
 80062c4:	d101      	bne.n	80062ca <_fflush_r+0x42>
 80062c6:	68ac      	ldr	r4, [r5, #8]
 80062c8:	e7f1      	b.n	80062ae <_fflush_r+0x26>
 80062ca:	4b04      	ldr	r3, [pc, #16]	; (80062dc <_fflush_r+0x54>)
 80062cc:	429c      	cmp	r4, r3
 80062ce:	d1ee      	bne.n	80062ae <_fflush_r+0x26>
 80062d0:	68ec      	ldr	r4, [r5, #12]
 80062d2:	e7ec      	b.n	80062ae <_fflush_r+0x26>
 80062d4:	08007338 	.word	0x08007338
 80062d8:	08007358 	.word	0x08007358
 80062dc:	08007318 	.word	0x08007318

080062e0 <_cleanup_r>:
 80062e0:	b510      	push	{r4, lr}
 80062e2:	4902      	ldr	r1, [pc, #8]	; (80062ec <_cleanup_r+0xc>)
 80062e4:	f000 f8b2 	bl	800644c <_fwalk_reent>
 80062e8:	bd10      	pop	{r4, pc}
 80062ea:	46c0      	nop			; (mov r8, r8)
 80062ec:	08006289 	.word	0x08006289

080062f0 <std.isra.0>:
 80062f0:	2300      	movs	r3, #0
 80062f2:	b510      	push	{r4, lr}
 80062f4:	0004      	movs	r4, r0
 80062f6:	6003      	str	r3, [r0, #0]
 80062f8:	6043      	str	r3, [r0, #4]
 80062fa:	6083      	str	r3, [r0, #8]
 80062fc:	8181      	strh	r1, [r0, #12]
 80062fe:	6643      	str	r3, [r0, #100]	; 0x64
 8006300:	81c2      	strh	r2, [r0, #14]
 8006302:	6103      	str	r3, [r0, #16]
 8006304:	6143      	str	r3, [r0, #20]
 8006306:	6183      	str	r3, [r0, #24]
 8006308:	0019      	movs	r1, r3
 800630a:	2208      	movs	r2, #8
 800630c:	305c      	adds	r0, #92	; 0x5c
 800630e:	f7fe fafd 	bl	800490c <memset>
 8006312:	4b05      	ldr	r3, [pc, #20]	; (8006328 <std.isra.0+0x38>)
 8006314:	6224      	str	r4, [r4, #32]
 8006316:	6263      	str	r3, [r4, #36]	; 0x24
 8006318:	4b04      	ldr	r3, [pc, #16]	; (800632c <std.isra.0+0x3c>)
 800631a:	62a3      	str	r3, [r4, #40]	; 0x28
 800631c:	4b04      	ldr	r3, [pc, #16]	; (8006330 <std.isra.0+0x40>)
 800631e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006320:	4b04      	ldr	r3, [pc, #16]	; (8006334 <std.isra.0+0x44>)
 8006322:	6323      	str	r3, [r4, #48]	; 0x30
 8006324:	bd10      	pop	{r4, pc}
 8006326:	46c0      	nop			; (mov r8, r8)
 8006328:	08006f99 	.word	0x08006f99
 800632c:	08006fc1 	.word	0x08006fc1
 8006330:	08006ff9 	.word	0x08006ff9
 8006334:	08007025 	.word	0x08007025

08006338 <__sfmoreglue>:
 8006338:	b570      	push	{r4, r5, r6, lr}
 800633a:	2568      	movs	r5, #104	; 0x68
 800633c:	1e4a      	subs	r2, r1, #1
 800633e:	4355      	muls	r5, r2
 8006340:	000e      	movs	r6, r1
 8006342:	0029      	movs	r1, r5
 8006344:	3174      	adds	r1, #116	; 0x74
 8006346:	f000 fc73 	bl	8006c30 <_malloc_r>
 800634a:	1e04      	subs	r4, r0, #0
 800634c:	d008      	beq.n	8006360 <__sfmoreglue+0x28>
 800634e:	2100      	movs	r1, #0
 8006350:	002a      	movs	r2, r5
 8006352:	6001      	str	r1, [r0, #0]
 8006354:	6046      	str	r6, [r0, #4]
 8006356:	300c      	adds	r0, #12
 8006358:	60a0      	str	r0, [r4, #8]
 800635a:	3268      	adds	r2, #104	; 0x68
 800635c:	f7fe fad6 	bl	800490c <memset>
 8006360:	0020      	movs	r0, r4
 8006362:	bd70      	pop	{r4, r5, r6, pc}

08006364 <__sinit>:
 8006364:	6983      	ldr	r3, [r0, #24]
 8006366:	b513      	push	{r0, r1, r4, lr}
 8006368:	0004      	movs	r4, r0
 800636a:	2b00      	cmp	r3, #0
 800636c:	d128      	bne.n	80063c0 <__sinit+0x5c>
 800636e:	6483      	str	r3, [r0, #72]	; 0x48
 8006370:	64c3      	str	r3, [r0, #76]	; 0x4c
 8006372:	6503      	str	r3, [r0, #80]	; 0x50
 8006374:	4b13      	ldr	r3, [pc, #76]	; (80063c4 <__sinit+0x60>)
 8006376:	4a14      	ldr	r2, [pc, #80]	; (80063c8 <__sinit+0x64>)
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	6282      	str	r2, [r0, #40]	; 0x28
 800637c:	9301      	str	r3, [sp, #4]
 800637e:	4298      	cmp	r0, r3
 8006380:	d101      	bne.n	8006386 <__sinit+0x22>
 8006382:	2301      	movs	r3, #1
 8006384:	6183      	str	r3, [r0, #24]
 8006386:	0020      	movs	r0, r4
 8006388:	f000 f820 	bl	80063cc <__sfp>
 800638c:	6060      	str	r0, [r4, #4]
 800638e:	0020      	movs	r0, r4
 8006390:	f000 f81c 	bl	80063cc <__sfp>
 8006394:	60a0      	str	r0, [r4, #8]
 8006396:	0020      	movs	r0, r4
 8006398:	f000 f818 	bl	80063cc <__sfp>
 800639c:	2200      	movs	r2, #0
 800639e:	60e0      	str	r0, [r4, #12]
 80063a0:	2104      	movs	r1, #4
 80063a2:	6860      	ldr	r0, [r4, #4]
 80063a4:	f7ff ffa4 	bl	80062f0 <std.isra.0>
 80063a8:	2201      	movs	r2, #1
 80063aa:	2109      	movs	r1, #9
 80063ac:	68a0      	ldr	r0, [r4, #8]
 80063ae:	f7ff ff9f 	bl	80062f0 <std.isra.0>
 80063b2:	2202      	movs	r2, #2
 80063b4:	2112      	movs	r1, #18
 80063b6:	68e0      	ldr	r0, [r4, #12]
 80063b8:	f7ff ff9a 	bl	80062f0 <std.isra.0>
 80063bc:	2301      	movs	r3, #1
 80063be:	61a3      	str	r3, [r4, #24]
 80063c0:	bd13      	pop	{r0, r1, r4, pc}
 80063c2:	46c0      	nop			; (mov r8, r8)
 80063c4:	080072d0 	.word	0x080072d0
 80063c8:	080062e1 	.word	0x080062e1

080063cc <__sfp>:
 80063cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063ce:	4b1e      	ldr	r3, [pc, #120]	; (8006448 <__sfp+0x7c>)
 80063d0:	0007      	movs	r7, r0
 80063d2:	681e      	ldr	r6, [r3, #0]
 80063d4:	69b3      	ldr	r3, [r6, #24]
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d102      	bne.n	80063e0 <__sfp+0x14>
 80063da:	0030      	movs	r0, r6
 80063dc:	f7ff ffc2 	bl	8006364 <__sinit>
 80063e0:	3648      	adds	r6, #72	; 0x48
 80063e2:	68b4      	ldr	r4, [r6, #8]
 80063e4:	6873      	ldr	r3, [r6, #4]
 80063e6:	3b01      	subs	r3, #1
 80063e8:	d504      	bpl.n	80063f4 <__sfp+0x28>
 80063ea:	6833      	ldr	r3, [r6, #0]
 80063ec:	2b00      	cmp	r3, #0
 80063ee:	d007      	beq.n	8006400 <__sfp+0x34>
 80063f0:	6836      	ldr	r6, [r6, #0]
 80063f2:	e7f6      	b.n	80063e2 <__sfp+0x16>
 80063f4:	220c      	movs	r2, #12
 80063f6:	5ea5      	ldrsh	r5, [r4, r2]
 80063f8:	2d00      	cmp	r5, #0
 80063fa:	d00d      	beq.n	8006418 <__sfp+0x4c>
 80063fc:	3468      	adds	r4, #104	; 0x68
 80063fe:	e7f2      	b.n	80063e6 <__sfp+0x1a>
 8006400:	2104      	movs	r1, #4
 8006402:	0038      	movs	r0, r7
 8006404:	f7ff ff98 	bl	8006338 <__sfmoreglue>
 8006408:	6030      	str	r0, [r6, #0]
 800640a:	2800      	cmp	r0, #0
 800640c:	d1f0      	bne.n	80063f0 <__sfp+0x24>
 800640e:	230c      	movs	r3, #12
 8006410:	0004      	movs	r4, r0
 8006412:	603b      	str	r3, [r7, #0]
 8006414:	0020      	movs	r0, r4
 8006416:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006418:	2301      	movs	r3, #1
 800641a:	0020      	movs	r0, r4
 800641c:	425b      	negs	r3, r3
 800641e:	81e3      	strh	r3, [r4, #14]
 8006420:	3302      	adds	r3, #2
 8006422:	81a3      	strh	r3, [r4, #12]
 8006424:	6665      	str	r5, [r4, #100]	; 0x64
 8006426:	6025      	str	r5, [r4, #0]
 8006428:	60a5      	str	r5, [r4, #8]
 800642a:	6065      	str	r5, [r4, #4]
 800642c:	6125      	str	r5, [r4, #16]
 800642e:	6165      	str	r5, [r4, #20]
 8006430:	61a5      	str	r5, [r4, #24]
 8006432:	2208      	movs	r2, #8
 8006434:	0029      	movs	r1, r5
 8006436:	305c      	adds	r0, #92	; 0x5c
 8006438:	f7fe fa68 	bl	800490c <memset>
 800643c:	6365      	str	r5, [r4, #52]	; 0x34
 800643e:	63a5      	str	r5, [r4, #56]	; 0x38
 8006440:	64a5      	str	r5, [r4, #72]	; 0x48
 8006442:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006444:	e7e6      	b.n	8006414 <__sfp+0x48>
 8006446:	46c0      	nop			; (mov r8, r8)
 8006448:	080072d0 	.word	0x080072d0

0800644c <_fwalk_reent>:
 800644c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800644e:	0004      	movs	r4, r0
 8006450:	0007      	movs	r7, r0
 8006452:	2600      	movs	r6, #0
 8006454:	9101      	str	r1, [sp, #4]
 8006456:	3448      	adds	r4, #72	; 0x48
 8006458:	2c00      	cmp	r4, #0
 800645a:	d101      	bne.n	8006460 <_fwalk_reent+0x14>
 800645c:	0030      	movs	r0, r6
 800645e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006460:	6863      	ldr	r3, [r4, #4]
 8006462:	68a5      	ldr	r5, [r4, #8]
 8006464:	9300      	str	r3, [sp, #0]
 8006466:	9b00      	ldr	r3, [sp, #0]
 8006468:	3b01      	subs	r3, #1
 800646a:	9300      	str	r3, [sp, #0]
 800646c:	d501      	bpl.n	8006472 <_fwalk_reent+0x26>
 800646e:	6824      	ldr	r4, [r4, #0]
 8006470:	e7f2      	b.n	8006458 <_fwalk_reent+0xc>
 8006472:	89ab      	ldrh	r3, [r5, #12]
 8006474:	2b01      	cmp	r3, #1
 8006476:	d908      	bls.n	800648a <_fwalk_reent+0x3e>
 8006478:	220e      	movs	r2, #14
 800647a:	5eab      	ldrsh	r3, [r5, r2]
 800647c:	3301      	adds	r3, #1
 800647e:	d004      	beq.n	800648a <_fwalk_reent+0x3e>
 8006480:	0029      	movs	r1, r5
 8006482:	0038      	movs	r0, r7
 8006484:	9b01      	ldr	r3, [sp, #4]
 8006486:	4798      	blx	r3
 8006488:	4306      	orrs	r6, r0
 800648a:	3568      	adds	r5, #104	; 0x68
 800648c:	e7eb      	b.n	8006466 <_fwalk_reent+0x1a>
	...

08006490 <_localeconv_r>:
 8006490:	4b03      	ldr	r3, [pc, #12]	; (80064a0 <_localeconv_r+0x10>)
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	6a18      	ldr	r0, [r3, #32]
 8006496:	2800      	cmp	r0, #0
 8006498:	d100      	bne.n	800649c <_localeconv_r+0xc>
 800649a:	4802      	ldr	r0, [pc, #8]	; (80064a4 <_localeconv_r+0x14>)
 800649c:	30f0      	adds	r0, #240	; 0xf0
 800649e:	4770      	bx	lr
 80064a0:	2000000c 	.word	0x2000000c
 80064a4:	20000070 	.word	0x20000070

080064a8 <__swhatbuf_r>:
 80064a8:	b570      	push	{r4, r5, r6, lr}
 80064aa:	000e      	movs	r6, r1
 80064ac:	001d      	movs	r5, r3
 80064ae:	230e      	movs	r3, #14
 80064b0:	5ec9      	ldrsh	r1, [r1, r3]
 80064b2:	b090      	sub	sp, #64	; 0x40
 80064b4:	0014      	movs	r4, r2
 80064b6:	2900      	cmp	r1, #0
 80064b8:	da07      	bge.n	80064ca <__swhatbuf_r+0x22>
 80064ba:	2300      	movs	r3, #0
 80064bc:	602b      	str	r3, [r5, #0]
 80064be:	89b3      	ldrh	r3, [r6, #12]
 80064c0:	061b      	lsls	r3, r3, #24
 80064c2:	d411      	bmi.n	80064e8 <__swhatbuf_r+0x40>
 80064c4:	2380      	movs	r3, #128	; 0x80
 80064c6:	00db      	lsls	r3, r3, #3
 80064c8:	e00f      	b.n	80064ea <__swhatbuf_r+0x42>
 80064ca:	aa01      	add	r2, sp, #4
 80064cc:	f000 fdd6 	bl	800707c <_fstat_r>
 80064d0:	2800      	cmp	r0, #0
 80064d2:	dbf2      	blt.n	80064ba <__swhatbuf_r+0x12>
 80064d4:	22f0      	movs	r2, #240	; 0xf0
 80064d6:	9b02      	ldr	r3, [sp, #8]
 80064d8:	0212      	lsls	r2, r2, #8
 80064da:	4013      	ands	r3, r2
 80064dc:	4a05      	ldr	r2, [pc, #20]	; (80064f4 <__swhatbuf_r+0x4c>)
 80064de:	189b      	adds	r3, r3, r2
 80064e0:	425a      	negs	r2, r3
 80064e2:	4153      	adcs	r3, r2
 80064e4:	602b      	str	r3, [r5, #0]
 80064e6:	e7ed      	b.n	80064c4 <__swhatbuf_r+0x1c>
 80064e8:	2340      	movs	r3, #64	; 0x40
 80064ea:	2000      	movs	r0, #0
 80064ec:	6023      	str	r3, [r4, #0]
 80064ee:	b010      	add	sp, #64	; 0x40
 80064f0:	bd70      	pop	{r4, r5, r6, pc}
 80064f2:	46c0      	nop			; (mov r8, r8)
 80064f4:	ffffe000 	.word	0xffffe000

080064f8 <__smakebuf_r>:
 80064f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80064fa:	2602      	movs	r6, #2
 80064fc:	898b      	ldrh	r3, [r1, #12]
 80064fe:	0005      	movs	r5, r0
 8006500:	000c      	movs	r4, r1
 8006502:	4233      	tst	r3, r6
 8006504:	d006      	beq.n	8006514 <__smakebuf_r+0x1c>
 8006506:	0023      	movs	r3, r4
 8006508:	3347      	adds	r3, #71	; 0x47
 800650a:	6023      	str	r3, [r4, #0]
 800650c:	6123      	str	r3, [r4, #16]
 800650e:	2301      	movs	r3, #1
 8006510:	6163      	str	r3, [r4, #20]
 8006512:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006514:	ab01      	add	r3, sp, #4
 8006516:	466a      	mov	r2, sp
 8006518:	f7ff ffc6 	bl	80064a8 <__swhatbuf_r>
 800651c:	9900      	ldr	r1, [sp, #0]
 800651e:	0007      	movs	r7, r0
 8006520:	0028      	movs	r0, r5
 8006522:	f000 fb85 	bl	8006c30 <_malloc_r>
 8006526:	2800      	cmp	r0, #0
 8006528:	d108      	bne.n	800653c <__smakebuf_r+0x44>
 800652a:	220c      	movs	r2, #12
 800652c:	5ea3      	ldrsh	r3, [r4, r2]
 800652e:	059a      	lsls	r2, r3, #22
 8006530:	d4ef      	bmi.n	8006512 <__smakebuf_r+0x1a>
 8006532:	2203      	movs	r2, #3
 8006534:	4393      	bics	r3, r2
 8006536:	431e      	orrs	r6, r3
 8006538:	81a6      	strh	r6, [r4, #12]
 800653a:	e7e4      	b.n	8006506 <__smakebuf_r+0xe>
 800653c:	4b0f      	ldr	r3, [pc, #60]	; (800657c <__smakebuf_r+0x84>)
 800653e:	62ab      	str	r3, [r5, #40]	; 0x28
 8006540:	2380      	movs	r3, #128	; 0x80
 8006542:	89a2      	ldrh	r2, [r4, #12]
 8006544:	6020      	str	r0, [r4, #0]
 8006546:	4313      	orrs	r3, r2
 8006548:	81a3      	strh	r3, [r4, #12]
 800654a:	9b00      	ldr	r3, [sp, #0]
 800654c:	6120      	str	r0, [r4, #16]
 800654e:	6163      	str	r3, [r4, #20]
 8006550:	9b01      	ldr	r3, [sp, #4]
 8006552:	2b00      	cmp	r3, #0
 8006554:	d00d      	beq.n	8006572 <__smakebuf_r+0x7a>
 8006556:	230e      	movs	r3, #14
 8006558:	5ee1      	ldrsh	r1, [r4, r3]
 800655a:	0028      	movs	r0, r5
 800655c:	f000 fda0 	bl	80070a0 <_isatty_r>
 8006560:	2800      	cmp	r0, #0
 8006562:	d006      	beq.n	8006572 <__smakebuf_r+0x7a>
 8006564:	2203      	movs	r2, #3
 8006566:	89a3      	ldrh	r3, [r4, #12]
 8006568:	4393      	bics	r3, r2
 800656a:	001a      	movs	r2, r3
 800656c:	2301      	movs	r3, #1
 800656e:	4313      	orrs	r3, r2
 8006570:	81a3      	strh	r3, [r4, #12]
 8006572:	89a0      	ldrh	r0, [r4, #12]
 8006574:	4338      	orrs	r0, r7
 8006576:	81a0      	strh	r0, [r4, #12]
 8006578:	e7cb      	b.n	8006512 <__smakebuf_r+0x1a>
 800657a:	46c0      	nop			; (mov r8, r8)
 800657c:	080062e1 	.word	0x080062e1

08006580 <malloc>:
 8006580:	b510      	push	{r4, lr}
 8006582:	4b03      	ldr	r3, [pc, #12]	; (8006590 <malloc+0x10>)
 8006584:	0001      	movs	r1, r0
 8006586:	6818      	ldr	r0, [r3, #0]
 8006588:	f000 fb52 	bl	8006c30 <_malloc_r>
 800658c:	bd10      	pop	{r4, pc}
 800658e:	46c0      	nop			; (mov r8, r8)
 8006590:	2000000c 	.word	0x2000000c

08006594 <memchr>:
 8006594:	b2c9      	uxtb	r1, r1
 8006596:	1882      	adds	r2, r0, r2
 8006598:	4290      	cmp	r0, r2
 800659a:	d101      	bne.n	80065a0 <memchr+0xc>
 800659c:	2000      	movs	r0, #0
 800659e:	4770      	bx	lr
 80065a0:	7803      	ldrb	r3, [r0, #0]
 80065a2:	428b      	cmp	r3, r1
 80065a4:	d0fb      	beq.n	800659e <memchr+0xa>
 80065a6:	3001      	adds	r0, #1
 80065a8:	e7f6      	b.n	8006598 <memchr+0x4>

080065aa <memcpy>:
 80065aa:	2300      	movs	r3, #0
 80065ac:	b510      	push	{r4, lr}
 80065ae:	429a      	cmp	r2, r3
 80065b0:	d100      	bne.n	80065b4 <memcpy+0xa>
 80065b2:	bd10      	pop	{r4, pc}
 80065b4:	5ccc      	ldrb	r4, [r1, r3]
 80065b6:	54c4      	strb	r4, [r0, r3]
 80065b8:	3301      	adds	r3, #1
 80065ba:	e7f8      	b.n	80065ae <memcpy+0x4>

080065bc <_Balloc>:
 80065bc:	b570      	push	{r4, r5, r6, lr}
 80065be:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80065c0:	0004      	movs	r4, r0
 80065c2:	000d      	movs	r5, r1
 80065c4:	2e00      	cmp	r6, #0
 80065c6:	d107      	bne.n	80065d8 <_Balloc+0x1c>
 80065c8:	2010      	movs	r0, #16
 80065ca:	f7ff ffd9 	bl	8006580 <malloc>
 80065ce:	6260      	str	r0, [r4, #36]	; 0x24
 80065d0:	6046      	str	r6, [r0, #4]
 80065d2:	6086      	str	r6, [r0, #8]
 80065d4:	6006      	str	r6, [r0, #0]
 80065d6:	60c6      	str	r6, [r0, #12]
 80065d8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80065da:	68f3      	ldr	r3, [r6, #12]
 80065dc:	2b00      	cmp	r3, #0
 80065de:	d013      	beq.n	8006608 <_Balloc+0x4c>
 80065e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80065e2:	00aa      	lsls	r2, r5, #2
 80065e4:	68db      	ldr	r3, [r3, #12]
 80065e6:	189b      	adds	r3, r3, r2
 80065e8:	6818      	ldr	r0, [r3, #0]
 80065ea:	2800      	cmp	r0, #0
 80065ec:	d118      	bne.n	8006620 <_Balloc+0x64>
 80065ee:	2101      	movs	r1, #1
 80065f0:	000e      	movs	r6, r1
 80065f2:	40ae      	lsls	r6, r5
 80065f4:	1d72      	adds	r2, r6, #5
 80065f6:	0092      	lsls	r2, r2, #2
 80065f8:	0020      	movs	r0, r4
 80065fa:	f000 fac1 	bl	8006b80 <_calloc_r>
 80065fe:	2800      	cmp	r0, #0
 8006600:	d00c      	beq.n	800661c <_Balloc+0x60>
 8006602:	6045      	str	r5, [r0, #4]
 8006604:	6086      	str	r6, [r0, #8]
 8006606:	e00d      	b.n	8006624 <_Balloc+0x68>
 8006608:	2221      	movs	r2, #33	; 0x21
 800660a:	2104      	movs	r1, #4
 800660c:	0020      	movs	r0, r4
 800660e:	f000 fab7 	bl	8006b80 <_calloc_r>
 8006612:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006614:	60f0      	str	r0, [r6, #12]
 8006616:	68db      	ldr	r3, [r3, #12]
 8006618:	2b00      	cmp	r3, #0
 800661a:	d1e1      	bne.n	80065e0 <_Balloc+0x24>
 800661c:	2000      	movs	r0, #0
 800661e:	bd70      	pop	{r4, r5, r6, pc}
 8006620:	6802      	ldr	r2, [r0, #0]
 8006622:	601a      	str	r2, [r3, #0]
 8006624:	2300      	movs	r3, #0
 8006626:	6103      	str	r3, [r0, #16]
 8006628:	60c3      	str	r3, [r0, #12]
 800662a:	e7f8      	b.n	800661e <_Balloc+0x62>

0800662c <_Bfree>:
 800662c:	b570      	push	{r4, r5, r6, lr}
 800662e:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8006630:	0006      	movs	r6, r0
 8006632:	000d      	movs	r5, r1
 8006634:	2c00      	cmp	r4, #0
 8006636:	d107      	bne.n	8006648 <_Bfree+0x1c>
 8006638:	2010      	movs	r0, #16
 800663a:	f7ff ffa1 	bl	8006580 <malloc>
 800663e:	6270      	str	r0, [r6, #36]	; 0x24
 8006640:	6044      	str	r4, [r0, #4]
 8006642:	6084      	str	r4, [r0, #8]
 8006644:	6004      	str	r4, [r0, #0]
 8006646:	60c4      	str	r4, [r0, #12]
 8006648:	2d00      	cmp	r5, #0
 800664a:	d007      	beq.n	800665c <_Bfree+0x30>
 800664c:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800664e:	686a      	ldr	r2, [r5, #4]
 8006650:	68db      	ldr	r3, [r3, #12]
 8006652:	0092      	lsls	r2, r2, #2
 8006654:	189b      	adds	r3, r3, r2
 8006656:	681a      	ldr	r2, [r3, #0]
 8006658:	602a      	str	r2, [r5, #0]
 800665a:	601d      	str	r5, [r3, #0]
 800665c:	bd70      	pop	{r4, r5, r6, pc}

0800665e <__multadd>:
 800665e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006660:	001e      	movs	r6, r3
 8006662:	2314      	movs	r3, #20
 8006664:	469c      	mov	ip, r3
 8006666:	0007      	movs	r7, r0
 8006668:	000c      	movs	r4, r1
 800666a:	2000      	movs	r0, #0
 800666c:	690d      	ldr	r5, [r1, #16]
 800666e:	448c      	add	ip, r1
 8006670:	4663      	mov	r3, ip
 8006672:	8819      	ldrh	r1, [r3, #0]
 8006674:	681b      	ldr	r3, [r3, #0]
 8006676:	4351      	muls	r1, r2
 8006678:	0c1b      	lsrs	r3, r3, #16
 800667a:	4353      	muls	r3, r2
 800667c:	1989      	adds	r1, r1, r6
 800667e:	0c0e      	lsrs	r6, r1, #16
 8006680:	199b      	adds	r3, r3, r6
 8006682:	b289      	uxth	r1, r1
 8006684:	0c1e      	lsrs	r6, r3, #16
 8006686:	041b      	lsls	r3, r3, #16
 8006688:	185b      	adds	r3, r3, r1
 800668a:	4661      	mov	r1, ip
 800668c:	3001      	adds	r0, #1
 800668e:	c108      	stmia	r1!, {r3}
 8006690:	468c      	mov	ip, r1
 8006692:	4285      	cmp	r5, r0
 8006694:	dcec      	bgt.n	8006670 <__multadd+0x12>
 8006696:	2e00      	cmp	r6, #0
 8006698:	d01b      	beq.n	80066d2 <__multadd+0x74>
 800669a:	68a3      	ldr	r3, [r4, #8]
 800669c:	429d      	cmp	r5, r3
 800669e:	db12      	blt.n	80066c6 <__multadd+0x68>
 80066a0:	6863      	ldr	r3, [r4, #4]
 80066a2:	0038      	movs	r0, r7
 80066a4:	1c59      	adds	r1, r3, #1
 80066a6:	f7ff ff89 	bl	80065bc <_Balloc>
 80066aa:	0021      	movs	r1, r4
 80066ac:	6923      	ldr	r3, [r4, #16]
 80066ae:	9001      	str	r0, [sp, #4]
 80066b0:	1c9a      	adds	r2, r3, #2
 80066b2:	0092      	lsls	r2, r2, #2
 80066b4:	310c      	adds	r1, #12
 80066b6:	300c      	adds	r0, #12
 80066b8:	f7ff ff77 	bl	80065aa <memcpy>
 80066bc:	0021      	movs	r1, r4
 80066be:	0038      	movs	r0, r7
 80066c0:	f7ff ffb4 	bl	800662c <_Bfree>
 80066c4:	9c01      	ldr	r4, [sp, #4]
 80066c6:	1d2b      	adds	r3, r5, #4
 80066c8:	009b      	lsls	r3, r3, #2
 80066ca:	18e3      	adds	r3, r4, r3
 80066cc:	3501      	adds	r5, #1
 80066ce:	605e      	str	r6, [r3, #4]
 80066d0:	6125      	str	r5, [r4, #16]
 80066d2:	0020      	movs	r0, r4
 80066d4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

080066d6 <__hi0bits>:
 80066d6:	0003      	movs	r3, r0
 80066d8:	0c02      	lsrs	r2, r0, #16
 80066da:	2000      	movs	r0, #0
 80066dc:	4282      	cmp	r2, r0
 80066de:	d101      	bne.n	80066e4 <__hi0bits+0xe>
 80066e0:	041b      	lsls	r3, r3, #16
 80066e2:	3010      	adds	r0, #16
 80066e4:	0e1a      	lsrs	r2, r3, #24
 80066e6:	d101      	bne.n	80066ec <__hi0bits+0x16>
 80066e8:	3008      	adds	r0, #8
 80066ea:	021b      	lsls	r3, r3, #8
 80066ec:	0f1a      	lsrs	r2, r3, #28
 80066ee:	d101      	bne.n	80066f4 <__hi0bits+0x1e>
 80066f0:	3004      	adds	r0, #4
 80066f2:	011b      	lsls	r3, r3, #4
 80066f4:	0f9a      	lsrs	r2, r3, #30
 80066f6:	d101      	bne.n	80066fc <__hi0bits+0x26>
 80066f8:	3002      	adds	r0, #2
 80066fa:	009b      	lsls	r3, r3, #2
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	db03      	blt.n	8006708 <__hi0bits+0x32>
 8006700:	3001      	adds	r0, #1
 8006702:	005b      	lsls	r3, r3, #1
 8006704:	d400      	bmi.n	8006708 <__hi0bits+0x32>
 8006706:	2020      	movs	r0, #32
 8006708:	4770      	bx	lr

0800670a <__lo0bits>:
 800670a:	2207      	movs	r2, #7
 800670c:	6803      	ldr	r3, [r0, #0]
 800670e:	b510      	push	{r4, lr}
 8006710:	0001      	movs	r1, r0
 8006712:	401a      	ands	r2, r3
 8006714:	d00d      	beq.n	8006732 <__lo0bits+0x28>
 8006716:	2401      	movs	r4, #1
 8006718:	2000      	movs	r0, #0
 800671a:	4223      	tst	r3, r4
 800671c:	d105      	bne.n	800672a <__lo0bits+0x20>
 800671e:	3002      	adds	r0, #2
 8006720:	4203      	tst	r3, r0
 8006722:	d003      	beq.n	800672c <__lo0bits+0x22>
 8006724:	40e3      	lsrs	r3, r4
 8006726:	0020      	movs	r0, r4
 8006728:	600b      	str	r3, [r1, #0]
 800672a:	bd10      	pop	{r4, pc}
 800672c:	089b      	lsrs	r3, r3, #2
 800672e:	600b      	str	r3, [r1, #0]
 8006730:	e7fb      	b.n	800672a <__lo0bits+0x20>
 8006732:	b29c      	uxth	r4, r3
 8006734:	0010      	movs	r0, r2
 8006736:	2c00      	cmp	r4, #0
 8006738:	d101      	bne.n	800673e <__lo0bits+0x34>
 800673a:	2010      	movs	r0, #16
 800673c:	0c1b      	lsrs	r3, r3, #16
 800673e:	b2da      	uxtb	r2, r3
 8006740:	2a00      	cmp	r2, #0
 8006742:	d101      	bne.n	8006748 <__lo0bits+0x3e>
 8006744:	3008      	adds	r0, #8
 8006746:	0a1b      	lsrs	r3, r3, #8
 8006748:	071a      	lsls	r2, r3, #28
 800674a:	d101      	bne.n	8006750 <__lo0bits+0x46>
 800674c:	3004      	adds	r0, #4
 800674e:	091b      	lsrs	r3, r3, #4
 8006750:	079a      	lsls	r2, r3, #30
 8006752:	d101      	bne.n	8006758 <__lo0bits+0x4e>
 8006754:	3002      	adds	r0, #2
 8006756:	089b      	lsrs	r3, r3, #2
 8006758:	07da      	lsls	r2, r3, #31
 800675a:	d4e8      	bmi.n	800672e <__lo0bits+0x24>
 800675c:	085b      	lsrs	r3, r3, #1
 800675e:	d001      	beq.n	8006764 <__lo0bits+0x5a>
 8006760:	3001      	adds	r0, #1
 8006762:	e7e4      	b.n	800672e <__lo0bits+0x24>
 8006764:	2020      	movs	r0, #32
 8006766:	e7e0      	b.n	800672a <__lo0bits+0x20>

08006768 <__i2b>:
 8006768:	b510      	push	{r4, lr}
 800676a:	000c      	movs	r4, r1
 800676c:	2101      	movs	r1, #1
 800676e:	f7ff ff25 	bl	80065bc <_Balloc>
 8006772:	2301      	movs	r3, #1
 8006774:	6144      	str	r4, [r0, #20]
 8006776:	6103      	str	r3, [r0, #16]
 8006778:	bd10      	pop	{r4, pc}

0800677a <__multiply>:
 800677a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800677c:	690b      	ldr	r3, [r1, #16]
 800677e:	0015      	movs	r5, r2
 8006780:	6912      	ldr	r2, [r2, #16]
 8006782:	b089      	sub	sp, #36	; 0x24
 8006784:	000c      	movs	r4, r1
 8006786:	4293      	cmp	r3, r2
 8006788:	da01      	bge.n	800678e <__multiply+0x14>
 800678a:	002c      	movs	r4, r5
 800678c:	000d      	movs	r5, r1
 800678e:	6927      	ldr	r7, [r4, #16]
 8006790:	692e      	ldr	r6, [r5, #16]
 8006792:	68a2      	ldr	r2, [r4, #8]
 8006794:	19bb      	adds	r3, r7, r6
 8006796:	6861      	ldr	r1, [r4, #4]
 8006798:	9301      	str	r3, [sp, #4]
 800679a:	4293      	cmp	r3, r2
 800679c:	dd00      	ble.n	80067a0 <__multiply+0x26>
 800679e:	3101      	adds	r1, #1
 80067a0:	f7ff ff0c 	bl	80065bc <_Balloc>
 80067a4:	0003      	movs	r3, r0
 80067a6:	3314      	adds	r3, #20
 80067a8:	9300      	str	r3, [sp, #0]
 80067aa:	9a00      	ldr	r2, [sp, #0]
 80067ac:	19bb      	adds	r3, r7, r6
 80067ae:	4694      	mov	ip, r2
 80067b0:	009b      	lsls	r3, r3, #2
 80067b2:	449c      	add	ip, r3
 80067b4:	0013      	movs	r3, r2
 80067b6:	2200      	movs	r2, #0
 80067b8:	9004      	str	r0, [sp, #16]
 80067ba:	4563      	cmp	r3, ip
 80067bc:	d31c      	bcc.n	80067f8 <__multiply+0x7e>
 80067be:	002a      	movs	r2, r5
 80067c0:	3414      	adds	r4, #20
 80067c2:	00bf      	lsls	r7, r7, #2
 80067c4:	19e3      	adds	r3, r4, r7
 80067c6:	3214      	adds	r2, #20
 80067c8:	00b6      	lsls	r6, r6, #2
 80067ca:	9305      	str	r3, [sp, #20]
 80067cc:	1993      	adds	r3, r2, r6
 80067ce:	9402      	str	r4, [sp, #8]
 80067d0:	9306      	str	r3, [sp, #24]
 80067d2:	9b06      	ldr	r3, [sp, #24]
 80067d4:	429a      	cmp	r2, r3
 80067d6:	d311      	bcc.n	80067fc <__multiply+0x82>
 80067d8:	9b01      	ldr	r3, [sp, #4]
 80067da:	2b00      	cmp	r3, #0
 80067dc:	dd06      	ble.n	80067ec <__multiply+0x72>
 80067de:	2304      	movs	r3, #4
 80067e0:	425b      	negs	r3, r3
 80067e2:	449c      	add	ip, r3
 80067e4:	4663      	mov	r3, ip
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	2b00      	cmp	r3, #0
 80067ea:	d051      	beq.n	8006890 <__multiply+0x116>
 80067ec:	9b04      	ldr	r3, [sp, #16]
 80067ee:	9a01      	ldr	r2, [sp, #4]
 80067f0:	0018      	movs	r0, r3
 80067f2:	611a      	str	r2, [r3, #16]
 80067f4:	b009      	add	sp, #36	; 0x24
 80067f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80067f8:	c304      	stmia	r3!, {r2}
 80067fa:	e7de      	b.n	80067ba <__multiply+0x40>
 80067fc:	8814      	ldrh	r4, [r2, #0]
 80067fe:	2c00      	cmp	r4, #0
 8006800:	d01e      	beq.n	8006840 <__multiply+0xc6>
 8006802:	2600      	movs	r6, #0
 8006804:	9d00      	ldr	r5, [sp, #0]
 8006806:	9f02      	ldr	r7, [sp, #8]
 8006808:	cf01      	ldmia	r7!, {r0}
 800680a:	9507      	str	r5, [sp, #28]
 800680c:	cd08      	ldmia	r5!, {r3}
 800680e:	9303      	str	r3, [sp, #12]
 8006810:	b283      	uxth	r3, r0
 8006812:	4363      	muls	r3, r4
 8006814:	0019      	movs	r1, r3
 8006816:	466b      	mov	r3, sp
 8006818:	0c00      	lsrs	r0, r0, #16
 800681a:	899b      	ldrh	r3, [r3, #12]
 800681c:	4360      	muls	r0, r4
 800681e:	18cb      	adds	r3, r1, r3
 8006820:	9903      	ldr	r1, [sp, #12]
 8006822:	199b      	adds	r3, r3, r6
 8006824:	0c09      	lsrs	r1, r1, #16
 8006826:	1841      	adds	r1, r0, r1
 8006828:	0c18      	lsrs	r0, r3, #16
 800682a:	1809      	adds	r1, r1, r0
 800682c:	0c0e      	lsrs	r6, r1, #16
 800682e:	b29b      	uxth	r3, r3
 8006830:	0409      	lsls	r1, r1, #16
 8006832:	430b      	orrs	r3, r1
 8006834:	9907      	ldr	r1, [sp, #28]
 8006836:	600b      	str	r3, [r1, #0]
 8006838:	9b05      	ldr	r3, [sp, #20]
 800683a:	42bb      	cmp	r3, r7
 800683c:	d8e4      	bhi.n	8006808 <__multiply+0x8e>
 800683e:	602e      	str	r6, [r5, #0]
 8006840:	6813      	ldr	r3, [r2, #0]
 8006842:	0c1b      	lsrs	r3, r3, #16
 8006844:	9303      	str	r3, [sp, #12]
 8006846:	d01e      	beq.n	8006886 <__multiply+0x10c>
 8006848:	2600      	movs	r6, #0
 800684a:	9b00      	ldr	r3, [sp, #0]
 800684c:	9c02      	ldr	r4, [sp, #8]
 800684e:	681b      	ldr	r3, [r3, #0]
 8006850:	9800      	ldr	r0, [sp, #0]
 8006852:	0007      	movs	r7, r0
 8006854:	8821      	ldrh	r1, [r4, #0]
 8006856:	9d03      	ldr	r5, [sp, #12]
 8006858:	b29b      	uxth	r3, r3
 800685a:	4369      	muls	r1, r5
 800685c:	c820      	ldmia	r0!, {r5}
 800685e:	0c2d      	lsrs	r5, r5, #16
 8006860:	1949      	adds	r1, r1, r5
 8006862:	198e      	adds	r6, r1, r6
 8006864:	0431      	lsls	r1, r6, #16
 8006866:	430b      	orrs	r3, r1
 8006868:	603b      	str	r3, [r7, #0]
 800686a:	cc08      	ldmia	r4!, {r3}
 800686c:	9903      	ldr	r1, [sp, #12]
 800686e:	0c1b      	lsrs	r3, r3, #16
 8006870:	434b      	muls	r3, r1
 8006872:	6879      	ldr	r1, [r7, #4]
 8006874:	0c36      	lsrs	r6, r6, #16
 8006876:	b289      	uxth	r1, r1
 8006878:	185b      	adds	r3, r3, r1
 800687a:	9905      	ldr	r1, [sp, #20]
 800687c:	199b      	adds	r3, r3, r6
 800687e:	0c1e      	lsrs	r6, r3, #16
 8006880:	42a1      	cmp	r1, r4
 8006882:	d8e6      	bhi.n	8006852 <__multiply+0xd8>
 8006884:	6003      	str	r3, [r0, #0]
 8006886:	9b00      	ldr	r3, [sp, #0]
 8006888:	3204      	adds	r2, #4
 800688a:	3304      	adds	r3, #4
 800688c:	9300      	str	r3, [sp, #0]
 800688e:	e7a0      	b.n	80067d2 <__multiply+0x58>
 8006890:	9b01      	ldr	r3, [sp, #4]
 8006892:	3b01      	subs	r3, #1
 8006894:	9301      	str	r3, [sp, #4]
 8006896:	e79f      	b.n	80067d8 <__multiply+0x5e>

08006898 <__pow5mult>:
 8006898:	2303      	movs	r3, #3
 800689a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800689c:	4013      	ands	r3, r2
 800689e:	0005      	movs	r5, r0
 80068a0:	000e      	movs	r6, r1
 80068a2:	0014      	movs	r4, r2
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d008      	beq.n	80068ba <__pow5mult+0x22>
 80068a8:	4922      	ldr	r1, [pc, #136]	; (8006934 <__pow5mult+0x9c>)
 80068aa:	3b01      	subs	r3, #1
 80068ac:	009a      	lsls	r2, r3, #2
 80068ae:	5852      	ldr	r2, [r2, r1]
 80068b0:	2300      	movs	r3, #0
 80068b2:	0031      	movs	r1, r6
 80068b4:	f7ff fed3 	bl	800665e <__multadd>
 80068b8:	0006      	movs	r6, r0
 80068ba:	10a3      	asrs	r3, r4, #2
 80068bc:	9301      	str	r3, [sp, #4]
 80068be:	d036      	beq.n	800692e <__pow5mult+0x96>
 80068c0:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80068c2:	2c00      	cmp	r4, #0
 80068c4:	d107      	bne.n	80068d6 <__pow5mult+0x3e>
 80068c6:	2010      	movs	r0, #16
 80068c8:	f7ff fe5a 	bl	8006580 <malloc>
 80068cc:	6268      	str	r0, [r5, #36]	; 0x24
 80068ce:	6044      	str	r4, [r0, #4]
 80068d0:	6084      	str	r4, [r0, #8]
 80068d2:	6004      	str	r4, [r0, #0]
 80068d4:	60c4      	str	r4, [r0, #12]
 80068d6:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 80068d8:	68bc      	ldr	r4, [r7, #8]
 80068da:	2c00      	cmp	r4, #0
 80068dc:	d107      	bne.n	80068ee <__pow5mult+0x56>
 80068de:	4916      	ldr	r1, [pc, #88]	; (8006938 <__pow5mult+0xa0>)
 80068e0:	0028      	movs	r0, r5
 80068e2:	f7ff ff41 	bl	8006768 <__i2b>
 80068e6:	2300      	movs	r3, #0
 80068e8:	0004      	movs	r4, r0
 80068ea:	60b8      	str	r0, [r7, #8]
 80068ec:	6003      	str	r3, [r0, #0]
 80068ee:	2201      	movs	r2, #1
 80068f0:	9b01      	ldr	r3, [sp, #4]
 80068f2:	4213      	tst	r3, r2
 80068f4:	d00a      	beq.n	800690c <__pow5mult+0x74>
 80068f6:	0031      	movs	r1, r6
 80068f8:	0022      	movs	r2, r4
 80068fa:	0028      	movs	r0, r5
 80068fc:	f7ff ff3d 	bl	800677a <__multiply>
 8006900:	0007      	movs	r7, r0
 8006902:	0031      	movs	r1, r6
 8006904:	0028      	movs	r0, r5
 8006906:	f7ff fe91 	bl	800662c <_Bfree>
 800690a:	003e      	movs	r6, r7
 800690c:	9b01      	ldr	r3, [sp, #4]
 800690e:	105b      	asrs	r3, r3, #1
 8006910:	9301      	str	r3, [sp, #4]
 8006912:	d00c      	beq.n	800692e <__pow5mult+0x96>
 8006914:	6820      	ldr	r0, [r4, #0]
 8006916:	2800      	cmp	r0, #0
 8006918:	d107      	bne.n	800692a <__pow5mult+0x92>
 800691a:	0022      	movs	r2, r4
 800691c:	0021      	movs	r1, r4
 800691e:	0028      	movs	r0, r5
 8006920:	f7ff ff2b 	bl	800677a <__multiply>
 8006924:	2300      	movs	r3, #0
 8006926:	6020      	str	r0, [r4, #0]
 8006928:	6003      	str	r3, [r0, #0]
 800692a:	0004      	movs	r4, r0
 800692c:	e7df      	b.n	80068ee <__pow5mult+0x56>
 800692e:	0030      	movs	r0, r6
 8006930:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006932:	46c0      	nop			; (mov r8, r8)
 8006934:	08007468 	.word	0x08007468
 8006938:	00000271 	.word	0x00000271

0800693c <__lshift>:
 800693c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800693e:	000d      	movs	r5, r1
 8006940:	0017      	movs	r7, r2
 8006942:	692b      	ldr	r3, [r5, #16]
 8006944:	1154      	asrs	r4, r2, #5
 8006946:	b085      	sub	sp, #20
 8006948:	18e3      	adds	r3, r4, r3
 800694a:	9302      	str	r3, [sp, #8]
 800694c:	3301      	adds	r3, #1
 800694e:	9301      	str	r3, [sp, #4]
 8006950:	6849      	ldr	r1, [r1, #4]
 8006952:	68ab      	ldr	r3, [r5, #8]
 8006954:	9003      	str	r0, [sp, #12]
 8006956:	9a01      	ldr	r2, [sp, #4]
 8006958:	4293      	cmp	r3, r2
 800695a:	db34      	blt.n	80069c6 <__lshift+0x8a>
 800695c:	9803      	ldr	r0, [sp, #12]
 800695e:	f7ff fe2d 	bl	80065bc <_Balloc>
 8006962:	2300      	movs	r3, #0
 8006964:	0002      	movs	r2, r0
 8006966:	0006      	movs	r6, r0
 8006968:	0019      	movs	r1, r3
 800696a:	3214      	adds	r2, #20
 800696c:	42a3      	cmp	r3, r4
 800696e:	db2d      	blt.n	80069cc <__lshift+0x90>
 8006970:	43e3      	mvns	r3, r4
 8006972:	17db      	asrs	r3, r3, #31
 8006974:	401c      	ands	r4, r3
 8006976:	002b      	movs	r3, r5
 8006978:	211f      	movs	r1, #31
 800697a:	00a4      	lsls	r4, r4, #2
 800697c:	1914      	adds	r4, r2, r4
 800697e:	692a      	ldr	r2, [r5, #16]
 8006980:	3314      	adds	r3, #20
 8006982:	0092      	lsls	r2, r2, #2
 8006984:	189a      	adds	r2, r3, r2
 8006986:	400f      	ands	r7, r1
 8006988:	d024      	beq.n	80069d4 <__lshift+0x98>
 800698a:	3101      	adds	r1, #1
 800698c:	1bc9      	subs	r1, r1, r7
 800698e:	468c      	mov	ip, r1
 8006990:	2100      	movs	r1, #0
 8006992:	6818      	ldr	r0, [r3, #0]
 8006994:	40b8      	lsls	r0, r7
 8006996:	4301      	orrs	r1, r0
 8006998:	4660      	mov	r0, ip
 800699a:	6021      	str	r1, [r4, #0]
 800699c:	cb02      	ldmia	r3!, {r1}
 800699e:	3404      	adds	r4, #4
 80069a0:	40c1      	lsrs	r1, r0
 80069a2:	429a      	cmp	r2, r3
 80069a4:	d8f5      	bhi.n	8006992 <__lshift+0x56>
 80069a6:	6021      	str	r1, [r4, #0]
 80069a8:	2900      	cmp	r1, #0
 80069aa:	d002      	beq.n	80069b2 <__lshift+0x76>
 80069ac:	9b02      	ldr	r3, [sp, #8]
 80069ae:	3302      	adds	r3, #2
 80069b0:	9301      	str	r3, [sp, #4]
 80069b2:	9b01      	ldr	r3, [sp, #4]
 80069b4:	9803      	ldr	r0, [sp, #12]
 80069b6:	3b01      	subs	r3, #1
 80069b8:	6133      	str	r3, [r6, #16]
 80069ba:	0029      	movs	r1, r5
 80069bc:	f7ff fe36 	bl	800662c <_Bfree>
 80069c0:	0030      	movs	r0, r6
 80069c2:	b005      	add	sp, #20
 80069c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80069c6:	3101      	adds	r1, #1
 80069c8:	005b      	lsls	r3, r3, #1
 80069ca:	e7c4      	b.n	8006956 <__lshift+0x1a>
 80069cc:	0098      	lsls	r0, r3, #2
 80069ce:	5011      	str	r1, [r2, r0]
 80069d0:	3301      	adds	r3, #1
 80069d2:	e7cb      	b.n	800696c <__lshift+0x30>
 80069d4:	cb02      	ldmia	r3!, {r1}
 80069d6:	c402      	stmia	r4!, {r1}
 80069d8:	429a      	cmp	r2, r3
 80069da:	d8fb      	bhi.n	80069d4 <__lshift+0x98>
 80069dc:	e7e9      	b.n	80069b2 <__lshift+0x76>

080069de <__mcmp>:
 80069de:	690a      	ldr	r2, [r1, #16]
 80069e0:	6903      	ldr	r3, [r0, #16]
 80069e2:	b530      	push	{r4, r5, lr}
 80069e4:	1a9b      	subs	r3, r3, r2
 80069e6:	d10e      	bne.n	8006a06 <__mcmp+0x28>
 80069e8:	0092      	lsls	r2, r2, #2
 80069ea:	3014      	adds	r0, #20
 80069ec:	3114      	adds	r1, #20
 80069ee:	1884      	adds	r4, r0, r2
 80069f0:	1889      	adds	r1, r1, r2
 80069f2:	3c04      	subs	r4, #4
 80069f4:	3904      	subs	r1, #4
 80069f6:	6822      	ldr	r2, [r4, #0]
 80069f8:	680d      	ldr	r5, [r1, #0]
 80069fa:	42aa      	cmp	r2, r5
 80069fc:	d005      	beq.n	8006a0a <__mcmp+0x2c>
 80069fe:	42aa      	cmp	r2, r5
 8006a00:	4192      	sbcs	r2, r2
 8006a02:	2301      	movs	r3, #1
 8006a04:	4313      	orrs	r3, r2
 8006a06:	0018      	movs	r0, r3
 8006a08:	bd30      	pop	{r4, r5, pc}
 8006a0a:	42a0      	cmp	r0, r4
 8006a0c:	d3f1      	bcc.n	80069f2 <__mcmp+0x14>
 8006a0e:	e7fa      	b.n	8006a06 <__mcmp+0x28>

08006a10 <__mdiff>:
 8006a10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a12:	000d      	movs	r5, r1
 8006a14:	b085      	sub	sp, #20
 8006a16:	0007      	movs	r7, r0
 8006a18:	0011      	movs	r1, r2
 8006a1a:	0028      	movs	r0, r5
 8006a1c:	0014      	movs	r4, r2
 8006a1e:	f7ff ffde 	bl	80069de <__mcmp>
 8006a22:	1e06      	subs	r6, r0, #0
 8006a24:	d108      	bne.n	8006a38 <__mdiff+0x28>
 8006a26:	0001      	movs	r1, r0
 8006a28:	0038      	movs	r0, r7
 8006a2a:	f7ff fdc7 	bl	80065bc <_Balloc>
 8006a2e:	2301      	movs	r3, #1
 8006a30:	6146      	str	r6, [r0, #20]
 8006a32:	6103      	str	r3, [r0, #16]
 8006a34:	b005      	add	sp, #20
 8006a36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006a38:	2301      	movs	r3, #1
 8006a3a:	9301      	str	r3, [sp, #4]
 8006a3c:	2800      	cmp	r0, #0
 8006a3e:	db04      	blt.n	8006a4a <__mdiff+0x3a>
 8006a40:	0023      	movs	r3, r4
 8006a42:	002c      	movs	r4, r5
 8006a44:	001d      	movs	r5, r3
 8006a46:	2300      	movs	r3, #0
 8006a48:	9301      	str	r3, [sp, #4]
 8006a4a:	6861      	ldr	r1, [r4, #4]
 8006a4c:	0038      	movs	r0, r7
 8006a4e:	f7ff fdb5 	bl	80065bc <_Balloc>
 8006a52:	002f      	movs	r7, r5
 8006a54:	2200      	movs	r2, #0
 8006a56:	9b01      	ldr	r3, [sp, #4]
 8006a58:	6926      	ldr	r6, [r4, #16]
 8006a5a:	60c3      	str	r3, [r0, #12]
 8006a5c:	3414      	adds	r4, #20
 8006a5e:	00b3      	lsls	r3, r6, #2
 8006a60:	18e3      	adds	r3, r4, r3
 8006a62:	9302      	str	r3, [sp, #8]
 8006a64:	692b      	ldr	r3, [r5, #16]
 8006a66:	3714      	adds	r7, #20
 8006a68:	009b      	lsls	r3, r3, #2
 8006a6a:	18fb      	adds	r3, r7, r3
 8006a6c:	9303      	str	r3, [sp, #12]
 8006a6e:	0003      	movs	r3, r0
 8006a70:	4694      	mov	ip, r2
 8006a72:	3314      	adds	r3, #20
 8006a74:	cc20      	ldmia	r4!, {r5}
 8006a76:	cf04      	ldmia	r7!, {r2}
 8006a78:	9201      	str	r2, [sp, #4]
 8006a7a:	b2aa      	uxth	r2, r5
 8006a7c:	4494      	add	ip, r2
 8006a7e:	466a      	mov	r2, sp
 8006a80:	4661      	mov	r1, ip
 8006a82:	8892      	ldrh	r2, [r2, #4]
 8006a84:	0c2d      	lsrs	r5, r5, #16
 8006a86:	1a8a      	subs	r2, r1, r2
 8006a88:	9901      	ldr	r1, [sp, #4]
 8006a8a:	0c09      	lsrs	r1, r1, #16
 8006a8c:	1a69      	subs	r1, r5, r1
 8006a8e:	1415      	asrs	r5, r2, #16
 8006a90:	1949      	adds	r1, r1, r5
 8006a92:	140d      	asrs	r5, r1, #16
 8006a94:	b292      	uxth	r2, r2
 8006a96:	0409      	lsls	r1, r1, #16
 8006a98:	430a      	orrs	r2, r1
 8006a9a:	601a      	str	r2, [r3, #0]
 8006a9c:	9a03      	ldr	r2, [sp, #12]
 8006a9e:	46ac      	mov	ip, r5
 8006aa0:	3304      	adds	r3, #4
 8006aa2:	42ba      	cmp	r2, r7
 8006aa4:	d8e6      	bhi.n	8006a74 <__mdiff+0x64>
 8006aa6:	9902      	ldr	r1, [sp, #8]
 8006aa8:	001a      	movs	r2, r3
 8006aaa:	428c      	cmp	r4, r1
 8006aac:	d305      	bcc.n	8006aba <__mdiff+0xaa>
 8006aae:	3a04      	subs	r2, #4
 8006ab0:	6813      	ldr	r3, [r2, #0]
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	d00e      	beq.n	8006ad4 <__mdiff+0xc4>
 8006ab6:	6106      	str	r6, [r0, #16]
 8006ab8:	e7bc      	b.n	8006a34 <__mdiff+0x24>
 8006aba:	cc04      	ldmia	r4!, {r2}
 8006abc:	b291      	uxth	r1, r2
 8006abe:	4461      	add	r1, ip
 8006ac0:	140d      	asrs	r5, r1, #16
 8006ac2:	0c12      	lsrs	r2, r2, #16
 8006ac4:	1952      	adds	r2, r2, r5
 8006ac6:	1415      	asrs	r5, r2, #16
 8006ac8:	b289      	uxth	r1, r1
 8006aca:	0412      	lsls	r2, r2, #16
 8006acc:	430a      	orrs	r2, r1
 8006ace:	46ac      	mov	ip, r5
 8006ad0:	c304      	stmia	r3!, {r2}
 8006ad2:	e7e8      	b.n	8006aa6 <__mdiff+0x96>
 8006ad4:	3e01      	subs	r6, #1
 8006ad6:	e7ea      	b.n	8006aae <__mdiff+0x9e>

08006ad8 <__d2b>:
 8006ad8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006ada:	001d      	movs	r5, r3
 8006adc:	2101      	movs	r1, #1
 8006ade:	9f08      	ldr	r7, [sp, #32]
 8006ae0:	0014      	movs	r4, r2
 8006ae2:	f7ff fd6b 	bl	80065bc <_Balloc>
 8006ae6:	032b      	lsls	r3, r5, #12
 8006ae8:	006d      	lsls	r5, r5, #1
 8006aea:	0006      	movs	r6, r0
 8006aec:	0b1b      	lsrs	r3, r3, #12
 8006aee:	0d6d      	lsrs	r5, r5, #21
 8006af0:	d124      	bne.n	8006b3c <__d2b+0x64>
 8006af2:	9301      	str	r3, [sp, #4]
 8006af4:	2c00      	cmp	r4, #0
 8006af6:	d027      	beq.n	8006b48 <__d2b+0x70>
 8006af8:	4668      	mov	r0, sp
 8006afa:	9400      	str	r4, [sp, #0]
 8006afc:	f7ff fe05 	bl	800670a <__lo0bits>
 8006b00:	9c00      	ldr	r4, [sp, #0]
 8006b02:	2800      	cmp	r0, #0
 8006b04:	d01e      	beq.n	8006b44 <__d2b+0x6c>
 8006b06:	9b01      	ldr	r3, [sp, #4]
 8006b08:	2120      	movs	r1, #32
 8006b0a:	001a      	movs	r2, r3
 8006b0c:	1a09      	subs	r1, r1, r0
 8006b0e:	408a      	lsls	r2, r1
 8006b10:	40c3      	lsrs	r3, r0
 8006b12:	4322      	orrs	r2, r4
 8006b14:	6172      	str	r2, [r6, #20]
 8006b16:	9301      	str	r3, [sp, #4]
 8006b18:	9c01      	ldr	r4, [sp, #4]
 8006b1a:	61b4      	str	r4, [r6, #24]
 8006b1c:	1e63      	subs	r3, r4, #1
 8006b1e:	419c      	sbcs	r4, r3
 8006b20:	3401      	adds	r4, #1
 8006b22:	6134      	str	r4, [r6, #16]
 8006b24:	2d00      	cmp	r5, #0
 8006b26:	d018      	beq.n	8006b5a <__d2b+0x82>
 8006b28:	4b12      	ldr	r3, [pc, #72]	; (8006b74 <__d2b+0x9c>)
 8006b2a:	18ed      	adds	r5, r5, r3
 8006b2c:	2335      	movs	r3, #53	; 0x35
 8006b2e:	182d      	adds	r5, r5, r0
 8006b30:	603d      	str	r5, [r7, #0]
 8006b32:	1a18      	subs	r0, r3, r0
 8006b34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b36:	6018      	str	r0, [r3, #0]
 8006b38:	0030      	movs	r0, r6
 8006b3a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006b3c:	2280      	movs	r2, #128	; 0x80
 8006b3e:	0352      	lsls	r2, r2, #13
 8006b40:	4313      	orrs	r3, r2
 8006b42:	e7d6      	b.n	8006af2 <__d2b+0x1a>
 8006b44:	6174      	str	r4, [r6, #20]
 8006b46:	e7e7      	b.n	8006b18 <__d2b+0x40>
 8006b48:	a801      	add	r0, sp, #4
 8006b4a:	f7ff fdde 	bl	800670a <__lo0bits>
 8006b4e:	2401      	movs	r4, #1
 8006b50:	9b01      	ldr	r3, [sp, #4]
 8006b52:	6134      	str	r4, [r6, #16]
 8006b54:	6173      	str	r3, [r6, #20]
 8006b56:	3020      	adds	r0, #32
 8006b58:	e7e4      	b.n	8006b24 <__d2b+0x4c>
 8006b5a:	4b07      	ldr	r3, [pc, #28]	; (8006b78 <__d2b+0xa0>)
 8006b5c:	18c0      	adds	r0, r0, r3
 8006b5e:	4b07      	ldr	r3, [pc, #28]	; (8006b7c <__d2b+0xa4>)
 8006b60:	6038      	str	r0, [r7, #0]
 8006b62:	18e3      	adds	r3, r4, r3
 8006b64:	009b      	lsls	r3, r3, #2
 8006b66:	18f3      	adds	r3, r6, r3
 8006b68:	6958      	ldr	r0, [r3, #20]
 8006b6a:	f7ff fdb4 	bl	80066d6 <__hi0bits>
 8006b6e:	0164      	lsls	r4, r4, #5
 8006b70:	1a20      	subs	r0, r4, r0
 8006b72:	e7df      	b.n	8006b34 <__d2b+0x5c>
 8006b74:	fffffbcd 	.word	0xfffffbcd
 8006b78:	fffffbce 	.word	0xfffffbce
 8006b7c:	3fffffff 	.word	0x3fffffff

08006b80 <_calloc_r>:
 8006b80:	434a      	muls	r2, r1
 8006b82:	b570      	push	{r4, r5, r6, lr}
 8006b84:	0011      	movs	r1, r2
 8006b86:	0014      	movs	r4, r2
 8006b88:	f000 f852 	bl	8006c30 <_malloc_r>
 8006b8c:	1e05      	subs	r5, r0, #0
 8006b8e:	d003      	beq.n	8006b98 <_calloc_r+0x18>
 8006b90:	0022      	movs	r2, r4
 8006b92:	2100      	movs	r1, #0
 8006b94:	f7fd feba 	bl	800490c <memset>
 8006b98:	0028      	movs	r0, r5
 8006b9a:	bd70      	pop	{r4, r5, r6, pc}

08006b9c <_free_r>:
 8006b9c:	b570      	push	{r4, r5, r6, lr}
 8006b9e:	0005      	movs	r5, r0
 8006ba0:	2900      	cmp	r1, #0
 8006ba2:	d010      	beq.n	8006bc6 <_free_r+0x2a>
 8006ba4:	1f0c      	subs	r4, r1, #4
 8006ba6:	6823      	ldr	r3, [r4, #0]
 8006ba8:	2b00      	cmp	r3, #0
 8006baa:	da00      	bge.n	8006bae <_free_r+0x12>
 8006bac:	18e4      	adds	r4, r4, r3
 8006bae:	0028      	movs	r0, r5
 8006bb0:	f000 faae 	bl	8007110 <__malloc_lock>
 8006bb4:	4a1d      	ldr	r2, [pc, #116]	; (8006c2c <_free_r+0x90>)
 8006bb6:	6813      	ldr	r3, [r2, #0]
 8006bb8:	2b00      	cmp	r3, #0
 8006bba:	d105      	bne.n	8006bc8 <_free_r+0x2c>
 8006bbc:	6063      	str	r3, [r4, #4]
 8006bbe:	6014      	str	r4, [r2, #0]
 8006bc0:	0028      	movs	r0, r5
 8006bc2:	f000 faa6 	bl	8007112 <__malloc_unlock>
 8006bc6:	bd70      	pop	{r4, r5, r6, pc}
 8006bc8:	42a3      	cmp	r3, r4
 8006bca:	d909      	bls.n	8006be0 <_free_r+0x44>
 8006bcc:	6821      	ldr	r1, [r4, #0]
 8006bce:	1860      	adds	r0, r4, r1
 8006bd0:	4283      	cmp	r3, r0
 8006bd2:	d1f3      	bne.n	8006bbc <_free_r+0x20>
 8006bd4:	6818      	ldr	r0, [r3, #0]
 8006bd6:	685b      	ldr	r3, [r3, #4]
 8006bd8:	1841      	adds	r1, r0, r1
 8006bda:	6021      	str	r1, [r4, #0]
 8006bdc:	e7ee      	b.n	8006bbc <_free_r+0x20>
 8006bde:	0013      	movs	r3, r2
 8006be0:	685a      	ldr	r2, [r3, #4]
 8006be2:	2a00      	cmp	r2, #0
 8006be4:	d001      	beq.n	8006bea <_free_r+0x4e>
 8006be6:	42a2      	cmp	r2, r4
 8006be8:	d9f9      	bls.n	8006bde <_free_r+0x42>
 8006bea:	6819      	ldr	r1, [r3, #0]
 8006bec:	1858      	adds	r0, r3, r1
 8006bee:	42a0      	cmp	r0, r4
 8006bf0:	d10b      	bne.n	8006c0a <_free_r+0x6e>
 8006bf2:	6820      	ldr	r0, [r4, #0]
 8006bf4:	1809      	adds	r1, r1, r0
 8006bf6:	1858      	adds	r0, r3, r1
 8006bf8:	6019      	str	r1, [r3, #0]
 8006bfa:	4282      	cmp	r2, r0
 8006bfc:	d1e0      	bne.n	8006bc0 <_free_r+0x24>
 8006bfe:	6810      	ldr	r0, [r2, #0]
 8006c00:	6852      	ldr	r2, [r2, #4]
 8006c02:	1841      	adds	r1, r0, r1
 8006c04:	6019      	str	r1, [r3, #0]
 8006c06:	605a      	str	r2, [r3, #4]
 8006c08:	e7da      	b.n	8006bc0 <_free_r+0x24>
 8006c0a:	42a0      	cmp	r0, r4
 8006c0c:	d902      	bls.n	8006c14 <_free_r+0x78>
 8006c0e:	230c      	movs	r3, #12
 8006c10:	602b      	str	r3, [r5, #0]
 8006c12:	e7d5      	b.n	8006bc0 <_free_r+0x24>
 8006c14:	6821      	ldr	r1, [r4, #0]
 8006c16:	1860      	adds	r0, r4, r1
 8006c18:	4282      	cmp	r2, r0
 8006c1a:	d103      	bne.n	8006c24 <_free_r+0x88>
 8006c1c:	6810      	ldr	r0, [r2, #0]
 8006c1e:	6852      	ldr	r2, [r2, #4]
 8006c20:	1841      	adds	r1, r0, r1
 8006c22:	6021      	str	r1, [r4, #0]
 8006c24:	6062      	str	r2, [r4, #4]
 8006c26:	605c      	str	r4, [r3, #4]
 8006c28:	e7ca      	b.n	8006bc0 <_free_r+0x24>
 8006c2a:	46c0      	nop			; (mov r8, r8)
 8006c2c:	200001fc 	.word	0x200001fc

08006c30 <_malloc_r>:
 8006c30:	2303      	movs	r3, #3
 8006c32:	b570      	push	{r4, r5, r6, lr}
 8006c34:	1ccd      	adds	r5, r1, #3
 8006c36:	439d      	bics	r5, r3
 8006c38:	3508      	adds	r5, #8
 8006c3a:	0006      	movs	r6, r0
 8006c3c:	2d0c      	cmp	r5, #12
 8006c3e:	d21e      	bcs.n	8006c7e <_malloc_r+0x4e>
 8006c40:	250c      	movs	r5, #12
 8006c42:	42a9      	cmp	r1, r5
 8006c44:	d81d      	bhi.n	8006c82 <_malloc_r+0x52>
 8006c46:	0030      	movs	r0, r6
 8006c48:	f000 fa62 	bl	8007110 <__malloc_lock>
 8006c4c:	4a25      	ldr	r2, [pc, #148]	; (8006ce4 <_malloc_r+0xb4>)
 8006c4e:	6814      	ldr	r4, [r2, #0]
 8006c50:	0021      	movs	r1, r4
 8006c52:	2900      	cmp	r1, #0
 8006c54:	d119      	bne.n	8006c8a <_malloc_r+0x5a>
 8006c56:	4c24      	ldr	r4, [pc, #144]	; (8006ce8 <_malloc_r+0xb8>)
 8006c58:	6823      	ldr	r3, [r4, #0]
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	d103      	bne.n	8006c66 <_malloc_r+0x36>
 8006c5e:	0030      	movs	r0, r6
 8006c60:	f000 f988 	bl	8006f74 <_sbrk_r>
 8006c64:	6020      	str	r0, [r4, #0]
 8006c66:	0029      	movs	r1, r5
 8006c68:	0030      	movs	r0, r6
 8006c6a:	f000 f983 	bl	8006f74 <_sbrk_r>
 8006c6e:	1c43      	adds	r3, r0, #1
 8006c70:	d12c      	bne.n	8006ccc <_malloc_r+0x9c>
 8006c72:	230c      	movs	r3, #12
 8006c74:	0030      	movs	r0, r6
 8006c76:	6033      	str	r3, [r6, #0]
 8006c78:	f000 fa4b 	bl	8007112 <__malloc_unlock>
 8006c7c:	e003      	b.n	8006c86 <_malloc_r+0x56>
 8006c7e:	2d00      	cmp	r5, #0
 8006c80:	dadf      	bge.n	8006c42 <_malloc_r+0x12>
 8006c82:	230c      	movs	r3, #12
 8006c84:	6033      	str	r3, [r6, #0]
 8006c86:	2000      	movs	r0, #0
 8006c88:	bd70      	pop	{r4, r5, r6, pc}
 8006c8a:	680b      	ldr	r3, [r1, #0]
 8006c8c:	1b5b      	subs	r3, r3, r5
 8006c8e:	d41a      	bmi.n	8006cc6 <_malloc_r+0x96>
 8006c90:	2b0b      	cmp	r3, #11
 8006c92:	d903      	bls.n	8006c9c <_malloc_r+0x6c>
 8006c94:	600b      	str	r3, [r1, #0]
 8006c96:	18cc      	adds	r4, r1, r3
 8006c98:	6025      	str	r5, [r4, #0]
 8006c9a:	e003      	b.n	8006ca4 <_malloc_r+0x74>
 8006c9c:	428c      	cmp	r4, r1
 8006c9e:	d10e      	bne.n	8006cbe <_malloc_r+0x8e>
 8006ca0:	6863      	ldr	r3, [r4, #4]
 8006ca2:	6013      	str	r3, [r2, #0]
 8006ca4:	0030      	movs	r0, r6
 8006ca6:	f000 fa34 	bl	8007112 <__malloc_unlock>
 8006caa:	0020      	movs	r0, r4
 8006cac:	2207      	movs	r2, #7
 8006cae:	300b      	adds	r0, #11
 8006cb0:	1d23      	adds	r3, r4, #4
 8006cb2:	4390      	bics	r0, r2
 8006cb4:	1ac3      	subs	r3, r0, r3
 8006cb6:	d0e7      	beq.n	8006c88 <_malloc_r+0x58>
 8006cb8:	425a      	negs	r2, r3
 8006cba:	50e2      	str	r2, [r4, r3]
 8006cbc:	e7e4      	b.n	8006c88 <_malloc_r+0x58>
 8006cbe:	684b      	ldr	r3, [r1, #4]
 8006cc0:	6063      	str	r3, [r4, #4]
 8006cc2:	000c      	movs	r4, r1
 8006cc4:	e7ee      	b.n	8006ca4 <_malloc_r+0x74>
 8006cc6:	000c      	movs	r4, r1
 8006cc8:	6849      	ldr	r1, [r1, #4]
 8006cca:	e7c2      	b.n	8006c52 <_malloc_r+0x22>
 8006ccc:	2303      	movs	r3, #3
 8006cce:	1cc4      	adds	r4, r0, #3
 8006cd0:	439c      	bics	r4, r3
 8006cd2:	42a0      	cmp	r0, r4
 8006cd4:	d0e0      	beq.n	8006c98 <_malloc_r+0x68>
 8006cd6:	1a21      	subs	r1, r4, r0
 8006cd8:	0030      	movs	r0, r6
 8006cda:	f000 f94b 	bl	8006f74 <_sbrk_r>
 8006cde:	1c43      	adds	r3, r0, #1
 8006ce0:	d1da      	bne.n	8006c98 <_malloc_r+0x68>
 8006ce2:	e7c6      	b.n	8006c72 <_malloc_r+0x42>
 8006ce4:	200001fc 	.word	0x200001fc
 8006ce8:	20000200 	.word	0x20000200

08006cec <__sfputc_r>:
 8006cec:	6893      	ldr	r3, [r2, #8]
 8006cee:	b510      	push	{r4, lr}
 8006cf0:	3b01      	subs	r3, #1
 8006cf2:	6093      	str	r3, [r2, #8]
 8006cf4:	2b00      	cmp	r3, #0
 8006cf6:	da05      	bge.n	8006d04 <__sfputc_r+0x18>
 8006cf8:	6994      	ldr	r4, [r2, #24]
 8006cfa:	42a3      	cmp	r3, r4
 8006cfc:	db08      	blt.n	8006d10 <__sfputc_r+0x24>
 8006cfe:	b2cb      	uxtb	r3, r1
 8006d00:	2b0a      	cmp	r3, #10
 8006d02:	d005      	beq.n	8006d10 <__sfputc_r+0x24>
 8006d04:	6813      	ldr	r3, [r2, #0]
 8006d06:	1c58      	adds	r0, r3, #1
 8006d08:	6010      	str	r0, [r2, #0]
 8006d0a:	7019      	strb	r1, [r3, #0]
 8006d0c:	b2c8      	uxtb	r0, r1
 8006d0e:	bd10      	pop	{r4, pc}
 8006d10:	f7fe faf8 	bl	8005304 <__swbuf_r>
 8006d14:	e7fb      	b.n	8006d0e <__sfputc_r+0x22>

08006d16 <__sfputs_r>:
 8006d16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006d18:	0006      	movs	r6, r0
 8006d1a:	000f      	movs	r7, r1
 8006d1c:	0014      	movs	r4, r2
 8006d1e:	18d5      	adds	r5, r2, r3
 8006d20:	42ac      	cmp	r4, r5
 8006d22:	d101      	bne.n	8006d28 <__sfputs_r+0x12>
 8006d24:	2000      	movs	r0, #0
 8006d26:	e007      	b.n	8006d38 <__sfputs_r+0x22>
 8006d28:	7821      	ldrb	r1, [r4, #0]
 8006d2a:	003a      	movs	r2, r7
 8006d2c:	0030      	movs	r0, r6
 8006d2e:	f7ff ffdd 	bl	8006cec <__sfputc_r>
 8006d32:	3401      	adds	r4, #1
 8006d34:	1c43      	adds	r3, r0, #1
 8006d36:	d1f3      	bne.n	8006d20 <__sfputs_r+0xa>
 8006d38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006d3c <_vfiprintf_r>:
 8006d3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d3e:	b09f      	sub	sp, #124	; 0x7c
 8006d40:	0006      	movs	r6, r0
 8006d42:	000f      	movs	r7, r1
 8006d44:	0014      	movs	r4, r2
 8006d46:	9305      	str	r3, [sp, #20]
 8006d48:	2800      	cmp	r0, #0
 8006d4a:	d004      	beq.n	8006d56 <_vfiprintf_r+0x1a>
 8006d4c:	6983      	ldr	r3, [r0, #24]
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d101      	bne.n	8006d56 <_vfiprintf_r+0x1a>
 8006d52:	f7ff fb07 	bl	8006364 <__sinit>
 8006d56:	4b7f      	ldr	r3, [pc, #508]	; (8006f54 <_vfiprintf_r+0x218>)
 8006d58:	429f      	cmp	r7, r3
 8006d5a:	d15c      	bne.n	8006e16 <_vfiprintf_r+0xda>
 8006d5c:	6877      	ldr	r7, [r6, #4]
 8006d5e:	89bb      	ldrh	r3, [r7, #12]
 8006d60:	071b      	lsls	r3, r3, #28
 8006d62:	d562      	bpl.n	8006e2a <_vfiprintf_r+0xee>
 8006d64:	693b      	ldr	r3, [r7, #16]
 8006d66:	2b00      	cmp	r3, #0
 8006d68:	d05f      	beq.n	8006e2a <_vfiprintf_r+0xee>
 8006d6a:	2300      	movs	r3, #0
 8006d6c:	ad06      	add	r5, sp, #24
 8006d6e:	616b      	str	r3, [r5, #20]
 8006d70:	3320      	adds	r3, #32
 8006d72:	766b      	strb	r3, [r5, #25]
 8006d74:	3310      	adds	r3, #16
 8006d76:	76ab      	strb	r3, [r5, #26]
 8006d78:	9402      	str	r4, [sp, #8]
 8006d7a:	9c02      	ldr	r4, [sp, #8]
 8006d7c:	7823      	ldrb	r3, [r4, #0]
 8006d7e:	2b00      	cmp	r3, #0
 8006d80:	d15d      	bne.n	8006e3e <_vfiprintf_r+0x102>
 8006d82:	9b02      	ldr	r3, [sp, #8]
 8006d84:	1ae3      	subs	r3, r4, r3
 8006d86:	9304      	str	r3, [sp, #16]
 8006d88:	d00d      	beq.n	8006da6 <_vfiprintf_r+0x6a>
 8006d8a:	9b04      	ldr	r3, [sp, #16]
 8006d8c:	9a02      	ldr	r2, [sp, #8]
 8006d8e:	0039      	movs	r1, r7
 8006d90:	0030      	movs	r0, r6
 8006d92:	f7ff ffc0 	bl	8006d16 <__sfputs_r>
 8006d96:	1c43      	adds	r3, r0, #1
 8006d98:	d100      	bne.n	8006d9c <_vfiprintf_r+0x60>
 8006d9a:	e0cc      	b.n	8006f36 <_vfiprintf_r+0x1fa>
 8006d9c:	696a      	ldr	r2, [r5, #20]
 8006d9e:	9b04      	ldr	r3, [sp, #16]
 8006da0:	4694      	mov	ip, r2
 8006da2:	4463      	add	r3, ip
 8006da4:	616b      	str	r3, [r5, #20]
 8006da6:	7823      	ldrb	r3, [r4, #0]
 8006da8:	2b00      	cmp	r3, #0
 8006daa:	d100      	bne.n	8006dae <_vfiprintf_r+0x72>
 8006dac:	e0c3      	b.n	8006f36 <_vfiprintf_r+0x1fa>
 8006dae:	2201      	movs	r2, #1
 8006db0:	2300      	movs	r3, #0
 8006db2:	4252      	negs	r2, r2
 8006db4:	606a      	str	r2, [r5, #4]
 8006db6:	a902      	add	r1, sp, #8
 8006db8:	3254      	adds	r2, #84	; 0x54
 8006dba:	1852      	adds	r2, r2, r1
 8006dbc:	3401      	adds	r4, #1
 8006dbe:	602b      	str	r3, [r5, #0]
 8006dc0:	60eb      	str	r3, [r5, #12]
 8006dc2:	60ab      	str	r3, [r5, #8]
 8006dc4:	7013      	strb	r3, [r2, #0]
 8006dc6:	65ab      	str	r3, [r5, #88]	; 0x58
 8006dc8:	7821      	ldrb	r1, [r4, #0]
 8006dca:	2205      	movs	r2, #5
 8006dcc:	4862      	ldr	r0, [pc, #392]	; (8006f58 <_vfiprintf_r+0x21c>)
 8006dce:	f7ff fbe1 	bl	8006594 <memchr>
 8006dd2:	1c63      	adds	r3, r4, #1
 8006dd4:	469c      	mov	ip, r3
 8006dd6:	2800      	cmp	r0, #0
 8006dd8:	d135      	bne.n	8006e46 <_vfiprintf_r+0x10a>
 8006dda:	6829      	ldr	r1, [r5, #0]
 8006ddc:	06cb      	lsls	r3, r1, #27
 8006dde:	d504      	bpl.n	8006dea <_vfiprintf_r+0xae>
 8006de0:	2353      	movs	r3, #83	; 0x53
 8006de2:	aa02      	add	r2, sp, #8
 8006de4:	3020      	adds	r0, #32
 8006de6:	189b      	adds	r3, r3, r2
 8006de8:	7018      	strb	r0, [r3, #0]
 8006dea:	070b      	lsls	r3, r1, #28
 8006dec:	d504      	bpl.n	8006df8 <_vfiprintf_r+0xbc>
 8006dee:	2353      	movs	r3, #83	; 0x53
 8006df0:	202b      	movs	r0, #43	; 0x2b
 8006df2:	aa02      	add	r2, sp, #8
 8006df4:	189b      	adds	r3, r3, r2
 8006df6:	7018      	strb	r0, [r3, #0]
 8006df8:	7823      	ldrb	r3, [r4, #0]
 8006dfa:	2b2a      	cmp	r3, #42	; 0x2a
 8006dfc:	d02c      	beq.n	8006e58 <_vfiprintf_r+0x11c>
 8006dfe:	2000      	movs	r0, #0
 8006e00:	210a      	movs	r1, #10
 8006e02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e04:	7822      	ldrb	r2, [r4, #0]
 8006e06:	3a30      	subs	r2, #48	; 0x30
 8006e08:	2a09      	cmp	r2, #9
 8006e0a:	d800      	bhi.n	8006e0e <_vfiprintf_r+0xd2>
 8006e0c:	e06b      	b.n	8006ee6 <_vfiprintf_r+0x1aa>
 8006e0e:	2800      	cmp	r0, #0
 8006e10:	d02a      	beq.n	8006e68 <_vfiprintf_r+0x12c>
 8006e12:	9309      	str	r3, [sp, #36]	; 0x24
 8006e14:	e028      	b.n	8006e68 <_vfiprintf_r+0x12c>
 8006e16:	4b51      	ldr	r3, [pc, #324]	; (8006f5c <_vfiprintf_r+0x220>)
 8006e18:	429f      	cmp	r7, r3
 8006e1a:	d101      	bne.n	8006e20 <_vfiprintf_r+0xe4>
 8006e1c:	68b7      	ldr	r7, [r6, #8]
 8006e1e:	e79e      	b.n	8006d5e <_vfiprintf_r+0x22>
 8006e20:	4b4f      	ldr	r3, [pc, #316]	; (8006f60 <_vfiprintf_r+0x224>)
 8006e22:	429f      	cmp	r7, r3
 8006e24:	d19b      	bne.n	8006d5e <_vfiprintf_r+0x22>
 8006e26:	68f7      	ldr	r7, [r6, #12]
 8006e28:	e799      	b.n	8006d5e <_vfiprintf_r+0x22>
 8006e2a:	0039      	movs	r1, r7
 8006e2c:	0030      	movs	r0, r6
 8006e2e:	f7fe fabf 	bl	80053b0 <__swsetup_r>
 8006e32:	2800      	cmp	r0, #0
 8006e34:	d099      	beq.n	8006d6a <_vfiprintf_r+0x2e>
 8006e36:	2001      	movs	r0, #1
 8006e38:	4240      	negs	r0, r0
 8006e3a:	b01f      	add	sp, #124	; 0x7c
 8006e3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006e3e:	2b25      	cmp	r3, #37	; 0x25
 8006e40:	d09f      	beq.n	8006d82 <_vfiprintf_r+0x46>
 8006e42:	3401      	adds	r4, #1
 8006e44:	e79a      	b.n	8006d7c <_vfiprintf_r+0x40>
 8006e46:	4b44      	ldr	r3, [pc, #272]	; (8006f58 <_vfiprintf_r+0x21c>)
 8006e48:	6829      	ldr	r1, [r5, #0]
 8006e4a:	1ac0      	subs	r0, r0, r3
 8006e4c:	2301      	movs	r3, #1
 8006e4e:	4083      	lsls	r3, r0
 8006e50:	430b      	orrs	r3, r1
 8006e52:	602b      	str	r3, [r5, #0]
 8006e54:	4664      	mov	r4, ip
 8006e56:	e7b7      	b.n	8006dc8 <_vfiprintf_r+0x8c>
 8006e58:	9b05      	ldr	r3, [sp, #20]
 8006e5a:	1d18      	adds	r0, r3, #4
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	9005      	str	r0, [sp, #20]
 8006e60:	2b00      	cmp	r3, #0
 8006e62:	db3a      	blt.n	8006eda <_vfiprintf_r+0x19e>
 8006e64:	9309      	str	r3, [sp, #36]	; 0x24
 8006e66:	4664      	mov	r4, ip
 8006e68:	7823      	ldrb	r3, [r4, #0]
 8006e6a:	2b2e      	cmp	r3, #46	; 0x2e
 8006e6c:	d10b      	bne.n	8006e86 <_vfiprintf_r+0x14a>
 8006e6e:	7863      	ldrb	r3, [r4, #1]
 8006e70:	1c62      	adds	r2, r4, #1
 8006e72:	2b2a      	cmp	r3, #42	; 0x2a
 8006e74:	d13f      	bne.n	8006ef6 <_vfiprintf_r+0x1ba>
 8006e76:	9b05      	ldr	r3, [sp, #20]
 8006e78:	3402      	adds	r4, #2
 8006e7a:	1d1a      	adds	r2, r3, #4
 8006e7c:	681b      	ldr	r3, [r3, #0]
 8006e7e:	9205      	str	r2, [sp, #20]
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	db35      	blt.n	8006ef0 <_vfiprintf_r+0x1b4>
 8006e84:	9307      	str	r3, [sp, #28]
 8006e86:	7821      	ldrb	r1, [r4, #0]
 8006e88:	2203      	movs	r2, #3
 8006e8a:	4836      	ldr	r0, [pc, #216]	; (8006f64 <_vfiprintf_r+0x228>)
 8006e8c:	f7ff fb82 	bl	8006594 <memchr>
 8006e90:	2800      	cmp	r0, #0
 8006e92:	d007      	beq.n	8006ea4 <_vfiprintf_r+0x168>
 8006e94:	4b33      	ldr	r3, [pc, #204]	; (8006f64 <_vfiprintf_r+0x228>)
 8006e96:	682a      	ldr	r2, [r5, #0]
 8006e98:	1ac0      	subs	r0, r0, r3
 8006e9a:	2340      	movs	r3, #64	; 0x40
 8006e9c:	4083      	lsls	r3, r0
 8006e9e:	4313      	orrs	r3, r2
 8006ea0:	602b      	str	r3, [r5, #0]
 8006ea2:	3401      	adds	r4, #1
 8006ea4:	7821      	ldrb	r1, [r4, #0]
 8006ea6:	1c63      	adds	r3, r4, #1
 8006ea8:	2206      	movs	r2, #6
 8006eaa:	482f      	ldr	r0, [pc, #188]	; (8006f68 <_vfiprintf_r+0x22c>)
 8006eac:	9302      	str	r3, [sp, #8]
 8006eae:	7629      	strb	r1, [r5, #24]
 8006eb0:	f7ff fb70 	bl	8006594 <memchr>
 8006eb4:	2800      	cmp	r0, #0
 8006eb6:	d044      	beq.n	8006f42 <_vfiprintf_r+0x206>
 8006eb8:	4b2c      	ldr	r3, [pc, #176]	; (8006f6c <_vfiprintf_r+0x230>)
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d12f      	bne.n	8006f1e <_vfiprintf_r+0x1e2>
 8006ebe:	6829      	ldr	r1, [r5, #0]
 8006ec0:	9b05      	ldr	r3, [sp, #20]
 8006ec2:	2207      	movs	r2, #7
 8006ec4:	05c9      	lsls	r1, r1, #23
 8006ec6:	d528      	bpl.n	8006f1a <_vfiprintf_r+0x1de>
 8006ec8:	189b      	adds	r3, r3, r2
 8006eca:	4393      	bics	r3, r2
 8006ecc:	3308      	adds	r3, #8
 8006ece:	9305      	str	r3, [sp, #20]
 8006ed0:	696b      	ldr	r3, [r5, #20]
 8006ed2:	9a03      	ldr	r2, [sp, #12]
 8006ed4:	189b      	adds	r3, r3, r2
 8006ed6:	616b      	str	r3, [r5, #20]
 8006ed8:	e74f      	b.n	8006d7a <_vfiprintf_r+0x3e>
 8006eda:	425b      	negs	r3, r3
 8006edc:	60eb      	str	r3, [r5, #12]
 8006ede:	2302      	movs	r3, #2
 8006ee0:	430b      	orrs	r3, r1
 8006ee2:	602b      	str	r3, [r5, #0]
 8006ee4:	e7bf      	b.n	8006e66 <_vfiprintf_r+0x12a>
 8006ee6:	434b      	muls	r3, r1
 8006ee8:	3401      	adds	r4, #1
 8006eea:	189b      	adds	r3, r3, r2
 8006eec:	2001      	movs	r0, #1
 8006eee:	e789      	b.n	8006e04 <_vfiprintf_r+0xc8>
 8006ef0:	2301      	movs	r3, #1
 8006ef2:	425b      	negs	r3, r3
 8006ef4:	e7c6      	b.n	8006e84 <_vfiprintf_r+0x148>
 8006ef6:	2300      	movs	r3, #0
 8006ef8:	0014      	movs	r4, r2
 8006efa:	200a      	movs	r0, #10
 8006efc:	001a      	movs	r2, r3
 8006efe:	606b      	str	r3, [r5, #4]
 8006f00:	7821      	ldrb	r1, [r4, #0]
 8006f02:	3930      	subs	r1, #48	; 0x30
 8006f04:	2909      	cmp	r1, #9
 8006f06:	d903      	bls.n	8006f10 <_vfiprintf_r+0x1d4>
 8006f08:	2b00      	cmp	r3, #0
 8006f0a:	d0bc      	beq.n	8006e86 <_vfiprintf_r+0x14a>
 8006f0c:	9207      	str	r2, [sp, #28]
 8006f0e:	e7ba      	b.n	8006e86 <_vfiprintf_r+0x14a>
 8006f10:	4342      	muls	r2, r0
 8006f12:	3401      	adds	r4, #1
 8006f14:	1852      	adds	r2, r2, r1
 8006f16:	2301      	movs	r3, #1
 8006f18:	e7f2      	b.n	8006f00 <_vfiprintf_r+0x1c4>
 8006f1a:	3307      	adds	r3, #7
 8006f1c:	e7d5      	b.n	8006eca <_vfiprintf_r+0x18e>
 8006f1e:	ab05      	add	r3, sp, #20
 8006f20:	9300      	str	r3, [sp, #0]
 8006f22:	003a      	movs	r2, r7
 8006f24:	4b12      	ldr	r3, [pc, #72]	; (8006f70 <_vfiprintf_r+0x234>)
 8006f26:	0029      	movs	r1, r5
 8006f28:	0030      	movs	r0, r6
 8006f2a:	f7fd fd93 	bl	8004a54 <_printf_float>
 8006f2e:	9003      	str	r0, [sp, #12]
 8006f30:	9b03      	ldr	r3, [sp, #12]
 8006f32:	3301      	adds	r3, #1
 8006f34:	d1cc      	bne.n	8006ed0 <_vfiprintf_r+0x194>
 8006f36:	89bb      	ldrh	r3, [r7, #12]
 8006f38:	065b      	lsls	r3, r3, #25
 8006f3a:	d500      	bpl.n	8006f3e <_vfiprintf_r+0x202>
 8006f3c:	e77b      	b.n	8006e36 <_vfiprintf_r+0xfa>
 8006f3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006f40:	e77b      	b.n	8006e3a <_vfiprintf_r+0xfe>
 8006f42:	ab05      	add	r3, sp, #20
 8006f44:	9300      	str	r3, [sp, #0]
 8006f46:	003a      	movs	r2, r7
 8006f48:	4b09      	ldr	r3, [pc, #36]	; (8006f70 <_vfiprintf_r+0x234>)
 8006f4a:	0029      	movs	r1, r5
 8006f4c:	0030      	movs	r0, r6
 8006f4e:	f7fe f83b 	bl	8004fc8 <_printf_i>
 8006f52:	e7ec      	b.n	8006f2e <_vfiprintf_r+0x1f2>
 8006f54:	08007338 	.word	0x08007338
 8006f58:	08007474 	.word	0x08007474
 8006f5c:	08007358 	.word	0x08007358
 8006f60:	08007318 	.word	0x08007318
 8006f64:	0800747a 	.word	0x0800747a
 8006f68:	0800747e 	.word	0x0800747e
 8006f6c:	08004a55 	.word	0x08004a55
 8006f70:	08006d17 	.word	0x08006d17

08006f74 <_sbrk_r>:
 8006f74:	2300      	movs	r3, #0
 8006f76:	b570      	push	{r4, r5, r6, lr}
 8006f78:	4c06      	ldr	r4, [pc, #24]	; (8006f94 <_sbrk_r+0x20>)
 8006f7a:	0005      	movs	r5, r0
 8006f7c:	0008      	movs	r0, r1
 8006f7e:	6023      	str	r3, [r4, #0]
 8006f80:	f7fd fc42 	bl	8004808 <_sbrk>
 8006f84:	1c43      	adds	r3, r0, #1
 8006f86:	d103      	bne.n	8006f90 <_sbrk_r+0x1c>
 8006f88:	6823      	ldr	r3, [r4, #0]
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	d000      	beq.n	8006f90 <_sbrk_r+0x1c>
 8006f8e:	602b      	str	r3, [r5, #0]
 8006f90:	bd70      	pop	{r4, r5, r6, pc}
 8006f92:	46c0      	nop			; (mov r8, r8)
 8006f94:	200002e0 	.word	0x200002e0

08006f98 <__sread>:
 8006f98:	b570      	push	{r4, r5, r6, lr}
 8006f9a:	000c      	movs	r4, r1
 8006f9c:	250e      	movs	r5, #14
 8006f9e:	5f49      	ldrsh	r1, [r1, r5]
 8006fa0:	f000 f8b8 	bl	8007114 <_read_r>
 8006fa4:	2800      	cmp	r0, #0
 8006fa6:	db03      	blt.n	8006fb0 <__sread+0x18>
 8006fa8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006faa:	181b      	adds	r3, r3, r0
 8006fac:	6563      	str	r3, [r4, #84]	; 0x54
 8006fae:	bd70      	pop	{r4, r5, r6, pc}
 8006fb0:	89a3      	ldrh	r3, [r4, #12]
 8006fb2:	4a02      	ldr	r2, [pc, #8]	; (8006fbc <__sread+0x24>)
 8006fb4:	4013      	ands	r3, r2
 8006fb6:	81a3      	strh	r3, [r4, #12]
 8006fb8:	e7f9      	b.n	8006fae <__sread+0x16>
 8006fba:	46c0      	nop			; (mov r8, r8)
 8006fbc:	ffffefff 	.word	0xffffefff

08006fc0 <__swrite>:
 8006fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006fc2:	001f      	movs	r7, r3
 8006fc4:	898b      	ldrh	r3, [r1, #12]
 8006fc6:	0005      	movs	r5, r0
 8006fc8:	000c      	movs	r4, r1
 8006fca:	0016      	movs	r6, r2
 8006fcc:	05db      	lsls	r3, r3, #23
 8006fce:	d505      	bpl.n	8006fdc <__swrite+0x1c>
 8006fd0:	230e      	movs	r3, #14
 8006fd2:	5ec9      	ldrsh	r1, [r1, r3]
 8006fd4:	2200      	movs	r2, #0
 8006fd6:	2302      	movs	r3, #2
 8006fd8:	f000 f874 	bl	80070c4 <_lseek_r>
 8006fdc:	89a3      	ldrh	r3, [r4, #12]
 8006fde:	4a05      	ldr	r2, [pc, #20]	; (8006ff4 <__swrite+0x34>)
 8006fe0:	0028      	movs	r0, r5
 8006fe2:	4013      	ands	r3, r2
 8006fe4:	81a3      	strh	r3, [r4, #12]
 8006fe6:	0032      	movs	r2, r6
 8006fe8:	230e      	movs	r3, #14
 8006fea:	5ee1      	ldrsh	r1, [r4, r3]
 8006fec:	003b      	movs	r3, r7
 8006fee:	f000 f81f 	bl	8007030 <_write_r>
 8006ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006ff4:	ffffefff 	.word	0xffffefff

08006ff8 <__sseek>:
 8006ff8:	b570      	push	{r4, r5, r6, lr}
 8006ffa:	000c      	movs	r4, r1
 8006ffc:	250e      	movs	r5, #14
 8006ffe:	5f49      	ldrsh	r1, [r1, r5]
 8007000:	f000 f860 	bl	80070c4 <_lseek_r>
 8007004:	89a3      	ldrh	r3, [r4, #12]
 8007006:	1c42      	adds	r2, r0, #1
 8007008:	d103      	bne.n	8007012 <__sseek+0x1a>
 800700a:	4a05      	ldr	r2, [pc, #20]	; (8007020 <__sseek+0x28>)
 800700c:	4013      	ands	r3, r2
 800700e:	81a3      	strh	r3, [r4, #12]
 8007010:	bd70      	pop	{r4, r5, r6, pc}
 8007012:	2280      	movs	r2, #128	; 0x80
 8007014:	0152      	lsls	r2, r2, #5
 8007016:	4313      	orrs	r3, r2
 8007018:	81a3      	strh	r3, [r4, #12]
 800701a:	6560      	str	r0, [r4, #84]	; 0x54
 800701c:	e7f8      	b.n	8007010 <__sseek+0x18>
 800701e:	46c0      	nop			; (mov r8, r8)
 8007020:	ffffefff 	.word	0xffffefff

08007024 <__sclose>:
 8007024:	b510      	push	{r4, lr}
 8007026:	230e      	movs	r3, #14
 8007028:	5ec9      	ldrsh	r1, [r1, r3]
 800702a:	f000 f815 	bl	8007058 <_close_r>
 800702e:	bd10      	pop	{r4, pc}

08007030 <_write_r>:
 8007030:	b570      	push	{r4, r5, r6, lr}
 8007032:	0005      	movs	r5, r0
 8007034:	0008      	movs	r0, r1
 8007036:	0011      	movs	r1, r2
 8007038:	2200      	movs	r2, #0
 800703a:	4c06      	ldr	r4, [pc, #24]	; (8007054 <_write_r+0x24>)
 800703c:	6022      	str	r2, [r4, #0]
 800703e:	001a      	movs	r2, r3
 8007040:	f7fd fb2c 	bl	800469c <_write>
 8007044:	1c43      	adds	r3, r0, #1
 8007046:	d103      	bne.n	8007050 <_write_r+0x20>
 8007048:	6823      	ldr	r3, [r4, #0]
 800704a:	2b00      	cmp	r3, #0
 800704c:	d000      	beq.n	8007050 <_write_r+0x20>
 800704e:	602b      	str	r3, [r5, #0]
 8007050:	bd70      	pop	{r4, r5, r6, pc}
 8007052:	46c0      	nop			; (mov r8, r8)
 8007054:	200002e0 	.word	0x200002e0

08007058 <_close_r>:
 8007058:	2300      	movs	r3, #0
 800705a:	b570      	push	{r4, r5, r6, lr}
 800705c:	4c06      	ldr	r4, [pc, #24]	; (8007078 <_close_r+0x20>)
 800705e:	0005      	movs	r5, r0
 8007060:	0008      	movs	r0, r1
 8007062:	6023      	str	r3, [r4, #0]
 8007064:	f7fd fbea 	bl	800483c <_close>
 8007068:	1c43      	adds	r3, r0, #1
 800706a:	d103      	bne.n	8007074 <_close_r+0x1c>
 800706c:	6823      	ldr	r3, [r4, #0]
 800706e:	2b00      	cmp	r3, #0
 8007070:	d000      	beq.n	8007074 <_close_r+0x1c>
 8007072:	602b      	str	r3, [r5, #0]
 8007074:	bd70      	pop	{r4, r5, r6, pc}
 8007076:	46c0      	nop			; (mov r8, r8)
 8007078:	200002e0 	.word	0x200002e0

0800707c <_fstat_r>:
 800707c:	2300      	movs	r3, #0
 800707e:	b570      	push	{r4, r5, r6, lr}
 8007080:	4c06      	ldr	r4, [pc, #24]	; (800709c <_fstat_r+0x20>)
 8007082:	0005      	movs	r5, r0
 8007084:	0008      	movs	r0, r1
 8007086:	0011      	movs	r1, r2
 8007088:	6023      	str	r3, [r4, #0]
 800708a:	f7fd fbda 	bl	8004842 <_fstat>
 800708e:	1c43      	adds	r3, r0, #1
 8007090:	d103      	bne.n	800709a <_fstat_r+0x1e>
 8007092:	6823      	ldr	r3, [r4, #0]
 8007094:	2b00      	cmp	r3, #0
 8007096:	d000      	beq.n	800709a <_fstat_r+0x1e>
 8007098:	602b      	str	r3, [r5, #0]
 800709a:	bd70      	pop	{r4, r5, r6, pc}
 800709c:	200002e0 	.word	0x200002e0

080070a0 <_isatty_r>:
 80070a0:	2300      	movs	r3, #0
 80070a2:	b570      	push	{r4, r5, r6, lr}
 80070a4:	4c06      	ldr	r4, [pc, #24]	; (80070c0 <_isatty_r+0x20>)
 80070a6:	0005      	movs	r5, r0
 80070a8:	0008      	movs	r0, r1
 80070aa:	6023      	str	r3, [r4, #0]
 80070ac:	f7fd fbce 	bl	800484c <_isatty>
 80070b0:	1c43      	adds	r3, r0, #1
 80070b2:	d103      	bne.n	80070bc <_isatty_r+0x1c>
 80070b4:	6823      	ldr	r3, [r4, #0]
 80070b6:	2b00      	cmp	r3, #0
 80070b8:	d000      	beq.n	80070bc <_isatty_r+0x1c>
 80070ba:	602b      	str	r3, [r5, #0]
 80070bc:	bd70      	pop	{r4, r5, r6, pc}
 80070be:	46c0      	nop			; (mov r8, r8)
 80070c0:	200002e0 	.word	0x200002e0

080070c4 <_lseek_r>:
 80070c4:	b570      	push	{r4, r5, r6, lr}
 80070c6:	0005      	movs	r5, r0
 80070c8:	0008      	movs	r0, r1
 80070ca:	0011      	movs	r1, r2
 80070cc:	2200      	movs	r2, #0
 80070ce:	4c06      	ldr	r4, [pc, #24]	; (80070e8 <_lseek_r+0x24>)
 80070d0:	6022      	str	r2, [r4, #0]
 80070d2:	001a      	movs	r2, r3
 80070d4:	f7fd fbbc 	bl	8004850 <_lseek>
 80070d8:	1c43      	adds	r3, r0, #1
 80070da:	d103      	bne.n	80070e4 <_lseek_r+0x20>
 80070dc:	6823      	ldr	r3, [r4, #0]
 80070de:	2b00      	cmp	r3, #0
 80070e0:	d000      	beq.n	80070e4 <_lseek_r+0x20>
 80070e2:	602b      	str	r3, [r5, #0]
 80070e4:	bd70      	pop	{r4, r5, r6, pc}
 80070e6:	46c0      	nop			; (mov r8, r8)
 80070e8:	200002e0 	.word	0x200002e0

080070ec <__ascii_mbtowc>:
 80070ec:	b082      	sub	sp, #8
 80070ee:	2900      	cmp	r1, #0
 80070f0:	d100      	bne.n	80070f4 <__ascii_mbtowc+0x8>
 80070f2:	a901      	add	r1, sp, #4
 80070f4:	1e10      	subs	r0, r2, #0
 80070f6:	d006      	beq.n	8007106 <__ascii_mbtowc+0x1a>
 80070f8:	2b00      	cmp	r3, #0
 80070fa:	d006      	beq.n	800710a <__ascii_mbtowc+0x1e>
 80070fc:	7813      	ldrb	r3, [r2, #0]
 80070fe:	600b      	str	r3, [r1, #0]
 8007100:	7810      	ldrb	r0, [r2, #0]
 8007102:	1e43      	subs	r3, r0, #1
 8007104:	4198      	sbcs	r0, r3
 8007106:	b002      	add	sp, #8
 8007108:	4770      	bx	lr
 800710a:	2002      	movs	r0, #2
 800710c:	4240      	negs	r0, r0
 800710e:	e7fa      	b.n	8007106 <__ascii_mbtowc+0x1a>

08007110 <__malloc_lock>:
 8007110:	4770      	bx	lr

08007112 <__malloc_unlock>:
 8007112:	4770      	bx	lr

08007114 <_read_r>:
 8007114:	b570      	push	{r4, r5, r6, lr}
 8007116:	0005      	movs	r5, r0
 8007118:	0008      	movs	r0, r1
 800711a:	0011      	movs	r1, r2
 800711c:	2200      	movs	r2, #0
 800711e:	4c06      	ldr	r4, [pc, #24]	; (8007138 <_read_r+0x24>)
 8007120:	6022      	str	r2, [r4, #0]
 8007122:	001a      	movs	r2, r3
 8007124:	f7fd fb62 	bl	80047ec <_read>
 8007128:	1c43      	adds	r3, r0, #1
 800712a:	d103      	bne.n	8007134 <_read_r+0x20>
 800712c:	6823      	ldr	r3, [r4, #0]
 800712e:	2b00      	cmp	r3, #0
 8007130:	d000      	beq.n	8007134 <_read_r+0x20>
 8007132:	602b      	str	r3, [r5, #0]
 8007134:	bd70      	pop	{r4, r5, r6, pc}
 8007136:	46c0      	nop			; (mov r8, r8)
 8007138:	200002e0 	.word	0x200002e0

0800713c <__ascii_wctomb>:
 800713c:	1e0b      	subs	r3, r1, #0
 800713e:	d004      	beq.n	800714a <__ascii_wctomb+0xe>
 8007140:	2aff      	cmp	r2, #255	; 0xff
 8007142:	d904      	bls.n	800714e <__ascii_wctomb+0x12>
 8007144:	238a      	movs	r3, #138	; 0x8a
 8007146:	6003      	str	r3, [r0, #0]
 8007148:	3b8b      	subs	r3, #139	; 0x8b
 800714a:	0018      	movs	r0, r3
 800714c:	4770      	bx	lr
 800714e:	700a      	strb	r2, [r1, #0]
 8007150:	2301      	movs	r3, #1
 8007152:	e7fa      	b.n	800714a <__ascii_wctomb+0xe>

08007154 <_init>:
 8007154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007156:	46c0      	nop			; (mov r8, r8)
 8007158:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800715a:	bc08      	pop	{r3}
 800715c:	469e      	mov	lr, r3
 800715e:	4770      	bx	lr

08007160 <_fini>:
 8007160:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007162:	46c0      	nop			; (mov r8, r8)
 8007164:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007166:	bc08      	pop	{r3}
 8007168:	469e      	mov	lr, r3
 800716a:	4770      	bx	lr
